%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 1601.m10.i304.n084.S.c12.210619630 Cartoon minerals and stones vector set.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For:  
%%CreationDate: 28.01.16
%%BoundingBox: 0 0 369 380
%%HiResBoundingBox: 0 0 368.2691 379.8583
%%CropBox: 0 0 368.2691 379.8583
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.0 x111 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">stones_set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-01-28T16:16:06+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-01-28T16:16:06+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-01-28T16:16:06+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FVKa7tYP7+aOL/XYL+s4CQE0g5/MegwCsmoQD2EisfuUk4OMd6eEr9N13SNTMq2F0lw0JpIq1qKi&#xA;vQ02364iQPJBBCOySHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWIecPOAs1k0/T3rd04zzr0ir+yp/n&#xA;/wCI5k4cNjiPJ4r2m9phpwcGA/vTzP8AN/4993v5c+s/PmoeUNdVGBudBvVjkltSQDHI0amV4idg&#xA;zMeRB2YnehPLBkg63sXt6WGoS9UAI337xG4+N+/3vWV82aFJoY1qC5E1kwpHw+20h/3VwNCH8VNK&#xA;d6ZVGBJoc3ttT2rgxac5zL0ff5DzeYav5h12XWBrVrP6Gow7QpuYfSrU28iinKNu/evxChAzLyYR&#xA;EcL5dD2o1B1f5j+Hlw9OHueleUPNll5l0z6zCpt7uE+nfWLkGSGWnQ06q3VG/aH3ZhSjT6roNdj1&#xA;WIZIHYp5gc12KuxV2KuxV2KuxV2KvNPzH83aja65BpunTSR+jHW4ETFCWk3G4PZR3zHyyNtsI7MW&#xA;lvry4+OS8eVT0ZnZj/HKbbaUWdNySzn32H8cCvLtR8769eVVJRaRH9i3BU/8GSX+45aIhhaP8nec&#xA;te02/jktzNNJGarLEC8g9mG/NT748t1fSXk7z3aa6q21wn1XU+NfRIIEgAqxSu+3cH/auhktrlCm&#xA;VZYwdirsVdirsVdirsVdirsVdirsVYp548y3Wm+hp1rWKe8jd/rPdUjKq4j/AMr4xv2r92TpsQnL&#xA;fk8l7Wds5dHiEcYo5L9Xd7vP7vfy5vO4J4r9kbk9ak9TmZnmDsOQfJBZ3PMoHzXp4utLtVUVlFuZ&#xA;E/1llkFPpAzGmLdviyeH4R6GJv8A082KaDq91azrHExJJ2jNeDmlOLgVoabBwKj3XbHDlMDbm6zF&#xA;xwon08/d5j9I6+RZjb3H1mH1CjRsSQ8bijBgaEf2jbLCb3efnDgNXay11a78vaimuWbqkkA4XULn&#xA;jHcQdWic7/F3RqbH2JGVShxPQdgdrZNLmFeqMuYe+oxZQxBUkAlTSor2NK5iPsgbxV2KuxV2KuxV&#xA;2Kqd1cxW1tLcymkUKNI5/wAlRU4CaUPni/1ObUNSubtqLJcytLJJtstagCuwzDLkhVspYvRWEOGd&#xA;Kk0DUAJr1pTAUpF5l17UorcrpMDTR0/eX8VJUUd6cOVPm2SAQSwS8upkshqM3F7q5mMcTFV6RqGk&#xA;YinWrpv165NiiPLWm695mvY7N76W204GlzdP6skcad/gTkzMR0UfTQVIdl3fT35XaJ5I0XTpLHy8&#xA;C12tGvbm4QrczduZqB8AOwUbD5mpugQeTVIHqzjJsXYq7FXYq7FXYq7FXYq7FXYqsmmighkmlYJF&#xA;EpeRz0CqKk/diwyZIwiZSNRAsvPfzKvdLu9P07V7G7imbT7gLcqki8hbXVInJT7Xwy+kx9gcytLI&#xA;wmLeO9ppYNboycU4zlD1CiL+XPyYNqCzRXJaMni4rTtXocy9RCpe98xwkGO6E1/VLuCPTUXjVrUs&#xA;SRUg/WZh/DI44A3buZaaEsWM/wBE/wC7mwC11HU77VFg9cpCXJZIgI1Kg1+IIFr9OCIFu0yYMePH&#xA;xVvXXf70XYX1y8txcQTOqzSkRcWK/AlETp7DBHfdozYogCJA2G/v6sjsLOXVvMthprkzpPdxQPU1&#xA;/chx6p/5FqxyeQ8ONs7F0wyZ4Rra7L6azVvrDsVdirHNa896Npk8ltR7i5j2ZEFFDDqCx/hXK5ZQ&#xA;GYgSkL/mpIJ0K6cDb1/eL6n7zjT9k0C1+f4dch4zLwmX6J5i0nWoDJYTh3QD1oG+GWMns6HcfPoe&#xA;xOXCQPJrIpiPnP8AMK7sr+TTNJCpJAQLm5deR59eCKdth1J+jxyrJkrYM4QvmxTUvOXmDU7GWznu&#xA;qJOvB14oFIqD2AplRmS2CIYLqes2WmE28ivPdqataQDmxb9nmwBVB959sAFptjurXvnTVY/TTTJ7&#xA;eyc7QxxtGjb7c2P2vpNPbCKCN0JB5P8AOkbJOiCybYrIZ44mFe4PLlh4giiyKbyPqd5BbzeZ72CG&#xA;K1Px3CNxcxsasj1VU5cuj1r48tsjxdzKk7gmW1s4YbIRpY8f3CwGsbdiS4JLHxqfngVkekalPE9v&#xA;PDKINQt9xSlR23XwYfaGAEg2FIt6p5c822erRrFNxttRGzW5Oz0/aiJ+0PbqPxzKhkEmmUKT7LGD&#xA;sVdirsVdirsVdirsVdirFPzI1YWWhpb8uBv5RDyOwooLsoPiePTwrlmIbvLe12qnj0ZjEH1mie4f&#xA;t5PFfNUzy6a9rA1DOCDIPah4/wCy7+2Z0IcVvmnZ0BHIJHoiNE1Y6p5ehuHPK7tj6N0D15rQVP8A&#xA;rChy+U+KF9Q06vTeDnMR9Mtwoa9K2oPYR2iiRrK0ZLsjYI3rzSKpPdmVxQDKMeSvm7eWWAw4gTVR&#xA;r/ZyP3HmwKyZrTT728faU/6PFXY836/SBv8ARgkaDs8o45xgOXP4JvoMAT6ohGyASOD/AJI5thA2&#xA;cHWTviP47non5N6Wb7zo184qmlW7y8vCa4rEn3x+rkNZLYB6T2V015JZP5op7tmA907FXYq8D813&#xA;8g8x38kbfC1xNVG3BpIRv92YcuZciPJYjBkVx+0Nx4HoR9+RZL4pJoJ0uLeV4LmI1iniYq6160I7&#xA;HuDse+EEhSLQhuLi7aW8uZPUmmkaSSUgDkzsTWigAfRiTZQA5ELNQfST0GBLDfzI1K6k1OLTy1LW&#xA;CNZAg2q7g1Zvem2TgGMmHZNiznTbme7itpkYmSVQXJP7S/C7N7VUk5WWTGvMV9eXGozQzSytBbu0&#xA;dvFKT8CKaAU+Q69TkwEFm1lALbSdMjSoH1WOT/ZSkyH8WyDJUVmVgykhhuCOtcVTew1l6cLogqtK&#xA;Sftddtu+RISnemfm0LPUF0437tceoIhaXMbtVjsoD02BrtRqZMSkGBiCzvyd+Zeg+ZJ7iwWQW2qW&#xA;sjRSWshAL8DxLR16iv05kRnbVKNMvybF2KuxV2KuxV2KuxVKvNGn6LqOjXFjrEqQ2kw2md1jMbjd&#xA;JEZtgyNuMIcfVY8c8ZjkrhPe+f5khknvNK+tQXlxatxFzbOskUhpWORChYAONiK/Cajtmbinvb5D&#xA;2hozpM1A8UOhHcl2g6RrH1y7uLUtb6ZdD0rmYr1lXciKopyAO57cvHLZyokDrzTrZxGKBnEkg+nu&#xA;+J/Rz2ZRFbQW1sIYECRr0A8Sakknck9zlTopZJTlxSNl575x0+aG/tbdY+FnPIzxkCgLMRz/AOBr&#xA;jLenqezMvFjMz9Q2+SOsCfVdY0Mk7RlYY1G5LEKfZRxJ3O2W8QDi5uQJNC93p35aa3ZeUkng1lVS&#xA;LU5VkbVozWKIhQiRTAgMqA1Ik6VJ5ccq1OGR9fMPR+zHb2nBOGXpJOxPX8fjveyAhgGU1B3BHQjM&#xA;F9AdiqU+ZfMuneX9Ne9vX33EMIPxSN4D+JyMpUkC3z5JfyajcyzvEweR2cFQWWjMWINAT3zEchCa&#xA;p5mm0lUWO3F4jMzzyK1EQmgC8lDAMaGoI22wgWtppouovq0EdxKrWUUg+FFYOTv1LlRsflgIpITC&#xA;7tPQRBGSYVAVQTWlBkQVUA3H7J3P4YVYB5//AOO8p8beL9VMshyYyY4ASaDcnoMkxZno9reWliLd&#xA;6NN8TOg3ZF2PH6DuaZAsgtu7O3uwROnJj+2NmB8QcQVRGk6pqMFzb6Vqam7spm9KzvlFJIWoSI38&#xA;RRdh/TYEKE2k9Kg9OvevL9eBKzCrEfMl9w16GRB+8tBGSelWU8xv8iMkBsxKm2rzaX5wl1S0ch7a&#xA;9kljZdiQJD+sYRyUvsHQtWt9Y0ez1O3YNDdxLIpFaVI3Ar4HMiJsNJFI7Ch2KuxV2KuxV5n+bmvS&#xA;C707Q7d6UDX18NiCm8UCMDUEM3Nv9gMtxR3t5H2s7ROHHHHE1KX3MFjvPLluYzcaVFHIxVfrFtGh&#xA;agG7FH+0x9nUZscUz3B8/jWYVKU48txIkeZMZHcnylEeSK1GztrsW1xBMBIgJjIjZHRSd45FYAbg&#xA;D7LEVpvleXIZHfo4ZEcNgSE4y9+3ddir9xkOlpctze6Jqnq2k8kMOobOVNF9Zd+LDoVkUdD4e+VS&#xA;NuVptVPguBMZR7usfPvo8/emkmstPZ3MktlDJcQR+qskamLlxdQQ6RlU48Sa8VU++ThGzTZAwzE8&#xA;UI8Q3uPp6jYiPpqu6IP9JhOsxa/rN5Hq0sE1zZ2KsktxHGTDDXdUpGOMa7k9AMlk4YyAd5gx5cmK&#xA;RAsChsNgPcNgGR6THZrZxm2VRzUM5G5Y06175W8tqjPjIl0R3163t1ZLll9JgQ0bUJIPX4e+X4Mh&#xA;G3MOL4Mpbx5s2/LPVpLS9OhSXDSWM8Rm0qKTf0vTpzhR61K8W5IlPhAam2wxtXh4fUBQL6T7H9tz&#xA;zg4MpuUBsep8npGYb3T578x63d6/rTT6hVo1bhDbgkIig0zDlIndyAKY/rzyto94kgKRrCxWNRxU&#xA;Bfj2H0YhJYDYNP8AWolgkaN5GCc4yVNGNOoyZYPVreH04o4lFeIA27nK2xFvLI3KIklFWhHuo/rg&#xA;VQVeRp09zirAvP601xGB5I9vHwNKbKWQ/ipyyHJhJS8qaXJNJJfcCwgIWHw9Q78qnb4F3+dDjIqF&#xA;a9131LldP05uMLsEnuh9uQV+IKf2U+XXviAm049ApGskmyvXiv7R2+1TwrkVcJPV1LTwNooWlKr7&#xA;/VpRyNO9QMUpgFJrTsKnFVtzqNjZwE3TiKJtg5+0zdqAdfkPngpXnN7cG5u5pzUeq7MATWgJ2H0D&#xA;LWCkzM7FmNWO5OKvffyd81ahoPldLTVbaSW0eQy2npkGVI2A6o5UFT1HxVp2OMcoGyJQJev6RrWm&#xA;avafWtPm9aEMY3+FkZHABKujhWVqEGhHTLwQWsikbhQ7FXYq7FXlHnHyH5yu9ev9WtYYL+O7kX0o&#xA;kn9OVIo0VEXjKqp2J2fqScuhkADxfbns9qNVmOSMo10DDLvSNe06/R9T06fT+KN6LS8GVnqA3F42&#xA;kQ7HxzJhlFbc3j+0ey82kiBlH1H7kdHrRba6topgaVdB6LgDsvp0j+lkORdeZwl9cAfMek/CvT8T&#xA;EofUJ/Luowy2UlzJYu26tOhdI2FGRlliDMWDUP8AdgZZ4ZItyNPpYcQnCXDz2luK7uKIJJP9QDzQ&#xA;+g3Bu7C/DlROtpcxyhTVfUhUs9COxCVHtghsXJ0+HgzSj3wlXyv9D0j8j41Hle9kFOT3zgn2WGKg&#xA;+8nKdWfW997LRrTE/wBM/cGDeZ7ZrHzFq9qfgdJp5o0HX05OUsZHtRhk8ZunhO3NLLHrJgioylY+&#xA;LDcz2pkuk649vYQXcM8cepaRKs9sJHCB+A/uyaj4ZIy0Z9jgygSgQWjSZcml1kcsAaPP9PJ9Badf&#xA;Q3+n219AGEN3Ek8QccXCyKGXkvY0O4zSkU+04sgnESHIi/m+eddsZLLWLy3k6xzyJUdNmOYRcwJT&#xA;qQaTSb2GlQ8MgWpoFZlKg1OwFTvirA9Hj1Cwu4J7iznEMTV9URsVAoRWtKGmSJYvUtOvVuYPUjFX&#xA;p8VN6VHUU8cgWaIq55ED7XX764FaCSdlP3HFWD+eULNDJTeOSSNz4AhSo+8Pk4sSl+lyMmmXSgso&#xA;WGd2pt/ehI6fLbCeaEr07UbOzvklnVpAoPwqwUgkUrUhsJVkY8x6RLQ85126uilR/slcn/hcjSbV&#xA;9N1zQJNSjSa+WKNUciTi9OdOIHTuGOJBUFfrvm7SLGFRp7fX7ggivF0iUgndiwVjt2X78ABW2Dz6&#xA;tPeXDXF5I0kzbA7cVH8qqNgPlkwxcLmE/tffhVDzXRb4U2Hj3xVmPl7zF5tu4wdNNzczWyr9agRD&#xA;OrRqaBwKNwPZqfPxyPDabfQn5RtKYtWYQSxW0skEscskboHcxcJAC4HIrwFaeOW4gQGGTm9By1rd&#xA;irsVdirsVSnX/K2ja+kK6lG7/VyxhaOWSIqWpX+7ZQ32R9quESI5OFrOz8GprxYiXDy+P9iQS/lF&#xA;5UkfkHvIx/Klw1PxBOS8QuvPs3oj/AhJPyR8oPIXae/qeo+sD/mjJjUTHVf9Dmk6AoS+/KGKxKHy&#xA;3MyC5WW31BbyRpAEnhaL102+3HX7HRvEUxGY3ZaM/s5iMoyx7EWD7pAj9LOvL2g6doOkW+l6ehW3&#xA;tx9pt3dias7narMxqcqJJNl32DBHFAQjyDeseXtE1mJI9Us47pYjWIuPiUnrxcUYVpvQ798QSEZ9&#xA;NjzCpxEglsX5d+SIumjWziteMimRf+BcsMPEWEdDhHKITSw0LQ9Pp9Q062s6dPQhjiptT9gDI23R&#xA;xQjyAHwR2LYwPzb+WEmu6pLf22qLY+rxLRNb+svIChbaWLrlUsVm2YnQSNf+cedFu0A1zW7++Kmq&#xA;xwelbQj/AJ58Zd/flXCMQUzKeWf5G/lfa8Cmjc5EFPUe4uCT7keoF/DJcARxFMNR/K3yVexoosja&#xA;SRqESa2keNwAa77lWO/2mBOAwC8RSt/yV8uMxI1LU0B/ZWeOg++I4PCCeMrD+SHltvtanqh+c0P/&#xA;AFRx8ILxlUtfyR8lxyVuzdajFQ/6PdSrw5EFef7pIm5AMafFhGMIMyjZfyf/AC9eN4hpfCCUcZok&#xA;mnUOoIIFQ/JfiUH4SKkb1x4AvEUHB+RH5VQlSNDDstPikuLpqkeIMvH8MPAF4ijdT/J/8ttQsktJ&#xA;dBtoEjBEctqv1eUGlKtJEVZ/9nXHhCOIvPNW/wCcWdLkuFfSdcmtrckc4bmJZmAr8RV0MPboCv05&#xA;Hw2XGi9V/wCcY9DliVdL1m5tmCgOLqNLkMQO3AwFa/Tj4a8aUW//ADiq5atx5kCqD9mO0JJHfdph&#xA;T7jj4a8bOfLn5A/lzo1JJrSTVrgbiW/fmo2oaRII46f6yk++SEAgyKnqv/OPH5a38yyxW1xp9DVk&#xA;tJjxbeu4mE1P9jTBwBeIs50Dy3oXl+wFho1lHZWw3Kxjdj05OxqzH3Y5ICmJKZYVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVaV1avEg8TRqGtD4HFW8VdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVYr5o/MPStBvksXQ3FyV5SKrcQlfshjQ7nLI47a5Tpj8/5s3xNbewiVDu&#xA;C7s1fpXjk/BDDxSkeveeNd1q2+qOyW0JILJCGXnToGYlj1yccYDGUyXnz/nB5g0jU4E0u4le0tJg&#xA;1xFMzcJgpo8YQ/ZVhtWle+2RkAWUbD6Z0LW9P1zR7TV9Pf1LO8jEsR2qK7FWoTRlaqsOxGY5DeEd&#xA;irsVdirsVdirsVdirsVdiqje3SWtrLcOCViUtxHVj2Ue5OwyUY2aRI0LeXecfKmoxxjW9FuHtNfg&#xA;/wB73t3aL6wWJarFStaOxA5VHQHbM7HOMjR5dHHIIFpX5Z/ObXreQWmrxLqXA8HDcLW9Ug0PXhbz&#xA;H/J/dH54cmjHOKRlI5vVPL/mzQteVxp9xW4hA+sWcqmK4ir/AL8icBwPA0oexOYM8ZjzboyB5Jvk&#xA;GTsVdirsVdirsVdirsVdirsVdirsVablxPEgNTYkVFfltir528y6bf22rXqamWGpI3KetSJebUSa&#xA;Mnqj9vu6gjMqJBGziyBB3S5bsWyl3k4Igp6daj5tXbbJMWC6r5s1q8lkVbporbk3pxxfu/h7VK/E&#xA;dvE5AybBENSC3vrK3edyt69UF49FRitAI5PHb/dn0N4hV9b+QNFtdF8maRp1sVZYbZDI6HkrSuOc&#xA;rA+8jMcx5c2+PJP8CXYq7FXYq7FXYq7FXYq7FUBeD6zeQ2/+6oCJ5vdgf3S/8EOX0DxyyOwthLc0&#xA;lUrKZ5eY5RuWV18VY75YGBeZ+dvIbX9xLJYoP0lF2GwmQCoJ7A8dwT9Ptn48u1nk01Rpj3lDXLC1&#xA;8yaRpcMyapqUd3ag36nlFao9zHFJDbyCjSc1kIdq+n2UN9rI5vVEnkGyMaL6RzVOQ7FXEgAkmgG5&#xA;JxVpWVlDKQysKgjcEHFW8VdirsVdirsVdirsVaZlVSzEBQKknYADFWN3H5ieVIpGjW7M7oeJ9JGY&#xA;Ej+VqBWHuDkxjJYHIAw78xtb8reYdAlkti66zYj1bFmjZWcAgyQVFfhkUUoduXE9snGEgWEpgh49&#xA;Dq9lqFoTbVJDAyJIo5KN6GnxChy22ukg8ywuLlLhUK28igAAUVXUUYfM7N9ORLIJMWY0qSaCgr4Y&#xA;EvVPyf8Azem8u3CaNrUjSaJKaRSnc27Hv/qfqyMo2yiafQ9h5o8v35UWt/E7OQqIW4MxPQKr8Sa+&#xA;2VmBDMTBTTIsnYq7FXYq7FXYq7FXYqx/UpHsPM9nMCVt9Wja0kp0+s24aaHp/NF6tT/kqMuhvH3N&#xA;ctiwrWPMOv6fq93bLdF40lJRZVST4GPJR8YY9Dmxx4ISiDThyyyBItJvOGr6vdWVlNJIIoLlXimi&#xA;iAQO8JBq9NyODpQHbbIjGIyIDdCVi3ln5bIY/PmmoOi31qh+i8iP/GuTzfQfczfYOadvS+XVvULJ&#xA;YR/WWUkNOTxgUqaGsm/Kh6hQfemWDH37MDLuSe6R7uQLdzG63HwAcIAf8mOpr83JPyy0GuW33tZF&#xA;80B+WPmRb+LVdElb/SdFu5IolPX6q8jej/wPFkoOgC+ODUY+Eg97PHK2b5jtjsVdirsVdirsVdir&#xA;APzd1W4t9PsdOicol88jXAHVo4Qvwn2LSAnLcQ3a8p2eWZe46KtJC8gik+IHoT1FPfCFLzjzBFb6&#xA;T5kuTp180Nal1iiWQIz7tGeTKpod+m3zGQOxZjcICbWb5xQ3hmUdEe2iRfuRsFppMovIc2o3AkXU&#xA;EX1VDxFIeKlSKigVhTbxw8KOJOE0/wAuWVslvDZpdyoKPczLXk3c77n5Ydkbq1nqNzb31vcxuUa3&#xA;dWiVPhChT0QDpir6h0bVrXVdOhvbd1YSKDIqmvByKsh+WYso0XJibCNwJdirsVdirsVdirzTzZrv&#xA;nzSw2r6Vdi704yypLZSwRMYQsrqjLwEcjqUXpzrUdd9s3HihLY7FoMyN2NyfmpqutWkMDx6c91Bc&#xA;QXMLl5bJw8MiuQEkFwjeooZCPVGzZZ+V4TsxOQnoidV1Q6lraXNxplzYLOFQNMYXieZVYhVeJ36o&#xA;lRyAOxy/EeGPC48xZtbriJP5euU/3ZZyRXI9kYmF/vZ0+7IyFSBbMR5h5f5Dhk/5WXZRRiv+5SFi&#xA;P8lbgOevsuHN9B9zd1D63d1RGdzRVBLE9gNzmob3nWn642leT/L7XCFxqEIubpK0cGcCZyN+oeXv&#xA;1/HM+GHjka6OJLJwgJ/bSQusd3C4mtqGRJV6EIORB8CKbg5TIEGjzbQerzryvZ6zpP5pRzrEUt9S&#xA;keEo7BTLFJD6sjIh+IiN41YvSgoVrVhmTnMZQ8wwxggh7Zmtcl2KuxV2KuxV2KuxV5L+bVy03mO1&#xA;tQw4WtqHNSAA00jV/CJcvxDZoyndhDU5Hj0rt8stakTZqqyKx6np7f24QpeOXG9xKT/O368qbVPF&#xA;We+UtSP6LtyCecL+nK3cqpDAD24kDJxLCQTr9BWfqGUu0kchLIBsKE+2+GmNoyG1tof7qNU9wN/v&#xA;64VRtl50Hla6Fx9djhqAZLdm5eovvGtWPzpkZAHmyiSOT2fyl5osPM2iQ6tYgiCUstGrsymjdQP1&#xA;ZjSFFyYm04yKXYq7FUi1PzWNPnmibTLu5SFxGZoDb8amNZN/UliI2fwy6OEnq1nIAgk/MjQgK3Nt&#xA;f23jW0lmptX/AI9hP8tsJ08l8WKsBbzWMDElra7RzUgg8XcurcTQgryB3yRJB8wxrZ5V5y/L71ri&#xA;aWwQRX6E+pANklPivgT9xzPx5dvJo5GmIXfmH9Hzw+X4ZS0WjMLy8cGoa8R1M6L/AJMcYMXz5Edc&#xA;Y7ni/FM5j00z+xl9dbu0pU3dtOrMe7rGZIwP9mgyeaO19zRhl6nn/kGBj+bthGppW7RzXfYRGT+G&#xA;U5voLlDmH0j5ynkg8pa1JF/fCyuBCN95DEwQbA9WIzW4x6g2y5FhnnazYS6fZQ0EVrAFUE9BXiOn&#xA;smbLSnYlws43DHr2/u/L3ly/vlunhE9IEEbFdx+8dx7qi8f9lk8tSIFJwAiyiv8AnH/y5cSRaj5x&#xA;1Hk15qTtb2rvUn01YGVgx3ILqE9uB8cw9XPlEOVAdXsWYbY7FXYq7FXYq7FXmf5peZ7qPULfRrOe&#xA;SFIk9a+MLtGzF9kjLIVNONWI9xl2KPVqyS6MJW2tJYD6KhSdyR15f5R6nL6cdAFeLFWBBHUYEqls&#xA;T68fzAxV5Bcf38n+u368rbVqI8jrGilnchVUCpJOwAGKs00OxayjW15h5pGrIP2Q5oAqkfd/HJAM&#xA;CWSWd4RKlv1hYhF7EE/tfSckxQcvnDRVnktoXZ7laqnNSsZcbULdfw3x4gnhLz/WNQub+/knuGLM&#xA;DwWtNgpPht77beGVktgD6P8A+ccryObyDJbqfjtbyVXG37YVx+vKptkHqeQZuxV2KpFewgXt9VQ6&#xA;sIpJIyNirqYzX/kVl8TsGojcsb1LTzbOHjq1tJ/dseoP8re4/HMqE797RKNMikjWHQ7N5mWERRR+&#xA;q0jBACVFa1P82Y3OZpu5RFsS8069ZLp73OmzC41CBeDugYBEYhVl5EKCULUFPEeGZEMchsRsw4ok&#xA;7c3z/rNqLHzDFcUpb3ZPM9vj+CX8Gr9OZQ5Jej6Dqt2F0h7KEXmq3HAQWlaK8iCsvMj7MaUPNuwy&#xA;eUjgNuJCJ4tlFdAl8jfmFpGuam7X1gyh5JYFCN6noNEwVWam0h5AFt1Hc5jH95Agc3Kuju9h1bW9&#xA;I1/yys2l3KXUEt5YxShdnWt5CJEkRqMjcK1DCuYMYGMt22UgRsxLzjfBvMM6NzKxKiAqxH7IY7fN&#xA;s2enj6A4WWXqYh+YEN1qWraP5QsKtO3prKGq1Jrgh25+y/Dy/wAlGysS5yLkRFAB71o2k2mkaTaa&#xA;XZrxtrOJIY69SEFOTU6s3UnxzVylZsuQBQRmBLsVdirsVdirsVfPGrak2qate6kxr9bmaRP+Mf2Y&#xA;x9EYUZlRFBxZGyoq7xxEglS52I22HXJMVshJYE9SBX7qYqut+KyLI54qpwq8guIXhuJYX+3G7I3z&#xA;U0OVNqfeVtOdg96ELyVMNqAP2qVd/oU0Hz9sIDGRXaxr3plrLTGoT8M92v2mPQpGey+46/LqkqAy&#xA;RXg0rT4rq6cenDwjiQMKvIAKLXeg7k9hkuTHmwLVLuO71Ce4jjEUcjErGvQD6fHqcgWwIZEeR1RF&#xA;LuxAVVFSSegAGKvdvyS12y8o2V1p+vsbVtQlWeJwOaR0Xhxm41KE7HwA+0RkZwKYTD3S2ura6t0u&#xA;LWZJ7eUco5omDow8VZag5S3KmKuxVKNcXUbdvr1lbi9j4iO9shQSvECSHhYlQXTkfgP2h0IPWyBH&#xA;IsJDqGLXnmWwWBGltfrWkXoIju4GI6Egq0ci1WRDUFWYb7HuMzMeG9wfUHHlkrmNkg03zodI1CXR&#xA;9ejX/D1ySLS4qWWCF9kBZt2gp+11Q7Gij4GWM8x9TKxXkp6lp36F1f05V9exlBoa/wB7byAqwqO/&#xA;E0+e+ZcZeJDzcYjgkwDzh5XuZpX0u3U3F2JU+o8RQyiWnpkf8ZFcHK4z2suU9X8jeQ08p6UGvHFx&#xA;r96pN3MpJSKNmLmCGvReZqx/ab2oBh5MvGfIJEa96L82aTa6povoXIqnIpXuvMVVh/qlMnglUmM+&#xA;Tyaws9b0rV2jkL25smRl1gFI0jVd4jI0xEMke2ySH/Vocy58JDAAnkyzSLs6nq0l9fTQ3MUDyz3d&#xA;xbK6wyJb1LcFlAcVK8KGu/c9cTLhx7e5rEbmjvyj0WbVvM2qeb79QzRyPFbE/wC/5RylYeHCN+I/&#xA;12HbMPUyoCIcuAs29fzCbXYq7FXYq7FXYqg9ajvJdGv4rH/e17eVbXcD96UITc7D4qYQgvnOzlPx&#xA;Qzo0VxbkxzQsCrBl2IIO4365lhxSiXk50r26D28MULWYs1TiqnOxED+ysR92KvN/MaBdZuGH+7eM&#xA;x/1pEDt/wzHIFsHJHWN1Mmi3EccrIiWjl0BIXk9wFqR7q9MeiDzSzR7d5b+JuHKOJg8lfs0G9D86&#xA;YAyKZ+c7uSW8t4QCttFCrxLWtTJu7H35fD9GGTGKWaXpM2oPVZI4YFNJJ5WCqO9B4n/M4AGRLM9M&#xA;g8v6TF/ol1bvdkUe6kmiD0I34At8HXJigwNlWa808q0jX1vRVLvSVXaiirHihZjsK7DFCW6X+a9/&#xA;oWqo3ltZWVpFNwrlhFOKgMPq42JI2Dn4vlkJAFnGw+u8x3IdirsVYl5m8ozSNc6ho6q8tzRtQ0p2&#xA;CQ3ZXo6N/um4HaTo1AH7Fb8WbhO7Vkx2wTVdHuUEul39hfm3UlrS8WzuJxCzCp5m3SZOB6PQnxHv&#xA;nHLGQ4gRbRCMomiNkJocWuQaQdN1qzng0NZxBo2qT0C29wTxEBBPqfV5G+FJCOIagBIpSIyASsfF&#xA;ZwsO1B723hs9Zt0P6W8tTBni6M9sxKMh/wCDaM/648MsyxF+UvvRiltXUMv81a1folhq2l3bGxvo&#xA;QybBkNQHVuLgj4lb8Mq0+OMrBG4XLOQ3BSS584au2k3fOOB2jVGWYx0IYuqj4VITox/ZyyeCMSCF&#xA;x5DLYvG/Oer6nqnmGFLmZ7kwqghhY/AHY1Cqg+FeRIGwyyEQOTaTQeixwPpPlCKygBkvtTkjsLdR&#xA;XlJwKvJ03/eSsn45HKdwOg3acI5nve1+WtCg0LQ7TSoTyFulJJKU9SViWkkpU/bdi2amcuI25oFB&#xA;M8il2KuxV2KuxV2KuxVg3nf8sodduv0pptwthqtKSsy8opgNhzp0P+VQ/LJxnTCULYefyl8/qaif&#xA;SnA8ZZxX6BBTLPFDX4SHb8sfzKr8MGmAf8Z5P4xHHxQvhLX/ACs/MmRGVk08BhQgTN38D6WPihfC&#xA;W6d/zjzf6lcST+Yb1LRY4hFbR2Z9VmfkW5yM6oAoBpxG58RTeJyMxBF23/OOrRzNbTaqsunThVuZ&#xA;kjMc/BXEnBEPqKCSoHLl/scfE2R4e7Jtb/JHyrcWKR6Kp0q6hUKjqWkjkIoP3qMak7faUg9zXpkR&#xA;MhkYAvIPNP5GfmZe6lEttp8csEEXo/WBcwiNiJHbkodlelG7qDkzMMBAovS/+cavPX1Mpc3unwc3&#xA;Vwhkldl2Ib7MXHeo79sHGE8BTm1/5xfvmA+t+YIozQ8hFbNJQ9qFpI64ONlwJzpn/OM2hQsW1DWr&#xA;q5BBFII44NmFDXn6/jg414GeeVfyv8j+V3WbSdLjS7UAfXJSZpq0oSrOTwJrvwpkTIlkAAyrAl2K&#xA;uxV2KuxVRvbK1vrSazu4lntbhGjnhcVVkYUII9xhBrdSGGTfllKk3qWWsyhTEYHivYUuQ8ZThxZk&#xA;Nu7fD+0zFq7kk5kjVGqIafBF2FK5/LvWbXy5HpWnamt6IW9RIb5AiqxYmkMsQLRr8R2dZPYgYcep&#xA;AlZCJ4bFMMudG8ypBc6VJol5+krgxi3jRVeF1V6s31hSYFAoPtup36ZlzzwlRBaceMxO6L8r/kJL&#xA;+nF1zzNdRuPtDSrYvSvDinO4BjYFDv8AAOo+1mNk1e1Rcjw75vSND8l6PpFwtzGZbq4hVo7WW5Ku&#xA;0EbMzMsfFUpXmasasRsWIGY+TNKXNlGAjyT7KmbsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqlFd2&#xA;ks81vFNHJPbFRcRKwLxl15KHUGq8l3Fe2LIxIAJGxVcWLsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqW+Y9bh0TRbnUpF9QwqBDCDQySuQscYP8AlOQK&#xA;9uuRnIRFlydJpjnyiA6/YOpfN/mHzHr/AJcitvPOmT8tUsdVltdabj+7uob2NZOEyg/3Qlt5OA/Z&#xA;5DiQQMwsGc0Se97LWaPHKQxEVA4xw+XCfvqQfQPkXzvpHnHQYtW088GPw3VqxBeGWlSrU6g9Vb9o&#xA;b5nvG6rSywTMJIHW/wAxdO0jXxZ3PBdLhaO31C+JP7m4uAWjrtTgoUeo3bmvg2VjIOLhcnH2bOWH&#xA;xBzN0PIfjb3HyZeCCKjpljrXYq7FXYq7FXYq7FXYq7FXYq7FXYqoz31lbsqXFxHC7/YWR1UmngCR&#xA;XASAqpHLFIvKN1dfFSCPww2q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXl/5k6t9c1cWav8A6Joq&#xA;mWVezXcsdVr/AMY4m2/1/bNfrMn8L1vYOm4YcZ+rJsP6o/WfuebNp8WpeTvNOkt9qazW8Rzv+8s5&#xA;Vevz4O+UaY8x5O97QFTxT7pcP+mH6wHnX5V/mDrXk/WJGszykCNFNaP/AHc0Yr8LLVatEx5Ia16i&#xA;tCcy8OQjZxdZoYaiNS5x+dPUdUlh1Hy/qKRS/WBdWD3qztuzyJcQzvIa/tMqyV+eY2IkTIPNtIAE&#xA;JDkJAfDhkP1Mg/I/8zwRB5Q1qX4wOGjXbn7QA2tXJ7qP7vxHw9QK7HHO/e87232XwHxYD0nn5Pbc&#xA;secdirsVdirsVdirsVdirsVdirz78x/NupWV9FpWm3Btz6Pq3ciceZ9QkIgYgldlJNN9xlWSdcmQ&#xA;Dzp5ZpJTNJI0kzHk0rsWcnxLGpJyglkmum3s0gKcmEqDkGBpUD5d8iVTm38ya7AQUvZSF6K7cx9z&#xA;VwiZHVFIw/mRqtkvK6aKUHoGShPy4ccmMskUy7yh5sg8x2csyRGGSBgkiE16ioIy+E7QQn2TQ7FX&#xA;Yq7FXYq7FXYq7FXYq7FXguv3tjDFqcF/ctaXUV5Ml3cyIXheT1zVz6Y9SNXahACNQHwzU5I3Ii93&#xA;0TRxlwwlEcUeEUBzG3LfY17whfL1hONSgHwz6fqQl08XcDrNbubqNoOPqIStayfZah9sjihKMxbZ&#xA;rs0J4ZVtKFSo7H0m+Xw58nj40Gx0/UIvMmtsYNKVuVvZqeM99cRmhgiA3WOo/eynZRUbuQpyeHey&#xA;16nKeLhx/Wf9j5n9A6+56n5TGoeYls7uKOO4F/aXcN4lqUYQvdpMnF4ozWIKXHHkAOmQlCQy2xyZ&#xA;MePTmJNGMgRfXhkDzPP4Mb0Oy0ux1/TNHvAt15g1S5htVtg3wWCzSKjSysvW4VSSiD+7O7fEOOZe&#xA;KO7HW5JTwymNscRz/ne7+j59ene+tcvfP3Yq7FXYq7FXYqpT3VrbgGeZIQehkYL+s4CVS+fzV5fh&#xA;NGvFc/8AFQaUffGGGROSI6ppL5vPmlqSIre4m8GCoi/8Mwb8Mic0V4Uvn/MK6H9zp6Dw5ylmP+xV&#xA;NvvyHj+SeFgutLe6prV3fzBYWu5eUURYEhEAjjFBXfgor75XKdm0gJbNCYHMU0dGHcGlffeuBK1Z&#xA;WqqQApUg9asWHTcAdMVRGrahcQRQ+kV5Sg+pIBX4loDTt3wAISdLe8uWLhHkZurnv/sjklZd5Gv7&#xA;ry/evNMoeCdQkkYJqBWtR2rhjOitPXrG+tb63W4tpBJG3cdQfAjscyoyB5MFfCrsVdirsVdirsVd&#xA;irsVdirxH83tFf8AxDfoAxTWLNZ4yRt60S+gwH+qEiP05r9TGp2937O6gHAB/MlXwO/63jXlzU/M&#xA;WiX6XumTSWrhlMihuKyKprxkQ1DD2ZTkeOnpdVgxZo8MwD+j3JB+aDXbeddVS5meZre/uIImc9Io&#xA;5WWNVHZAoHEDamXZRydRiiPAxkCrA+ZG6ceRD6esWVyCV+pRTX3IVBH1SB7ivw7/AO68Zi5n3ubn&#xA;/wAVr+cAP9MQP0pv+QWmfX/zU0jknOKzE91J7enCyo30SOuZUBzdX7R5eHTEfzi+w8k+euxV2Kux&#xA;V2KuxVgX5hwy/pO0mgP70QkcTsrKH+yfv2OY2fmyiw0+ZdLHVnDd1CE0+kbZTwlK3/E2nE0RZGPQ&#xA;fCFH3sRjwqgtZ876RZRmOMtcXDChjj+EpXryY9GHh1rhECql6gLJIHdVkRJTy+2OShwDv1FcKU0F&#xA;5ZX6elOPTk/YY/1yNUqGm0m6iqYgX7VBHSm+3XDausShrbXEYBT442cbqTQU38cSqOIINDtTtgVR&#xA;u7uC0tJLif7Eakih3JAJoK+wxQlnlH8zb1PM1hb28QtrK5nSK5DOXLKzU8FA6+By2IoqX0HmUwdi&#xA;rsVdirsVdirsVdirsVYF+bljXTdN1VVYtY3QhlI6CG7Hpmv/AD1EWYuqjcb7nofZ3NWWWP8Anx+2&#xA;O/3W+fNWt/q+pXMVKBXJUf5LfEPwOYIe+xm4gsY/NpVbzfdTruLkWd3Ud/rVrFNX6fUzNmLAdXhF&#xA;YIj+bIj5SIRnldlt7DVro0/0bSZ1BPY3IS0/7GKY/wAZ97l5h+6xR75Q+wcX+9Tb8ndT1PTdR1af&#xA;R2jXWLi1FpahiPU4O4klMCMKPIPTSi9e9DTJ5ZyjH08y4PaGnx5px8X+7hue6/M9B+Nns/5WfmZc&#xA;vqQ8r69JLJM1P0fezFnck7NFM7VNeeylvl4ZHTZjIbui7d7JjG8uKgOoH3j9PzevZlPKOxV2KuxV&#xA;2KsJ89yV1O2jp9iEsT/rvT/jTMbP0ZReMQsXhjc9WUE/SMglXgRC3KT+7XqPH2GKse1fTLg3c90p&#xA;9WKR2kZgPiAJqSVFPwyQKs0ea3vl+u2Tia1cgAp1QgU4OvVSMgEqRBBIIoR1BxVUudU1CHT3FtN6&#xA;TwrzRmAYHjUlW5DofbpjSpNcebtQuNDgvJQhdLoxTxqOIdPT5LvvTvhEd0Jjf+Zrq30O0v7SFJxM&#xA;WDNLyPAKAKHiVrRjxrgEd1YvrfmOXVreP1P3cq7PEo/d06/DvUVPWte3hkxGlS7TLhbfUrS4bZYZ&#xA;o5CfZXB/hhV9iKwZQw6MKj6cyWDeKuxV2KuxV2KuxV2KuxVKfNujnWfLOp6Yi8prm3dbep40mUco&#xA;Wr/kyBTkJxuJDl6DUeDnhPoDv7uv2Pk/ztcSyz2t0nwRXkCuyj+YdQfkCM1kA+q6aNAjuWeaPLh1&#xA;PT7fVriKWAyWlla2vJSDIbSCOB333I5KEH+r4UzJOWiI06nEOLjAO0ZyPzkSlptrrS/L2uRXkLQX&#xA;TfVbCSJxRlLyfWaMO21pXeh/Vk6PES5MM0cvh8P8N/YOH/fJHpoKxeoCQzMWB77bCn3YM53ruDma&#xA;UWJS/nSP2bfoe9+RYdV1T8z9M0e5nM0fliwS61+Zh8VxfkH0o5pAAZDbtOAnOu8ZOX4o0LeK7VyQ&#xA;GEyiK8SR4R3R8h04qvbve+ZY8q7FXYqlnmXVxpOjXN7Ueoi8YQe7tsv9cjOVBIYJH558xXEQkScI&#xA;D1X00BH3j8cxjlkypLrzUL27m9a6n9SXiE5dTxBJA2HucrJJ5qwDVvOslvPLaWFrHH6DNEJX32Q8&#xA;RxVaAdPfJiCqOm+Yor4iDUPhnbZZ1GxPuP8AMfLCQqPltZo2CkVDbow6MPbBarNPtobTWLprViBL&#xA;bUnKmitJ6qkEAH+UHf54lUx+Jj4nYVP3YEpd5llFtpcnFq+tSNW7En7Q+6uGKGHrcEWb25rRpEkH&#xA;gOKsD/xIZNUXBeXMmjz6ejHgji4CDuoHFx9GzfecFbql2SQn+i+VJ7tVub5jaWRHJSaerIP8hT+s&#xA;/jkDJL2zy9+aNmkMVprEDQemoQXkIMkZCjYvGPjXsPh5eOwy6OQdUEM9s72zvbdbmznjubd68Jom&#xA;DoaGhoykjrlrFWxV2KuxV2KuxV2KuxV2Kvlj81dE/R93qVoiqq6ffu0Sr0W3uwJ4wK/yiRV+jNZM&#xA;cMyH1LsjUeLhhLvj9sdj9yXeU/MOrJod/Z299NbpaWV9IqI7KoJtzJEygHZ1eJqMNxXLYcw1a/BD&#xA;j3iCeOHyJ3+Hkw+45Q+ShJISX1DUC/JjUn6rCST07/XB3zIAuXybBKpk/wA2MvtlX+8TDyRb2yaz&#xA;az3i8rPTUe/ul7Mlohm4H/jIyBPpygninbfqQcem4R9RAj8ZbX8Ob6C/5x30K5h8q3vmfUBy1PzP&#xA;dPdyyEEEwozCOoP8ztI/yYZm1Qp4DtvOJZuCP04xwh6ti6Z2KuxV5z+aWrg3FrpinksY9aZKmhY7&#xA;ID8hvlGU9GUWHWkvGRvVkBdwAFAJNa1ptXplBZIbWdXntoXXT4frt0KhkjIf0/d0U8/opiAh59fX&#xA;U5gk1C5RDcPL6KgoqgtQtIxUAKSvwjcd8sVS02/1S6nWFb8WEXUlG9FafJOO+JQyuFYxEscMqzcB&#xA;8TrKszk+LsCx/hkUovS7WWeWdolLGJUDAeDlj0/2GAlQhtc16z0nnA7CW7BoIEIqD4u37I9uvt3w&#xA;gWtsRu9UvL5uU8vIVqsamiL8h/HrkwFQzuqCrGgwoT7yh5lttO+sUs1nuX7lqM0QHxKpowqPtEU3&#xA;+jISFpBT2efy0r2etC1jhhuVlABVmCyoUp8KgrX7WDfkrpvNGjO5ke5dyewjYmn+y4jHhKoHUvNt&#xA;ha2ySWcT3MkpZV9UemilApqQpZm+14jGltl35GXHnG68x3GoTW0h0O4heKaYAQwLIDyQou3qMCvD&#xA;uQDvl2MUxL3XLkOxV2KuxV2KuxV2KsI8wfmMbe7udP0aCCa6tpPQkuLuZYovVAFVijB5zsDVSoK/&#xA;ED4ZjZM9GgLLvdJ2NxRGTKTGMt9he3meUe/rs8W87XOs6vf3LawZoLq5VEnVoEtwUjJKARlCwAJ6&#xA;szN77DMCeeXFZD2mg0uPHjAxS9I7jxfj4UGL2OlXFit+sMyyLe2ktpR1I4+rT49jvSnhk46oDp9r&#xA;dn008kokyHpN8v2sefyH5pSzWa5ljtNEjdmF/cTGO1VmA5+mpBkkeiCqxIzbDbJ482SRscvNxs5x&#xA;QPDzn3R5/EcvnsoT+Z/L1hZXGnWLXeoveKIbzUm4WyeksiyFYIOMjGrRj4ncEj9la5PxAOQccanL&#xA;OQM/pHIdeVXe3fy+19c/ld+YXk3zPoNpbaC4tjZQRwjTHP7yJIlCBRX7aqBSv39cyseUS97xnaPZ&#xA;2XAeI+qEj9Q/T3Fm+WusdirsVeTeeNC12PXLq/FpcX6TNyhNrE8zAUoi0UUBUCnxEfqzGnE2zBYh&#xA;L5Z/NPU0aLTdDksLfoWmeOGYj3aRkP0LTEYyi0PY/kP+YdyeUz2lgRuPUmJNfb0lkyfAUWyaL8hN&#xA;dvrJYNc16JpISWtpY4nnZeVAwZnaIsCFHXpTwxGJbbtv+carNZg13r8ssVRyWK2WJiPZmkkA/wCB&#xA;yXhraN1P/nHXRXtwul6vd284rVroRzq22w+BYCvzqcTjW2IQfkJ5+h1WOAXVstpJ/e38crFVUdjG&#xA;QkhbwAFPcZHwytqGs/kL58ikLWyW9+Sf7yKYITXuwm9Pf6TiYFbVNI/5x485XTodRuLXToSaSfEZ&#xA;pQPFUQcD/wAGMRjK2n2rf843EWsP6K1f1LpRSf62vBGO/wASemHKjp8Jr8+2E41tQ0z/AJxv1OnK&#xA;+1qG2lBqptonm6dCGcw0+7Hw1tkUH/OP+imgvNVuplDFgkKpEo5dQA3q0wjGto2H8g/JEb8nlvph&#xA;/K8sYH/CRqcPAFtkGm/lh5D05g8Gjwu4H2rjlcb+IExdQduww8IRbJ1VUUIgCqooqjYADoAMkreK&#xA;uxV2KuxV2KuxVpgWUgMVJBAYUqPcVBGKh435r/5x9utQt1TS/McxER5pb6hFHIGfpvNAsJHfcoxy&#xA;nwIPT6T2myYz6ogjy2YLe+Rvzt8rQtBDDNqGmx0Cx2rJqFuf9W0lDP8A8kcrOA+93OPtfQZzchwT&#xA;7+R/0wpINT80eYFsI2trG1tNdjuWtru3FoPrHF0VoWW2lDqKssgJWMU+HxyMNOL3i5fiYia8QnHw&#xA;2PV899j3cz3rbL8p/wA3vN94Lu+srlS/wm81VzDxXsAsn73j4BEpmSMbi5O29JgHDDf+qz7y9/zi&#xA;XpPJLjzNqrzyUBe109fTSvvLIGZgf9RTj4UO50Gq7flM+iIi9f8AKf5d+SvKaEaBpMFnKwIe5oZJ&#xA;2BpUGaQtJQ0+zWmTdLm1WTL9RJZHi47sVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:b8680562-8caa-4ef0-949e-771ee2e3d4cf</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:b8680562-8caa-4ef0-949e-771ee2e3d4cf</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6bc69a9f-6cc3-b04d-b57e-9ff79f95af5f</stRef:instanceID>
            <stRef:documentID>xmp.did:c51cabd6-3be9-4c09-9130-1e0804174356</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:49f5aed3-9f57-c747-81d8-825062695e08</stEvt:instanceID>
                  <stEvt:when>2015-09-25T15:23:34+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2f17e0a3-50be-7c47-b9ca-27c49acbf287</stEvt:instanceID>
                  <stEvt:when>2015-10-03T16:27:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2a30ee13-b97c-fe48-9da0-a884076cf819</stEvt:instanceID>
                  <stEvt:when>2015-10-03T16:54:01+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b893f768-fe5c-ba45-8877-09ac362c0436</stEvt:instanceID>
                  <stEvt:when>2015-10-03T17:26:55+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6325c653-0cfe-7c48-8ed6-e72bbe216650</stEvt:instanceID>
                  <stEvt:when>2015-10-05T09:20:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea579fea-020a-459e-8f58-eac12c8c86f6</stEvt:instanceID>
                  <stEvt:when>2015-12-30T14:03:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4755b3cb-9788-45cc-92f2-8222b48c26a5</stEvt:instanceID>
                  <stEvt:when>2016-01-04T11:18:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b8680562-8caa-4ef0-949e-771ee2e3d4cf</stEvt:instanceID>
                  <stEvt:when>2016-01-28T16:16:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>169</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>80</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -379.858 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 379.858 li
368.269 379.858 li
368.269 0 li
cp
clp
312.487 234.048 mo
312.487 234.048 316.327 233.92 318.63 233.408 cv
320.934 232.896 325.414 232.512 325.414 232.512 cv
335.653 231.36 li
335.653 231.36 348.708 230.848 354.467 229.184 cv
360.227 227.52 368.162 223.68 368.162 223.68 cv
366.114 217.665 li
349.604 209.474 li
347.172 186.436 li
346.148 185.924 li
336.165 188.099 li
328.87 196.547 li
320.166 197.699 li
320.166 197.699 321.062 206.018 320.678 205.89 cv
320.294 205.762 316.199 209.858 315.559 210.753 cv
314.919 211.649 310.695 220.097 310.695 220.097 cv
312.359 226.752 li
312.487 234.048 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.266667 .301961 .337255 rgb
f
289.233 158.601 mo
276.227 163.621 li
270.979 180.734 li
268.241 193.055 li
272.576 208.343 li
278.052 211.765 li
291.286 221.349 li
312.487 234.048 li
312.487 234.048 312.963 229.563 311.822 225.228 cv
310.681 220.892 310.909 219.067 310.909 219.067 cv
310.909 219.067 313.875 212.678 316.157 209.94 cv
318.439 207.202 320.492 204.92 320.492 204.92 cv
320.166 197.699 li
308.171 184.384 li
306.802 175.029 li
300.641 169.097 li
296.762 163.164 li
296.762 163.164 291.058 158.829 289.233 158.601 cv
cp
.466667 .52549 .576471 rgb
f
326.748 224.591 mo
353.478 222.877 li
366.114 217.665 li
349.604 209.474 li
326.748 224.591 li
cp
f
289.233 158.601 mo
295.22 161.877 li
306.802 175.029 li
308.171 184.384 li
320.166 197.699 li
328.87 196.547 li
336.297 187.727 li
346.148 185.924 li
333.602 175.242 li
330.175 165.647 li
302.074 160.506 li
289.233 158.601 li
cp
.54902 .615686 .67451 rgb
f
312.359 226.752 mo
326.748 224.591 li
327.433 232.13 li
312.487 234.048 li
312.359 226.752 li
cp
.203922 .243137 .278431 rgb
f
353.478 222.877 mo
354.467 229.184 li
362.046 227.332 li
368.162 223.68 li
366.114 217.665 li
353.478 222.877 li
cp
f
272.576 208.343 mo
286.576 206.247 li
306.064 218.03 li
310.909 219.067 li
312.359 226.752 li
312.359 226.752 313.925 233.749 312.487 234.048 cv
311.049 234.346 291.286 221.349 291.286 221.349 cv
282.951 215.311 li
272.576 208.343 li
cp
.411765 .466667 .513726 rgb
f
308.171 184.384 mo
333.709 176.789 li
330.175 165.647 li
306.802 175.029 li
308.171 184.384 li
cp
f
312.382 234.099 mo
302.1 228.376 li
300.387 227.42 298.667 226.478 296.997 225.449 cv
295.316 224.438 293.642 223.412 291.989 222.35 cv
290.339 221.282 288.706 220.182 287.128 219.003 cv
285.527 217.856 284.063 216.498 282.539 215.325 cv
279.419 213 276.093 210.91 272.754 208.886 cv
272.663 208.831 li
272.612 208.743 li
271.898 207.523 271.385 206.232 270.914 204.935 cv
270.445 203.636 270.05 202.317 269.702 200.989 cv
268.998 198.331 268.438 195.652 267.974 192.942 cv
267.963 192.879 li
267.973 192.818 li
268.792 187.842 270.061 182.988 271.413 178.162 cv
272.787 173.342 274.272 168.56 275.837 163.8 cv
275.868 163.705 li
275.957 163.67 li
288.632 158.546 li
276.124 164.062 li
276.243 163.932 li
274.765 168.709 273.364 173.514 272.079 178.346 cv
270.798 183.174 269.532 188.025 268.762 192.936 cv
268.761 192.813 li
269.234 195.482 269.809 198.152 270.519 200.77 cv
271.24 203.376 272.022 206.011 273.314 208.328 cv
273.173 208.186 li
276.525 210.245 279.837 212.351 282.993 214.731 cv
284.564 215.965 285.984 217.274 287.55 218.445 cv
289.092 219.639 290.694 220.76 292.317 221.851 cv
293.943 222.937 295.595 223.988 297.256 225.027 cv
298.905 226.087 300.615 227.047 302.29 228.064 cv
312.382 234.099 li
cp
.266667 .301961 .337255 rgb
f
306.088 217.286 mo
306.088 217.286 307.411 217.448 308.659 217.981 cv
309.92 218.477 311.022 219.324 311.022 219.324 cv
310.457 219.965 li
310.457 219.965 309.586 219.031 308.466 218.362 cv
307.368 217.663 306.088 217.286 306.088 217.286 cv
cp
.592157 .666667 .733333 rgb
f
307.97 184.325 mo
307.677 182.857 307.49 181.564 307.301 180.271 cv
307.116 178.998 306.932 177.726 306.644 176.283 cv
308.319 175.949 li
308.614 177.424 308.803 178.724 308.992 180.024 cv
309.177 181.29 309.359 182.555 309.646 183.992 cv
307.97 184.325 li
cp
f
309.408 183.59 mo
309.408 183.59 310.01 184.578 310.964 185.985 cv
311.921 187.405 313.274 189.253 314.703 191.053 cv
317.556 194.655 320.688 198.05 320.688 198.05 cv
320.688 198.05 317.259 194.964 314.059 191.614 cv
312.457 189.942 310.917 188.202 309.81 186.849 cv
308.692 185.49 308.006 184.567 308.006 184.567 cv
309.408 183.59 li
cp
f
308.31 184.615 mo
308.56 184.945 309.152 185.715 309.975 186.714 cv
311.126 188.122 312.672 189.856 314.213 191.468 cv
315.32 192.624 316.459 193.756 317.474 194.738 cv
316.554 193.666 315.525 192.436 314.535 191.184 cv
313.171 189.467 311.806 187.615 310.788 186.103 cv
310.084 185.067 309.566 184.25 309.344 183.893 cv
308.31 184.615 li
cp
320.544 198.207 mo
320.511 198.178 317.075 195.079 313.903 191.762 cv
312.356 190.143 310.803 188.401 309.645 186.984 cv
308.537 185.636 307.841 184.704 307.834 184.693 cv
307.704 184.517 li
309.471 183.284 li
309.59 183.477 li
309.596 183.487 310.202 184.48 311.141 185.865 cv
312.153 187.368 313.513 189.21 314.869 190.919 cv
317.686 194.475 320.813 197.87 320.844 197.904 cv
320.544 198.207 li
cp
f
288.505 158.577 mo
288.505 158.577 288.914 158.656 289.611 158.865 cv
290.312 159.067 291.296 159.432 292.401 160.031 cv
294.63 161.208 297.22 163.416 299.436 165.935 cv
301.653 168.437 303.711 171.045 305.433 172.781 cv
307.137 174.541 308.436 175.472 308.436 175.472 cv
307.359 176.798 li
307.359 176.798 306.014 175.691 304.368 173.753 cv
302.698 171.834 300.806 169.086 298.778 166.481 cv
296.769 163.877 294.381 161.559 292.266 160.262 cv
291.22 159.603 290.269 159.179 289.589 158.935 cv
288.909 158.682 288.505 158.577 288.505 158.577 cv
cp
f
349.949 208.987 mo
348.88 201.418 347.852 193.845 346.881 186.264 cv
347.03 186.499 li
342.089 183.457 337.919 179.42 333.184 176.248 cv
333.069 176.172 li
333.026 176.04 li
329.747 166.139 li
330.02 166.406 li
328.355 165.906 326.672 165.436 324.985 165.017 cv
323.291 164.58 321.613 164.276 319.871 164.03 cv
316.407 163.498 312.964 162.873 309.527 162.216 cv
302.649 160.934 295.803 159.507 288.903 158.353 cv
295.844 159.239 302.744 160.43 309.635 161.612 cv
313.084 162.183 316.532 162.76 319.983 163.282 cv
321.706 163.513 323.475 163.821 325.172 164.248 cv
326.882 164.661 328.571 165.121 330.259 165.615 cv
330.464 165.675 li
330.533 165.883 li
333.797 175.783 li
333.639 175.575 li
338.417 178.853 342.586 182.849 347.376 185.949 cv
347.509 186.035 li
347.526 186.185 li
348.385 193.779 349.187 201.38 349.949 208.987 cv
cp
f
312.178 234.099 mo
316.924 233.709 321.599 232.82 326.311 232.142 cv
328.666 231.793 331.029 231.473 333.408 231.247 cv
340.525 230.707 li
345.256 230.324 349.973 229.746 354.577 228.677 cv
356.881 228.156 359.148 227.481 361.343 226.622 cv
362.445 226.205 363.524 225.726 364.577 225.201 cv
365.64 224.692 366.653 224.092 367.667 223.495 cv
367.502 223.869 li
367.103 221.853 366.734 219.768 366.004 217.89 cv
366.148 218.04 li
360.684 215.272 355.254 212.44 349.831 209.598 cv
355.375 212.202 360.912 214.815 366.416 217.492 cv
366.517 217.541 li
366.561 217.642 li
366.995 218.638 367.27 219.651 367.537 220.667 cv
367.8 221.685 368.027 222.704 368.222 223.739 cv
368.269 223.987 li
368.057 224.114 li
367.027 224.732 365.996 225.352 364.916 225.88 cv
363.846 226.423 362.749 226.92 361.631 227.354 cv
359.401 228.245 357.101 228.949 354.769 229.495 cv
350.102 230.598 345.334 231.104 340.585 231.465 cv
333.463 231.921 li
331.099 232.091 328.739 232.356 326.38 232.65 cv
321.668 233.261 316.933 233.878 312.178 234.099 cv
cp
.266667 .301961 .337255 rgb
f
346.816 185.745 mo
345.096 186.251 343.368 186.722 341.639 187.189 cv
339.909 187.654 338.186 188.146 336.448 188.573 cv
336.596 188.511 li
336.524 188.56 li
336.617 188.483 li
335.504 189.753 334.396 191.022 333.348 192.328 cv
332.824 192.98 332.313 193.641 331.826 194.314 cv
331.331 194.975 330.917 195.7 330.268 196.408 cv
329.95 196.756 329.529 197.124 328.997 197.341 cv
328.467 197.55 327.959 197.594 327.509 197.619 cv
327.052 197.642 326.627 197.639 326.205 197.642 cv
325.792 197.641 325.377 197.651 324.996 197.683 cv
323.402 197.814 321.805 198.178 320.257 198.699 cv
320.826 197.84 li
321.454 205.575 li
321.488 205.995 li
321.173 206.272 li
319.005 208.18 317.077 210.365 315.427 212.747 cv
314.603 213.94 313.868 215.192 313.18 216.471 cv
312.499 217.755 311.9 219.084 311.391 220.449 cv
311.403 220.123 li
311.915 222.465 312.363 224.797 312.565 227.178 cv
312.767 229.54 312.908 231.967 312.376 234.291 cv
312.518 233.112 312.45 231.932 312.366 230.762 cv
312.273 229.591 312.095 228.427 311.886 227.271 cv
311.449 224.965 310.951 222.655 310.313 220.411 cv
310.27 220.26 li
310.325 220.083 li
312.11 214.326 315.516 209.043 320.062 205.014 cv
319.781 205.71 li
319.163 197.974 li
319.11 197.314 li
319.732 197.115 li
321.391 196.583 323.112 196.171 324.895 196.088 cv
325.357 196.063 325.787 196.065 326.219 196.077 cv
327.449 196.09 li
328.277 196.075 328.688 195.956 329.208 195.403 cv
329.715 194.875 330.211 194.165 330.757 193.496 cv
331.296 192.827 331.855 192.179 332.423 191.543 cv
333.561 190.271 334.743 189.053 335.922 187.841 cv
335.974 187.788 li
336.016 187.763 li
336.091 187.718 li
336.17 187.67 li
336.24 187.656 li
337.993 187.293 339.76 186.995 341.521 186.67 cv
343.283 186.347 345.046 186.029 346.816 185.745 cv
cp
.592157 .666667 .733333 rgb
f
327.722 232.425 mo
326.799 230.03 326.193 227.501 325.915 224.933 cv
325.944 225.036 li
325.735 224.644 li
325.607 224.404 li
325.851 224.252 li
331.951 220.459 li
338.024 216.624 li
350.128 208.867 li
346.368 211.85 342.469 214.658 338.452 217.284 cv
336.453 218.613 334.433 219.909 332.372 221.14 cv
330.318 222.38 328.263 223.621 326.155 224.768 cv
326.271 224.376 li
326.459 224.778 li
326.486 224.835 li
326.489 224.883 li
326.653 227.418 327.069 229.944 327.722 232.425 cv
cp
f
309.601 197.293 mo
309.601 197.188 309.601 197.083 309.601 196.978 cv
309.601 196.875 309.441 196.875 309.441 196.978 cv
309.441 197.083 309.441 197.188 309.441 197.293 cv
309.441 197.396 309.601 197.397 309.601 197.293 cv
cp
f
309.931 196.717 mo
310.981 194.515 312.174 192.386 313.229 190.202 cv
313.458 189.729 312.731 189.324 312.532 189.794 cv
311.574 192.049 310.75 194.366 309.776 196.626 cv
309.731 196.73 309.881 196.823 309.931 196.717 cv
cp
f
303.843 200.112 mo
306.281 198.991 308.76 197.961 311.198 196.836 cv
311.434 196.727 311.229 196.371 310.992 196.485 cv
308.585 197.649 306.224 198.905 303.82 200.071 cv
303.843 200.112 li
cp
f
296.069 175.652 mo
297.822 173.838 299.668 172.101 301.364 170.235 cv
301.839 169.712 301.048 168.929 300.59 169.461 cv
298.934 171.384 297.425 173.438 295.828 175.411 cv
295.693 175.577 295.913 175.813 296.069 175.652 cv
cp
f
285.796 196.348 mo
285.755 199.498 285.85 202.653 285.739 205.801 cv
285.732 205.994 286.046 205.994 286.039 205.801 cv
285.928 202.653 286.022 199.498 285.982 196.348 cv
285.981 196.228 285.797 196.228 285.796 196.348 cv
cp
f
293.139 209.578 mo
290.879 208.227 288.645 206.841 286.364 205.525 cv
286.129 205.389 285.916 205.755 286.152 205.888 cv
288.448 207.18 290.78 208.398 293.095 209.653 cv
293.139 209.578 li
cp
f
279.58 207.347 mo
281.695 206.871 283.82 206.44 285.93 205.944 cv
286.226 205.875 286.1 205.406 285.804 205.487 cv
283.717 206.06 281.646 206.697 279.564 207.289 cv
279.58 207.347 li
cp
f
283.323 174.465 mo
287.48 175.491 291.687 175.915 295.965 175.986 cv
296.469 175.994 296.466 175.179 295.965 175.205 cv
291.719 175.423 287.564 175.024 283.387 174.233 cv
283.237 174.205 283.171 174.427 283.323 174.465 cv
cp
f
310.455 212.088 mo
312.26 211.618 314.172 211.589 316.013 211.318 cv
316.795 211.203 316.459 210.026 315.687 210.134 cv
313.795 210.397 312.156 211.183 310.39 211.85 cv
310.244 211.905 310.299 212.129 310.455 212.088 cv
cp
f
333.779 223.777 mo
340.406 223.785 347.013 223.622 353.634 223.353 cv
354.332 223.325 354.334 222.233 353.634 222.265 cv
347.002 222.574 340.393 222.986 333.779 223.57 cv
333.649 223.581 333.644 223.777 333.779 223.777 cv
cp
f
362.173 218.433 mo
359.21 219.314 356.237 220.881 353.439 222.193 cv
352.814 222.486 353.361 223.444 353.985 223.127 cv
356.71 221.743 359.754 220.363 362.24 218.592 cv
362.316 218.538 362.273 218.403 362.173 218.433 cv
cp
f
331.481 200.675 mo
330.885 199.26 330.014 197.921 328.916 196.841 cv
328.46 196.391 327.819 197.175 328.37 197.548 cv
329.63 198.401 330.571 199.411 331.304 200.75 cv
331.355 200.844 331.524 200.778 331.481 200.675 cv
cp
f
322.142 168.972 mo
316.87 170.372 311.687 172.539 306.938 175.217 cv
306.279 175.589 306.868 176.597 307.531 176.231 cv
312.331 173.589 317.168 171.272 322.198 169.106 cv
322.142 168.972 li
cp
f
330.298 185.703 mo
332.403 186.585 334.374 187.762 336.498 188.626 cv
337.174 188.901 337.502 187.771 336.803 187.519 cv
334.677 186.752 332.453 186.32 330.331 185.58 cv
330.298 185.703 li
cp
f
274.54 191.146 mo
272.351 191.353 270.201 191.944 268.304 193.084 cv
267.895 193.33 268.272 193.976 268.678 193.724 cv
270.52 192.58 272.419 191.74 274.569 191.363 cv
274.69 191.341 274.663 191.135 274.54 191.146 cv
cp
f
292.277 191.672 mo
293.212 189.858 294.418 188.228 295.856 186.781 cv
296.053 186.583 295.75 186.28 295.549 186.474 cv
294.037 187.937 292.894 189.651 292.087 191.593 cv
292.043 191.701 292.223 191.776 292.277 191.672 cv
cp
f
292.17 195.393 mo
294.51 192.675 296.797 189.909 299.061 187.129 cv
299.234 186.917 298.931 186.613 298.759 186.827 cv
296.505 189.635 294.269 192.463 292.091 195.332 cv
292.17 195.393 li
cp
f
301.149 184.194 mo
303.18 181.644 305.044 178.977 306.93 176.32 cv
307.201 175.939 306.543 175.541 306.296 175.95 cv
304.628 178.718 302.751 181.351 300.861 183.971 cv
300.74 184.139 301.019 184.357 301.149 184.194 cv
cp
f
304.792 181.855 mo
305.638 180.267 306.816 178.922 307.7 177.357 cv
308.043 176.749 307.072 176.198 306.772 176.815 cv
305.981 178.445 305.537 180.192 304.705 181.804 cv
304.792 181.855 li
cp
f
288.135 204.54 mo
288.135 204.435 288.135 204.33 288.135 204.225 cv
288.055 204.225 li
288.055 204.33 288.055 204.435 288.055 204.54 cv
288.135 204.54 li
cp
f
288.103 203.898 mo
288.215 203.465 288.116 203.154 287.798 202.843 cv
287.736 202.827 li
287.185 203.025 286.865 203.59 286.581 204.076 cv
286.361 204.45 286.968 204.734 287.142 204.313 cv
287.258 204.03 287.411 203.671 287.599 203.417 cv
287.739 203.188 li
287.848 202.9 287.946 203.131 288.032 203.879 cv
288.103 203.898 li
cp
f
278.665 179.369 mo
277.473 180.124 276.301 180.984 275.324 182.007 cv
275.456 182.139 li
276.464 181.121 277.481 180.187 278.682 179.398 cv
278.665 179.369 li
cp
f
275.512 171.477 mo
275.62 171.374 275.727 171.272 275.834 171.169 cv
275.778 171.112 li
275.675 171.22 275.572 171.327 275.47 171.435 cv
275.512 171.477 li
cp
f
329.895 224.553 mo
336.625 220.389 342.992 215.337 349.084 210.292 cv
349.614 209.853 348.859 209.123 348.333 209.542 cv
342.124 214.481 336.401 219.937 329.794 224.38 cv
329.688 224.451 329.784 224.621 329.895 224.553 cv
cp
f
337.355 222.288 mo
338.147 221.505 338.91 220.687 339.652 219.856 cv
339.82 219.668 339.543 219.388 339.374 219.578 cv
338.629 220.411 337.9 221.264 337.209 222.142 cv
337.128 222.244 337.258 222.384 337.355 222.288 cv
cp
f
341.743 217.857 mo
341.955 217.648 342.166 217.44 342.378 217.231 cv
342.491 217.12 342.315 216.943 342.203 217.057 cv
341.995 217.269 341.786 217.48 341.578 217.692 cv
341.472 217.799 341.636 217.963 341.743 217.857 cv
cp
f
345.268 214.764 mo
346.538 213.515 347.805 212.262 349.071 211.009 cv
349.372 210.712 348.891 210.235 348.609 210.547 cv
347.411 211.868 346.212 213.189 345.017 214.514 cv
344.866 214.682 345.104 214.925 345.268 214.764 cv
cp
f
346.569 218.831 mo
346.793 218.524 347.017 218.218 347.242 217.912 cv
347.387 217.713 347.044 217.505 346.907 217.716 cv
346.702 218.034 346.497 218.351 346.292 218.669 cv
346.178 218.845 346.449 218.994 346.569 218.831 cv
cp
f
346.385 222.487 mo
349.041 223.05 351.643 223.176 354.33 222.734 cv
354.662 222.679 354.524 222.163 354.19 222.225 cv
351.62 222.704 349.006 222.79 346.424 222.346 cv
346.332 222.33 346.291 222.467 346.385 222.487 cv
cp
f
361.217 219.138 mo
362.833 218.678 364.449 218.079 366.009 217.457 cv
366.384 217.307 366.231 216.696 365.839 216.839 cv
364.238 217.423 362.612 218.063 361.078 218.809 cv
360.893 218.899 361.023 219.193 361.217 219.138 cv
cp
f
354.712 228.173 mo
354.602 226.589 354.384 225.018 354.196 223.442 cv
354.164 223.167 353.726 223.168 353.763 223.442 cv
353.976 225.034 354.159 226.629 354.45 228.208 cv
354.477 228.355 354.722 228.323 354.712 228.173 cv
cp
f
332.274 201.136 mo
332.702 200.618 333.13 200.101 333.558 199.584 cv
333.632 199.494 333.5 199.366 333.43 199.456 cv
333.018 199.989 332.606 200.522 332.194 201.056 cv
332.274 201.136 li
cp
f
336.805 189.648 mo
334.738 192.774 332.718 195.87 330.932 199.171 cv
330.836 199.348 331.103 199.506 331.203 199.329 cv
333.039 196.093 334.844 192.808 336.833 189.665 cv
336.805 189.648 li
cp
f
335.051 193.506 mo
335.421 192.474 335.784 191.439 336.142 190.403 cv
336.212 190.2 335.888 190.111 335.82 190.314 cv
335.47 191.352 335.125 192.391 334.787 193.433 cv
334.732 193.602 334.992 193.67 335.051 193.506 cv
cp
f
319.977 211.801 mo
320.308 210.861 320.64 209.921 320.972 208.98 cv
321.027 208.823 320.773 208.752 320.721 208.911 cv
320.41 209.857 320.1 210.803 319.79 211.75 cv
319.751 211.869 319.936 211.918 319.977 211.801 cv
cp
f
321.904 207.115 mo
322.302 206.372 322.756 205.652 323.123 204.894 cv
323.219 204.695 322.93 204.52 322.824 204.719 cv
322.424 205.464 322.106 206.257 321.737 207.018 cv
321.683 207.129 321.844 207.226 321.904 207.115 cv
cp
f
323.665 202.944 mo
322.697 204.566 321.764 206.219 320.714 207.79 cv
320.884 207.862 321.055 207.934 321.226 208.006 cv
321.462 207.038 321.814 206.142 322.257 205.25 cv
322.414 204.933 321.953 204.656 321.779 204.971 cv
321.274 205.88 320.926 206.846 320.685 207.857 cv
320.615 208.151 321.059 208.373 321.198 208.073 cv
321.991 206.355 322.917 204.695 323.798 203.021 cv
323.665 202.944 li
cp
f
277.535 171.598 mo
275.937 175.075 li
271.981 179.357 li
272.762 201.955 li
272.018 208.601 li
274.861 219.591 li
275.297 222.453 275.734 225.315 276.171 228.177 cv
276.351 229.353 276.23 232.094 277.575 232.172 cv
278.61 232.232 280.485 230.157 281.245 229.571 cv
282.626 228.505 284.007 227.439 285.389 226.374 cv
286.053 225.861 286.726 225.339 287.215 224.658 cv
288.419 222.978 288.385 219.842 288.687 217.841 cv
288.87 216.634 288.762 214.451 289.363 213.371 cv
296.593 200.378 li
302.427 194.103 li
302.427 194.103 301.098 183.8 299.239 178.567 cv
297.381 173.334 296.785 171.807 296.785 171.807 cv
288.189 172.405 li
277.535 171.598 li
cp
.266667 .301961 .337255 rgb
f
293.576 215.563 mo
293.326 222.586 li
293.326 222.586 291.988 232.423 292.183 232.026 cv
292.378 231.63 305.09 222.211 305.09 222.211 cv
305.09 222.211 307.645 213.809 308.582 208.997 cv
309.519 204.185 309.65 200.11 309.65 200.11 cv
309.65 200.11 303.945 204.697 300.86 207.664 cv
297.775 210.631 293.576 215.563 293.576 215.563 cv
cp
f
281.245 229.571 mo
281.249 229.41 292.183 232.026 292.183 232.026 cv
293.326 222.586 li
293.513 214.99 li
289.293 213.852 li
287.741 224.225 li
281.245 229.571 li
cp
.313726 .360784 .4 rgb
f
293.576 215.563 mo
293.791 214.766 301.514 207.025 301.724 206.598 cv
301.933 206.172 307.533 201.78 307.533 201.78 cv
309.65 200.11 li
302.427 194.103 li
302.427 194.103 298.481 198.123 295.073 203.117 cv
291.665 208.11 289.363 213.371 289.363 213.371 cv
293.576 215.563 li
cp
.411765 .466667 .513726 rgb
f
272.4 178.576 mo
275.937 175.075 li
277.535 171.598 li
288.189 172.405 li
296.785 171.807 li
296.785 171.807 293.397 169.165 287.706 167.515 cv
282.016 165.864 273.775 163.648 273.775 163.648 cv
263.118 163.074 li
252.776 163.419 li
267.392 168.694 li
270.501 169.993 li
272.4 178.576 li
cp
.54902 .615686 .67451 rgb
f
252.776 163.419 mo
248.162 166.735 li
244.752 170.871 li
242.304 190.472 li
233.692 192.587 li
227.957 207.36 li
224.393 220.676 li
233.273 231.085 li
240.771 232.324 li
267.694 232.482 li
277.575 232.172 li
273.241 212.645 li
273.241 212.645 272.942 207.346 272.762 201.955 cv
272.582 196.564 271.198 177.755 271.501 177.139 cv
271.804 176.523 270.501 169.993 270.501 169.993 cv
270.501 169.993 256.334 163.027 252.776 163.419 cv
cp
.521569 .584314 .639216 rgb
f
233.692 192.587 mo
244.908 203.532 li
251.653 202.26 li
245.736 194.225 li
241.443 190.355 li
233.692 192.587 li
cp
.592157 .666667 .733333 rgb
f
270.501 169.993 mo
277.535 171.598 li
275.088 176.532 li
271.981 179.357 li
270.501 169.993 li
cp
f
225.35 216.863 mo
233.614 226.969 li
240.379 228.766 li
271.907 228.893 li
272.527 211.453 li
274.925 221.199 li
277.575 232.172 li
269.258 232.257 li
269.258 232.257 241.26 231.952 240.771 232.324 cv
240.283 232.696 233.273 231.085 233.273 231.085 cv
226.222 223.334 li
224.393 220.676 li
225.35 216.863 li
cp
.411765 .466667 .513726 rgb
f
302.362 194.203 mo
309.73 200.022 li
309.751 200.039 li
309.751 200.064 li
309.739 201.018 309.7 201.971 309.603 202.92 cv
309.573 203.396 309.493 203.866 309.44 204.34 cv
309.387 204.814 309.318 205.285 309.239 205.755 cv
308.953 207.639 308.569 209.507 308.15 211.365 cv
307.31 215.082 306.299 218.755 305.167 222.397 cv
305.15 222.45 li
305.103 222.486 li
292.076 232.487 li
291.705 232.079 li
291.765 232.014 li
291.897 232.469 li
281.026 229.629 li
281.202 228.971 li
292.04 231.934 li
292.483 232.055 li
292.172 232.389 li
292.112 232.454 li
291.741 232.046 li
304.882 222.194 li
304.819 222.283 li
305.987 218.67 307.04 215.009 307.92 211.311 cv
308.359 209.462 308.763 207.603 309.07 205.728 cv
309.154 205.26 309.227 204.791 309.286 204.319 cv
309.344 203.848 309.43 203.38 309.464 202.906 cv
309.572 201.961 309.621 201.014 309.644 200.064 cv
309.665 200.106 li
302.362 194.203 li
cp
.266667 .301961 .337255 rgb
f
302.484 193.923 mo
301.098 195.357 299.853 196.907 298.619 198.459 cv
297.396 200.022 296.264 201.651 295.164 203.297 cv
294.072 204.951 293.069 206.66 292.137 208.404 cv
291.194 210.142 290.343 211.931 289.642 213.777 cv
289.657 213.717 li
289.392 215.477 289.083 217.232 288.799 218.99 cv
288.51 220.747 288.167 222.497 287.854 224.251 cv
288.045 222.48 288.206 220.704 288.421 218.936 cv
288.641 217.169 288.837 215.398 289.076 213.633 cv
289.08 213.604 li
289.091 213.573 li
289.777 211.686 290.614 209.861 291.542 208.087 cv
292.483 206.319 293.542 204.618 294.661 202.961 cv
295.776 201.3 297.01 199.723 298.304 198.202 cv
299.587 196.673 301.01 195.258 302.484 193.923 cv
cp
.592157 .666667 .733333 rgb
f
276.939 232.687 mo
276.939 232.687 276.424 229.31 275.517 224.275 cv
275.047 221.765 274.482 218.824 273.643 215.766 cv
272.8 212.719 271.564 209.439 271.448 205.86 cv
271.403 204.97 271.488 204.067 271.495 203.267 cv
271.51 202.434 271.498 201.6 271.471 200.77 cv
271.394 199.093 271.318 197.443 271.245 195.846 cv
271.107 192.648 270.978 189.663 270.868 187.104 cv
270.646 181.988 270.499 178.577 270.499 178.577 cv
273.225 178.542 li
273.225 178.542 273.202 181.955 273.167 187.075 cv
273.15 189.634 273.13 192.62 273.108 195.82 cv
273.102 197.422 273.095 199.077 273.088 200.758 cv
273.073 201.608 273.043 202.468 272.985 203.333 cv
272.929 204.23 272.809 205.028 272.811 205.846 cv
272.743 209.139 273.77 212.42 274.479 215.554 cv
275.177 218.708 275.592 221.666 275.938 224.208 cv
276.593 229.292 276.939 232.687 276.939 232.687 cv
cp
f
270.574 178.982 mo
270.394 178.326 270.205 177.543 270.074 176.845 cv
269.935 176.123 269.826 175.397 269.747 174.669 cv
269.589 173.213 269.549 171.75 269.629 170.298 cv
269.708 170.689 li
269.676 170.604 li
270.121 171.074 li
267.402 169.531 264.683 168.015 261.867 166.69 cv
259.055 165.362 256.132 164.251 253.126 163.365 cv
256.204 163.942 259.253 164.757 262.228 165.809 cv
265.205 166.857 268.104 168.108 270.976 169.371 cv
271.248 169.491 li
271.422 169.841 li
271.462 169.923 li
271.532 170.063 li
271.542 170.314 li
271.599 171.662 271.766 173.001 272.039 174.312 cv
272.176 174.967 272.338 175.616 272.527 176.255 cv
272.723 176.918 272.916 177.483 273.173 178.157 cv
270.574 178.982 li
cp
f
272.436 178.841 mo
272.938 178.299 273.436 177.765 273.9 177.204 cv
274.361 176.643 274.776 176.053 275.164 175.455 cv
275.927 174.247 276.5 172.947 276.981 171.596 cv
277.136 171.16 li
277.634 171.225 li
280.762 171.636 283.941 171.672 287.142 171.672 cv
288.743 171.67 290.351 171.668 291.964 171.708 cv
293.575 171.746 295.194 171.842 296.801 172.038 cv
291.993 172.545 li
290.392 172.699 288.787 172.836 287.172 172.913 cv
285.559 173.005 283.935 173.013 282.307 172.956 cv
281.493 172.914 280.68 172.854 279.866 172.774 cv
279.052 172.685 278.244 172.549 277.437 172.401 cv
278.091 172.03 li
277.504 173.407 276.766 174.755 275.794 175.915 cv
274.825 177.075 273.669 178.038 272.436 178.841 cv
cp
f
253.051 163.279 mo
253.051 163.279 254.111 163.132 255.981 162.96 cv
257.849 162.796 260.531 162.616 263.754 162.688 cv
266.973 162.769 270.736 163.046 274.709 163.746 cv
278.681 164.435 282.866 165.506 286.926 166.936 cv
288.947 167.704 290.935 168.401 292.923 169.204 cv
293.903 169.623 294.867 170.107 295.733 170.709 cv
296.623 171.331 297.367 172.158 297.816 173.114 cv
298.27 174.062 298.518 175.032 298.789 175.955 cv
299.059 176.884 299.322 177.793 299.579 178.678 cv
300.079 180.453 300.518 182.143 300.878 183.713 cv
301.607 186.852 301.961 189.521 302.131 191.389 cv
302.298 193.259 302.31 194.331 302.31 194.331 cv
302.31 194.331 302.256 193.259 302.017 191.401 cv
301.79 189.542 301.287 186.912 300.505 183.803 cv
300.112 182.248 299.639 180.576 299.102 178.818 cv
298.826 177.94 298.543 177.038 298.254 176.116 cv
297.956 175.195 297.713 174.237 297.285 173.375 cv
296.476 171.605 294.577 170.595 292.676 169.791 cv
290.748 169.027 288.686 168.32 286.698 167.577 cv
278.667 164.649 270.138 163.344 263.741 163.069 cv
260.538 162.938 257.86 162.968 255.989 163.073 cv
254.118 163.173 253.051 163.279 253.051 163.279 cv
cp
f
291.364 231.832 mo
291.759 230.46 292.024 229.158 292.243 227.761 cv
292.457 226.385 292.605 224.993 292.717 223.595 cv
292.941 220.797 293.017 217.974 293.167 215.146 cv
293.18 214.899 li
293.396 214.807 li
293.823 214.626 li
293.688 214.728 li
298.461 209.25 303.839 204.315 309.698 200.064 cv
303.99 204.517 298.811 209.617 294.266 215.215 cv
294.216 215.278 li
294.131 215.317 li
293.71 215.513 li
293.939 215.174 li
293.888 217.991 293.911 220.82 293.783 223.661 cv
293.719 225.081 293.618 226.505 293.447 227.927 cv
293.282 229.328 293.027 230.808 292.686 232.164 cv
291.364 231.832 li
cp
f
293.699 215.485 mo
289.245 213.873 li
289.477 213.233 li
293.931 214.845 li
293.699 215.485 li
cp
f
242.421 189.687 mo
242.421 189.687 244.922 192.706 247.183 195.894 cv
248.319 197.485 249.412 199.104 250.196 200.342 cv
250.984 201.577 251.474 202.421 251.474 202.421 cv
251.474 202.421 250.947 201.599 250.108 200.401 cv
249.272 199.2 248.111 197.633 246.91 196.098 cv
244.515 193.016 241.903 190.131 241.903 190.131 cv
242.421 189.687 li
cp
f
288.313 224.037 mo
288.243 223.863 288.054 223.947 287.956 224.045 cv
287.845 224.142 287.745 224.254 287.649 224.368 cv
287.088 225.078 li
286.901 225.328 286.635 225.525 286.412 225.708 cv
285.712 226.281 li
282.912 228.573 li
277.245 233.067 li
276.906 232.137 li
277.396 232.098 li
277.43 233.157 li
275.614 233.2 273.797 233.197 271.98 233.211 cv
266.529 233.215 li
262.895 233.216 259.26 233.163 255.626 233.114 cv
251.992 233.055 248.36 232.952 244.729 232.82 cv
242.916 232.746 241.089 232.651 239.277 232.404 cv
237.466 232.164 235.657 231.814 233.948 231.181 cv
235.72 231.596 237.518 231.811 239.322 231.894 cv
241.127 231.963 242.933 231.983 244.751 231.964 cv
248.384 231.885 252.014 231.833 255.643 231.827 cv
259.272 231.83 262.901 231.829 266.53 231.883 cv
271.973 231.965 li
273.788 232.005 275.602 232.028 277.418 232.097 cv
277.452 233.156 li
276.962 233.17 li
275.247 233.219 li
276.623 232.24 li
282.517 228.048 li
285.498 225.997 li
286.244 225.484 li
286.501 225.306 286.738 225.16 286.938 224.942 cv
287.575 224.299 li
287.686 224.195 287.799 224.092 287.926 224.004 cv
288.029 223.909 288.271 223.852 288.313 224.037 cv
cp
.266667 .301961 .337255 rgb
f
233.969 231.011 mo
232.018 229.653 230.229 228.053 228.616 226.288 cv
226.995 224.528 225.569 222.58 224.379 220.492 cv
224.308 220.366 li
224.337 220.217 li
224.445 219.653 224.515 219.036 224.606 218.448 cv
224.895 216.657 li
225.1 215.464 225.331 214.279 225.584 213.096 cv
226.08 210.727 226.736 208.395 227.462 206.086 cv
228.193 203.779 229.02 201.501 229.94 199.261 cv
230.867 197.024 231.857 194.809 232.994 192.669 cv
232.926 192.873 li
232.967 192.628 li
233.036 192.208 li
233.455 192.085 li
241.685 189.674 li
241.379 189.866 li
241.697 189.505 li
241.55 189.835 li
242.074 186.618 242.557 183.396 243.13 180.188 cv
244.791 170.563 li
245.22 170.962 li
245.171 170.974 li
244.392 171.163 li
244.776 170.479 li
245.695 168.843 246.978 167.49 248.363 166.306 cv
249.756 165.124 251.291 164.121 252.926 163.337 cv
251.366 164.258 249.92 165.354 248.615 166.585 cv
247.322 167.824 246.166 169.226 245.39 170.798 cv
244.995 170.304 li
245.044 170.291 li
245.546 170.149 li
245.473 170.69 li
244.164 180.347 li
243.747 183.567 243.24 186.772 242.774 189.983 cv
242.746 190.175 li
242.627 190.314 li
242.314 190.678 li
242.2 190.811 li
242.008 190.87 li
233.804 193.381 li
234.292 192.838 li
234.254 193.084 li
234.238 193.187 li
234.187 193.289 li
233.108 195.416 232.061 197.56 231.135 199.76 cv
230.203 201.956 229.361 204.191 228.613 206.458 cv
227.86 208.724 227.226 211.027 226.627 213.34 cv
226.335 214.498 226.064 215.663 225.819 216.832 cv
225.47 218.589 li
225.356 219.185 225.271 219.761 225.133 220.374 cv
225.09 220.1 li
226.192 222.171 227.496 224.141 228.975 225.978 cv
230.462 227.81 232.145 229.489 233.969 231.011 cv
cp
.411765 .466667 .513726 rgb
f
252.085 214.477 mo
252.655 210.398 252.524 206.153 251.533 202.147 cv
251.4 201.609 250.558 201.838 250.702 202.377 cv
251.776 206.408 252.234 210.292 251.938 214.457 cv
252.085 214.477 li
cp
.592157 .666667 .733333 rgb
f
265.52 216.481 mo
266.084 214.855 266.459 213.286 266.639 211.568 cv
266.666 211.311 266.255 211.308 266.234 211.568 cv
266.103 213.196 265.858 214.878 265.468 216.467 cv
265.52 216.481 li
cp
f
266.479 211.837 mo
268.546 210.935 270.431 209.573 272.187 208.173 cv
272.698 207.765 271.971 207.032 271.464 207.45 cv
269.763 208.853 267.963 210.162 266.321 211.632 cv
266.202 211.739 266.354 211.892 266.479 211.837 cv
cp
f
263.917 189.418 mo
264.277 188.497 264.624 187.567 264.893 186.615 cv
264.962 186.368 264.598 186.275 264.513 186.51 cv
264.174 187.438 263.911 188.393 263.665 189.348 cv
263.623 189.514 263.857 189.571 263.917 189.418 cv
cp
f
265.01 186.759 mo
267.558 184.757 269.833 182.399 271.907 179.916 cv
272.393 179.335 271.564 178.492 271.068 179.076 cv
268.965 181.551 266.797 183.977 264.739 186.488 cv
264.58 186.681 264.816 186.911 265.01 186.759 cv
cp
f
267.064 171.294 mo
268.027 171.541 269.086 171.544 270.057 171.349 cv
270.624 171.236 270.384 170.368 269.818 170.482 cv
268.899 170.666 267.95 170.916 267.064 171.217 cv
267.064 171.294 li
cp
f
242.67 220.6 mo
242.551 217.979 242.2 215.38 242.113 212.753 cv
242.104 212.49 241.699 212.488 241.703 212.753 cv
241.735 215.364 241.862 218.086 242.55 220.616 cv
242.67 220.6 li
cp
f
242.187 212.979 mo
243.592 209.587 244.897 206.154 245.79 202.586 cv
245.958 201.911 244.917 201.623 244.747 202.299 cv
243.857 205.85 243.04 209.415 241.982 212.923 cv
241.941 213.058 242.137 213.102 242.187 212.979 cv
cp
f
233.692 226.853 mo
236.012 227.562 238.298 228.332 240.602 229.088 cv
240.923 229.193 241.154 228.671 240.836 228.533 cv
238.595 227.564 236.136 226.963 233.709 226.722 cv
233.692 226.853 li
cp
f
241.041 229.024 mo
250.869 229.618 260.923 229.055 270.75 228.542 cv
271.291 228.513 271.296 227.671 270.75 227.695 cv
260.865 228.125 250.905 228.082 241.041 228.769 cv
240.877 228.78 240.876 229.014 241.041 229.024 cv
cp
f
250.823 180.656 mo
249.961 182.546 249.556 184.634 249.191 186.669 cv
249.147 186.916 249.525 187.023 249.571 186.774 cv
249.949 184.731 250.55 182.736 250.911 180.693 cv
250.823 180.656 li
cp
f
243.318 188.741 mo
245.512 188.345 247.684 187.713 249.721 186.8 cv
250.103 186.628 249.83 185.97 249.434 186.118 cv
247.366 186.891 245.313 187.695 243.235 188.443 cv
243.048 188.511 243.122 188.776 243.318 188.741 cv
cp
f
257.93 196.958 mo
258.887 196.24 259.87 195.545 260.793 194.782 cv
260.91 194.685 260.751 194.475 260.628 194.569 cv
259.677 195.298 258.779 196.1 257.865 196.874 cv
257.93 196.958 li
cp
f
263.495 192.7 mo
263.832 192.284 264.17 191.867 264.508 191.451 cv
264.591 191.347 264.443 191.2 264.361 191.304 cv
264.028 191.725 263.696 192.147 263.363 192.568 cv
263.29 192.661 263.419 192.794 263.495 192.7 cv
cp
f
265.304 190.74 mo
267.389 188.796 269.523 186.915 271.636 185.002 cv
272.004 184.67 271.439 184.099 271.09 184.456 cv
269.103 186.495 267.146 188.555 265.127 190.563 cv
265.013 190.677 265.187 190.85 265.304 190.74 cv
cp
f
291.563 212.301 mo
291.891 212.412 292.217 212.525 292.548 212.626 cv
292.73 212.681 292.81 212.38 292.626 212.343 cv
292.286 212.275 291.943 212.22 291.601 212.162 cv
291.511 212.147 291.474 212.271 291.563 212.301 cv
cp
f
293.806 212.787 mo
294.212 212.982 294.621 213.169 295.026 213.365 cv
295.239 213.468 295.376 213.153 295.153 213.063 cv
294.736 212.895 294.323 212.718 293.907 212.549 cv
293.771 212.494 293.674 212.723 293.806 212.787 cv
cp
f
302.106 196.206 mo
302.516 196.389 302.927 196.571 303.341 196.745 cv
303.479 196.803 303.563 196.609 303.421 196.556 cv
303 196.396 302.577 196.244 302.153 196.094 cv
302.106 196.206 li
cp
f
304.578 197.282 mo
306.11 198.31 307.49 199.508 308.921 200.667 cv
309.394 201.05 309.924 200.374 309.434 200.002 cv
307.956 198.881 306.31 197.988 304.688 197.093 cv
304.564 197.025 304.462 197.204 304.578 197.282 cv
cp
f
297.326 208.661 mo
301.501 206.495 305.462 203.985 309.238 201.184 cv
309.717 200.828 309.24 200.016 308.768 200.379 cv
305.033 203.25 301.197 205.969 297.286 208.592 cv
297.326 208.661 li
cp
f
287.947 229.711 mo
289.058 230.723 290.327 231.4 291.772 231.807 cv
292.096 231.898 292.236 231.384 291.911 231.304 cv
290.531 230.964 289.228 230.369 288.044 229.586 cv
287.947 229.711 li
cp
f
269.688 169.877 mo
274.428 170.873 279.215 171.554 283.943 172.637 cv
284.303 172.719 284.457 172.169 284.096 172.082 cv
279.409 170.952 274.539 169.914 269.707 169.736 cv
269.688 169.877 li
cp
f
233.638 221.908 mo
236.392 218.972 239.068 215.929 241.684 212.869 cv
241.865 212.658 241.565 212.35 241.376 212.56 cv
238.677 215.552 236.004 218.602 233.446 221.716 cv
233.337 221.848 233.516 222.037 233.638 221.908 cv
cp
f
238.177 219.819 mo
238.446 219.076 238.851 218.436 239.382 217.853 cv
239.504 217.719 239.305 217.519 239.182 217.653 cv
238.622 218.27 238.24 218.974 238.002 219.77 cv
237.968 219.884 238.137 219.927 238.177 219.819 cv
cp
f
240.4 216.316 mo
241.102 214.911 241.891 213.552 242.63 212.166 cv
242.807 211.834 242.281 211.543 242.134 211.875 cv
241.493 213.32 240.904 214.787 240.225 216.214 cv
240.17 216.33 240.341 216.433 240.4 216.316 cv
cp
f
249.04 219.381 mo
250.066 217.51 251.328 215.762 252.31 213.874 cv
252.59 213.336 251.774 212.859 251.496 213.398 cv
250.515 215.303 249.811 217.351 248.87 219.282 cv
248.815 219.394 248.978 219.493 249.04 219.381 cv
cp
f
267.983 137.843 mo
264.224 142.138 li
261.003 147.239 li
261.003 147.239 264.761 152.742 265.164 152.742 cv
265.567 152.742 269.325 156.366 269.325 156.366 cv
271.473 160.796 li
279.929 168.85 li
301.272 170.46 li
304.359 164.286 li
304.359 164.286 285.433 146.568 285.298 146.031 cv
285.164 145.494 267.983 137.843 267.983 137.843 cv
cp
.466667 .52549 .576471 rgb
f
285.298 146.031 mo
284.762 151.803 li
284.627 153.011 li
280.6 155.427 li
287.043 155.829 li
287.312 158.246 li
290.399 165.628 li
300.601 167.105 li
297.379 169.655 li
282.345 168.044 li
277.916 161.87 li
271.204 160.259 li
277.11 172.071 li
307.849 172.071 li
311.742 167.373 li
320.869 167.373 li
320.869 167.373 323.688 168.85 320.601 164.957 cv
317.514 161.064 309.863 153.95 309.863 153.95 cv
308.252 151.937 li
310.534 144.554 li
311.473 142.809 li
305.433 133.01 li
296.44 139.722 li
296.574 142.406 li
285.298 146.031 li
cp
.266667 .301961 .337255 rgb
f
296.44 139.722 mo
296.44 139.722 301.138 136.098 301.272 135.695 cv
301.406 135.292 305.433 133.01 305.433 133.01 cv
295.366 131.131 li
290.936 135.024 li
296.44 139.722 li
cp
.521569 .584314 .639216 rgb
f
267.983 137.843 mo
290.936 135.024 li
296.44 139.722 li
296.574 142.406 li
285.298 146.031 li
267.983 137.843 li
cp
.54902 .615686 .67451 rgb
f
263.285 145.628 mo
261.808 147.91 li
265.164 152.742 li
269.325 156.366 li
269.594 151.131 li
263.285 145.628 li
cp
f
280.6 155.427 mo
277.916 161.87 li
282.345 168.044 li
297.379 169.655 li
300.601 167.105 li
290.399 165.628 li
287.312 158.246 li
287.043 155.829 li
280.6 155.427 li
cp
.411765 .466667 .513726 rgb
f
310.936 168.447 mo
307.849 172.071 li
277.11 172.071 li
282.345 168.044 li
297.379 169.655 li
300.601 167.105 li
310.936 168.447 li
cp
.203922 .243137 .278431 rgb
f
307.849 172.34 mo
311.742 167.396 li
312.061 167.659 li
307.849 172.34 li
cp
f
305.567 133.01 mo
306.528 134.682 307.545 136.316 308.564 137.949 cv
309.571 139.589 310.611 141.21 311.642 142.835 cv
311.714 142.949 li
311.637 143.059 li
310.729 144.357 310.21 145.909 309.688 147.429 cv
309.192 148.965 308.761 150.531 308.252 152.071 cv
308.633 150.495 308.95 148.905 309.403 147.342 cv
309.62 146.558 309.87 145.781 310.178 145.023 cv
310.485 144.264 310.838 143.517 311.31 142.828 cv
311.305 143.052 li
310.255 141.432 309.258 139.783 308.276 138.123 cv
307.797 137.285 307.322 136.446 306.862 135.598 cv
306.411 134.745 305.977 133.882 305.567 133.01 cv
cp
f
267.825 137.69 mo
272.299 139.648 li
276.762 141.63 li
285.66 145.654 li
285.399 145.64 li
296.625 141.732 li
296.832 141.66 li
297.007 141.798 li
298.191 142.736 299.365 143.689 300.516 144.668 cv
301.668 145.646 302.81 146.635 303.94 147.638 cv
305.069 148.643 306.187 149.658 307.292 150.689 cv
308.394 151.723 309.498 152.754 310.563 153.826 cv
312.704 155.958 314.792 158.141 316.827 160.371 cv
317.843 161.489 318.832 162.63 319.812 163.777 cv
321.272 165.507 li
321.5 165.808 321.781 166.062 321.959 166.413 cv
322.043 166.585 322.102 166.772 322.107 166.965 cv
322.121 167.158 322.005 167.366 321.808 167.398 cv
322.002 167.352 322.096 167.149 322.074 166.967 cv
322.058 166.782 321.991 166.605 321.9 166.444 cv
321.718 166.128 321.414 165.879 321.172 165.594 cv
319.639 163.931 li
318.613 162.828 317.569 161.741 316.518 160.661 cv
314.428 158.491 312.288 156.372 310.098 154.305 cv
307.914 152.234 305.703 150.19 303.433 148.214 cv
301.17 146.23 298.84 144.325 296.505 142.427 cv
296.886 142.493 li
285.626 146.301 li
285.489 146.348 li
285.364 146.287 li
276.575 142.03 li
272.195 139.872 li
267.825 137.69 li
cp
.592157 .666667 .733333 rgb
f
296.112 142.345 mo
296.179 139.971 li
296.184 139.816 li
296.277 139.726 li
299.05 137.071 302.155 134.786 305.487 132.94 cv
302.272 134.982 299.333 137.433 296.765 140.206 cv
296.863 139.961 li
296.939 142.345 li
296.112 142.345 li
cp
f
291.182 134.92 mo
289.265 135.082 287.358 135.326 285.449 135.538 cv
279.726 136.237 li
268.289 137.712 li
268.388 137.665 li
266.926 139.026 265.63 140.568 264.444 142.189 cv
263.268 143.818 262.158 145.501 261.137 147.239 cv
262.088 145.463 263.086 143.704 264.243 142.046 cv
265.394 140.388 266.651 138.785 268.139 137.396 cv
268.181 137.357 li
268.239 137.349 li
272.046 136.796 275.86 136.307 279.683 135.879 cv
281.593 135.652 283.509 135.476 285.424 135.301 cv
287.339 135.126 289.261 135.005 291.182 134.92 cv
cp
f
305.433 133.01 mo
304.581 132.905 303.731 132.79 302.884 132.658 cv
302.039 132.52 301.189 132.404 300.346 132.249 cv
297.815 131.804 li
295.291 131.316 li
295.453 131.268 li
294.063 132.527 292.643 133.755 291.196 134.94 cv
292.501 133.588 293.835 132.279 295.197 131.001 cv
295.266 130.937 li
295.359 130.953 li
297.889 131.403 li
300.412 131.896 li
301.254 132.053 302.089 132.25 302.928 132.425 cv
303.765 132.605 304.6 132.803 305.433 133.01 cv
cp
f
291.788 137.275 mo
291.788 137.275 292.106 137.428 292.569 137.687 cv
293.033 137.943 293.637 138.311 294.238 138.681 cv
294.839 139.051 295.441 139.417 295.9 139.671 cv
296.358 139.927 296.671 140.077 296.671 140.077 cv
296.476 140.441 li
296.476 140.441 296.165 140.262 295.719 139.969 cv
295.272 139.677 294.696 139.266 294.124 138.853 cv
293.552 138.44 292.978 138.031 292.536 137.742 cv
292.095 137.451 291.788 137.275 291.788 137.275 cv
cp
f
262.995 145.3 mo
262.995 145.3 263.436 145.662 264.076 146.219 cv
264.714 146.775 265.564 147.518 266.415 148.261 cv
267.264 149.005 268.113 149.75 268.749 150.308 cv
269.386 150.869 269.803 151.258 269.803 151.258 cv
269.803 151.258 269.307 150.976 268.606 150.492 cv
267.904 150.008 266.997 149.322 266.143 148.571 cv
265.286 147.824 264.486 147.015 263.914 146.384 cv
263.34 145.753 262.995 145.3 262.995 145.3 cv
cp
f
269.704 148.277 mo
269.704 148.277 269.819 150.28 269.792 152.29 cv
269.779 154.3 269.625 156.308 269.625 156.308 cv
269.214 156.268 li
269.214 156.268 269.47 154.283 269.585 152.283 cv
269.715 150.284 269.704 148.277 269.704 148.277 cv
cp
f
297.418 169.633 mo
292.244 169.264 287.103 168.52 281.935 168.151 cv
281.788 168.14 li
281.844 168.003 li
281.921 167.816 li
281.921 167.899 li
281.444 166.842 280.759 165.877 280.055 164.943 cv
279.345 164.011 278.586 163.111 277.8 162.244 cv
277.843 162.277 li
276.783 161.732 275.605 161.439 274.428 161.179 cv
273.247 160.918 272.045 160.705 270.87 160.32 cv
271.002 159.929 li
272.132 160.317 273.323 160.546 274.508 160.825 cv
275.69 161.104 276.89 161.417 277.989 162 cv
278.014 162.013 li
278.032 162.033 li
278.815 162.921 279.563 163.833 280.267 164.784 cv
280.964 165.737 281.642 166.716 282.12 167.815 cv
282.138 167.857 li
282.12 167.899 li
282.041 168.085 li
281.951 167.938 li
287.125 168.379 292.249 169.193 297.418 169.633 cv
cp
f
297.394 169.625 mo
300.55 167.099 li
300.792 167.434 li
297.394 169.625 li
cp
f
290.001 165.748 mo
291.769 165.85 293.535 165.968 295.296 166.126 cv
297.056 166.289 298.82 166.422 300.577 166.613 cv
304.095 166.969 307.605 167.38 311.111 167.839 cv
310.794 167.954 li
311.401 167.329 li
311.513 167.213 li
311.665 167.215 li
313.347 167.236 315.029 167.303 316.712 167.344 cv
317.553 167.362 318.394 167.406 319.235 167.444 cv
320.076 167.482 320.917 167.52 321.758 167.578 cv
320.917 167.635 320.076 167.673 319.235 167.711 cv
318.394 167.75 317.553 167.793 316.712 167.811 cv
315.029 167.852 313.347 167.919 311.665 167.94 cv
311.929 167.826 li
311.341 168.469 li
311.217 168.604 li
311.024 168.584 li
307.507 168.221 303.996 167.812 300.491 167.346 cv
298.738 167.128 296.991 166.849 295.24 166.602 cv
293.49 166.35 291.745 166.058 290.001 165.748 cv
cp
.203922 .243137 .278431 rgb
f
287.559 158.693 mo
287.559 158.693 287.275 158.065 287.176 157.371 cv
287.059 156.681 287.142 155.968 287.142 155.968 cv
287.548 156.041 li
287.548 156.041 287.372 156.679 287.383 157.354 cv
287.374 158.028 287.559 158.693 287.559 158.693 cv
cp
.592157 .666667 .733333 rgb
f
280.497 155.682 mo
280.497 155.682 281.149 155.654 282.123 155.641 cv
283.095 155.633 284.392 155.622 285.689 155.611 cv
286.986 155.614 288.283 155.616 289.256 155.618 cv
290.229 155.626 290.882 155.65 290.882 155.65 cv
290.882 155.65 290.238 155.759 289.265 155.851 cv
288.293 155.944 286.992 156.022 285.69 156.024 cv
284.388 156.03 283.087 155.959 282.114 155.872 cv
281.141 155.786 280.497 155.682 280.497 155.682 cv
cp
f
284.561 153.013 mo
284.561 153.013 284.837 151.241 284.862 149.464 cv
284.912 147.686 284.713 145.932 284.713 145.932 cv
285.539 145.893 li
285.539 145.893 285.533 147.713 285.274 149.497 cv
285.04 151.286 284.561 153.013 284.561 153.013 cv
cp
f
307.807 172.192 mo
305.234 172.264 302.661 172.283 300.088 172.33 cv
292.369 172.38 li
289.796 172.408 287.223 172.372 284.651 172.371 cv
276.932 172.338 li
276.726 172.337 li
276.605 172.17 li
276.42 171.917 li
276.398 171.886 li
276.387 171.863 li
272.772 164.33 li
271.558 161.823 270.372 159.303 269.199 156.779 cv
269.266 156.869 li
267.708 155.425 266.217 153.908 264.855 152.282 cv
263.491 150.658 262.211 148.966 261.068 147.187 cv
262.338 148.877 263.675 150.512 265.113 152.054 cv
266.553 153.592 268.047 155.076 269.64 156.45 cv
269.678 156.483 li
269.708 156.54 li
270.966 159.02 272.213 161.505 273.431 164.004 cv
277.113 171.485 li
277.08 171.432 li
277.267 171.684 li
276.939 171.517 li
284.657 171.616 li
287.229 171.659 289.802 171.667 292.374 171.739 cv
300.091 171.92 li
302.663 172.012 305.236 172.075 307.807 172.192 cv
cp
.203922 .243137 .278431 rgb
f
301.611 153.19 mo
301.396 151.88 300.524 149.646 301.345 148.511 cv
301.782 147.905 302.38 147.655 302.56 146.883 cv
302.682 146.359 301.924 146.153 301.757 146.662 cv
301.468 147.539 300.653 148.218 300.511 149.135 cv
300.313 150.416 301.144 152.031 301.524 153.214 cv
301.611 153.19 li
cp
.592157 .666667 .733333 rgb
f
298.904 149.426 mo
299.547 149.36 300.19 149.29 300.832 149.216 cv
301.305 149.162 301.15 148.459 300.75 148.607 cv
300.128 148.838 299.508 149.074 298.888 149.312 cv
298.904 149.426 li
cp
f
299.353 154.994 mo
300.697 154.174 302.059 153.368 303.477 152.68 cv
303.678 152.582 303.501 152.278 303.301 152.379 cv
301.873 153.098 300.537 153.913 299.31 154.938 cv
299.353 154.994 li
cp
f
288.102 143.398 mo
288.65 144.103 289.389 144.611 290.302 144.608 cv
290.812 144.607 290.795 143.778 290.302 143.827 cv
289.541 143.903 288.799 143.815 288.225 143.275 cv
288.102 143.398 li
cp
f
278.914 160.352 mo
279.652 158.91 280.261 157.471 280.729 155.912 cv
280.849 155.512 280.195 155.336 280.106 155.741 cv
279.768 157.282 279.36 158.831 278.838 160.32 cv
278.914 160.352 li
cp
f
268.746 147.957 mo
269.576 148.453 270.419 148.878 271.294 149.288 cv
271.482 149.376 271.646 149.096 271.457 149.009 cv
270.569 148.599 269.693 148.224 268.768 147.904 cv
268.746 147.957 li
cp
f
275.832 146.604 mo
276.111 145.191 276.382 143.783 276.735 142.387 cv
276.887 141.783 275.902 141.649 275.898 142.273 cv
275.888 143.715 275.797 145.149 275.712 146.587 cv
275.832 146.604 li
cp
f
276.699 160.156 mo
277.013 160.758 277.213 161.412 277.628 161.962 cv
277.802 162.192 278.166 161.998 278.024 161.73 cv
277.699 161.118 277.187 160.657 276.771 160.114 cv
276.699 160.156 li
cp
f
287.933 167.002 mo
288.732 166.655 289.555 166.367 290.347 166.005 cv
290.498 165.936 290.367 165.71 290.217 165.782 cv
289.436 166.152 288.693 166.594 287.92 166.98 cv
287.933 167.002 li
cp
f
273.554 147.505 mo
273.663 147.412 273.775 147.32 273.883 147.225 cv
273.755 147.097 li
273.66 147.206 273.57 147.318 273.476 147.428 cv
273.554 147.505 li
cp
f
273.217 147.972 mo
273.722 147.856 274.177 147.655 274.603 147.358 cv
274.536 147.244 li
274.127 147.544 273.684 147.755 273.192 147.882 cv
273.217 147.972 li
cp
f
275.818 146.892 mo
276.38 146.598 276.963 146.325 277.502 145.991 cv
277.593 145.935 277.514 145.803 277.419 145.849 cv
276.849 146.127 276.308 146.476 275.761 146.795 cv
275.818 146.892 li
cp
f
272.145 154.181 mo
273.776 153.219 275.331 152.107 276.749 150.85 cv
276.841 150.768 276.706 150.635 276.614 150.715 cv
275.19 151.964 273.699 153.087 272.089 154.086 cv
272.145 154.181 li
cp
f
278.111 149.65 mo
278.518 149.445 278.936 149.264 279.34 149.056 cv
279.444 149.003 279.353 148.847 279.249 148.9 cv
278.846 149.107 278.456 149.341 278.054 149.552 cv
278.111 149.65 li
cp
f
281.027 148.007 mo
281.744 147.566 282.459 147.102 283.209 146.718 cv
283.417 146.611 283.21 146.275 283.03 146.411 cv
282.357 146.921 281.628 147.365 280.918 147.82 cv
280.801 147.895 280.908 148.081 281.027 148.007 cv
cp
f
277.318 151.89 mo
279.316 150.398 281.378 148.986 283.357 147.47 cv
283.536 147.332 283.361 147.021 283.176 147.16 cv
281.175 148.665 279.253 150.279 277.271 151.809 cv
277.318 151.89 li
cp
f
280.279 151.069 mo
280.485 150.921 280.688 150.772 280.891 150.619 cv
281.018 150.523 280.882 150.342 280.756 150.444 cv
280.559 150.604 280.364 150.765 280.171 150.929 cv
280.279 151.069 li
cp
f
285.563 159.354 mo
286.025 158.637 286.633 158.115 287.189 157.483 cv
287.331 157.321 287.112 157.099 286.951 157.246 cv
286.341 157.805 285.924 158.619 285.535 159.338 cv
285.563 159.354 li
cp
f
289.258 162.511 mo
288.355 161.036 287.646 159.457 287.21 157.782 cv
287.147 157.539 286.756 157.649 286.837 157.885 cv
287.408 159.556 288.156 161.112 289.169 162.563 cv
289.258 162.511 li
cp
f
290.633 165.692 mo
290.344 165.459 289.969 165.644 289.94 166.005 cv
289.932 166.096 290.006 166.161 290.081 166.191 cv
290.563 166.385 290.839 165.5 290.325 165.397 cv
290.125 165.357 289.969 165.648 290.177 165.748 cv
290.184 165.819 li
290.326 166.005 li
290.475 165.898 li
290.599 165.964 290.754 165.79 290.633 165.692 cv
cp
f
289.889 164.089 mo
290.003 164.547 290.044 165.013 290.143 165.474 cv
290.192 165.702 290.568 165.598 290.491 165.378 cv
290.336 164.932 290.129 164.513 289.989 164.061 cv
289.889 164.089 li
cp
f
292.398 166.359 mo
291.728 165.942 291.067 165.563 290.271 165.465 cv
289.975 165.429 289.96 165.929 290.271 165.94 cv
291.008 165.964 291.727 166.019 292.38 166.39 cv
292.398 166.359 li
cp
f
278.448 160.817 mo
278.2 161.155 277.97 161.513 277.862 161.921 cv
277.804 162.142 278.149 162.308 278.246 162.083 cv
278.297 161.965 278.348 161.847 278.399 161.728 cv
278.495 161.504 278.181 161.303 278.061 161.531 cv
278.002 161.644 277.943 161.758 277.883 161.871 cv
278.011 161.925 278.139 161.979 278.267 162.033 cv
278.373 161.644 278.448 161.257 278.604 160.883 cv
278.644 160.786 278.5 160.745 278.448 160.817 cv
cp
f
284.175 166.814 mo
283.521 167.145 282.879 167.492 282.238 167.849 cv
282.067 167.944 282.226 168.216 282.391 168.111 cv
283.01 167.717 283.622 167.318 284.226 166.9 cv
284.175 166.814 li
cp
f
290.114 168.193 mo
287.583 167.959 285.037 167.721 282.5 167.569 cv
282.175 167.549 282.174 168.061 282.5 168.076 cv
285.032 168.187 287.58 168.214 290.114 168.242 cv
290.114 168.193 li
cp
f
70.6799 66.9695 mo
53.807 66.7991 li
37.4454 64.5835 li
29.9464 63.5608 li
27.049 69.3556 li
20.2317 71.0599 li
22.2769 92.8753 li
14.2665 97.3066 li
6.76747 99.8631 li
4.38135 100.034 li
4.38135 100.034 8.64224 101.056 14.2665 99.8631 cv
19.8908 98.6701 25.3446 97.8179 25.3446 97.8179 cv
42.5584 95.7727 li
47.501 95.9432 li
47.501 95.9432 58.4087 82.9902 58.2383 82.4789 cv
58.0679 81.9677 51.9322 75.3207 51.9322 75.3207 cv
70.6799 66.9695 li
cp
.337255 .305882 .266667 rgb
f
14.2665 46.1767 mo
25.856 52.6531 li
29.9464 63.5608 li
27.049 69.3556 li
20.2317 71.0599 li
22.2769 92.8753 li
15.63 96.9658 li
8.98309 99.1814 li
4.38135 100.034 li
4.38135 100.034 1.99531 94.7501 .972746 87.251 cv
-.0498867 79.752 .290967 77.8773 .290967 77.8773 cv
13.2439 64.2426 li
13.2439 64.2426 13.5848 47.1992 14.2665 46.1767 cv
cp
.576471 .529412 .466667 rgb
f
70.6799 66.9695 mo
51.9322 75.3207 li
51.9322 75.3207 58.2824 82.9526 58.2383 82.4789 cv
58.1941 82.0053 70.6799 66.9695 70.6799 66.9695 cv
cp
.639216 .588235 .521569 rgb
f
14.2665 46.1767 mo
14.2665 46.1767 13.8214 45.7406 16.1801 44.7086 cv
18.5387 43.6767 22.9613 42.7921 22.9613 42.7921 cv
31.3641 41.0231 li
50.6759 53.1115 li
66.597 63.8729 li
70.6799 66.9695 li
52.7397 66.5265 li
38.8824 65.0523 li
29.9464 63.5608 li
25.856 52.6531 li
14.2665 46.1767 li
cp
.67451 .619608 .54902 rgb
f
21.2202 77.6952 mo
28.7325 89.3272 li
47.501 95.9432 li
37.9412 96.3549 li
26.5516 97.5666 li
16.8582 99.2629 li
10.3152 100.232 li
4.38135 100.034 li
4.38135 100.034 8.28219 99.47 14.2665 97.3066 cv
20.2509 95.1432 22.2769 92.8753 22.2769 92.8753 cv
21.2202 77.6952 li
cp
.278431 .247059 .203922 rgb
f
42.7879 74.3025 mo
58.2383 82.4789 li
51.9322 75.3207 li
69.9293 67.0325 li
56.8433 66.7902 li
42.7879 74.3025 li
cp
f
.290967 77.8773 mo
20.2317 71.0599 li
27.049 69.3556 li
13.2439 64.2426 li
.290967 77.8773 li
cp
.513726 .470588 .411765 rgb
f
14.1611 45.621 mo
14.1611 45.621 15.1404 45.0858 16.6842 44.4298 cv
18.224 43.7706 20.3331 43.0124 22.5002 42.4541 cv
24.6657 41.8898 26.8773 41.5268 28.5437 41.3562 cv
30.2104 41.18 31.3279 41.1729 31.3279 41.1729 cv
31.3279 41.1729 30.2345 41.3807 28.5943 41.6924 cv
26.9582 42.0048 24.7953 42.4872 22.6517 43.0385 cv
20.51 43.5975 18.3845 44.2246 16.8028 44.7471 cv
15.2179 45.2714 14.1611 45.621 14.1611 45.621 cv
cp
.733333 .67451 .592157 rgb
f
4.28822 100.711 mo
2.96911 97.1216 1.85787 93.4422 1.11704 89.6773 cv
.740937 87.7967 .442271 85.8987 .242722 83.9876 cv
.0568946 82.0755 -.0312018 80.1515 .00996338 78.2268 cv
.012153 78.1243 li
.0825133 78.0472 li
6.38246 71.1475 li
12.7214 64.2833 li
12.6535 64.4425 li
13.3224 55.245 li
14.0676 46.0524 li
13.6581 55.2661 li
13.1725 64.475 li
13.1677 64.5652 li
13.1046 64.6346 li
6.81623 71.5451 li
.489275 78.4201 li
.561606 78.2409 li
.464678 82.041 .841368 85.8505 1.4949 89.6059 cv
1.82678 91.4842 2.24682 93.3466 2.70285 95.2013 cv
3.16625 97.0546 3.69622 98.8915 4.28822 100.711 cv
cp
f
4.44741 100.19 mo
4.44741 100.19 5.13649 100.229 6.34093 100.219 cv
7.54399 100.221 9.26242 100.121 11.3081 99.8884 cv
15.4075 99.4526 20.7663 98.1632 26.2206 97.2831 cv
28.9552 96.8732 31.6956 96.557 34.2723 96.321 cv
36.848 96.0783 39.2598 95.963 41.3253 95.8662 cv
43.3913 95.7716 45.1154 95.7651 46.3211 95.7505 cv
47.5267 95.7445 48.2157 95.7411 48.2157 95.7411 cv
48.2157 95.7411 45.4625 95.8834 41.3453 96.2056 cv
39.2858 96.3517 36.8882 96.5807 34.323 96.8427 cv
31.7583 97.1026 29.0269 97.4477 26.3163 97.8789 cv
23.5959 98.2848 20.8965 98.8092 18.3512 99.2672 cv
15.8068 99.7273 13.4074 100.053 11.3413 100.225 cv
9.27497 100.407 7.54355 100.374 6.33794 100.32 cv
5.13218 100.265 4.44741 100.19 4.44741 100.19 cv
cp
.337255 .305882 .266667 rgb
f
31.3279 41.1729 mo
38.1466 45.1267 44.9101 49.178 51.5628 53.4124 cv
58.1931 57.6782 64.7494 62.0742 71.0616 66.8087 cv
71.3067 66.9927 li
71.1098 67.2269 li
59.2507 81.3369 li
53.3653 88.4286 li
51.4142 90.8012 49.4551 93.1686 47.6208 95.6339 cv
49.3855 93.1176 51.279 90.6939 53.1633 88.2663 cv
55.056 85.8445 56.9943 83.4596 58.9237 81.0677 cv
62.7832 76.2839 66.7264 71.5702 70.6685 66.8543 cv
70.7167 67.2722 li
67.5475 64.9372 64.3453 62.6465 61.1077 60.4057 cv
57.8689 58.1664 54.5906 55.9838 51.2896 53.8354 cv
47.9976 51.673 44.6787 49.5504 41.3429 47.4541 cv
31.3279 41.1729 li
cp
f
71.0527 66.9765 mo
67.5839 67.144 64.105 67.2336 60.6286 67.1683 cv
57.1524 67.0997 53.675 66.9491 50.2086 66.652 cv
46.7423 66.3563 43.2845 65.956 39.8416 65.4518 cv
36.3976 64.9524 32.977 64.3018 29.5751 63.5741 cv
29.4198 63.5408 li
29.3715 63.3917 li
26.0001 52.9956 li
26.0914 53.1083 li
22.101 50.7458 18.1396 48.3333 14.1754 45.9258 cv
18.224 48.1884 22.2757 50.4459 26.298 52.7537 cv
26.3644 52.7917 li
26.3896 52.8666 li
29.8927 63.219 li
29.6891 63.0369 li
33.0832 63.7521 36.5022 64.3382 39.929 64.8681 cv
43.3567 65.3931 46.8007 65.8146 50.2547 66.1322 cv
51.9824 66.2818 53.7102 66.431 55.4408 66.5528 cv
57.1717 66.6668 58.9042 66.7589 60.6381 66.8292 cv
65.8431 66.9745 li
67.5783 66.9972 69.3157 66.9978 71.0527 66.9765 cv
cp
.733333 .67451 .592157 rgb
f
30.5248 63.6703 mo
27.3041 69.0518 li
29.4301 63.1586 li
30.5248 63.6703 li
cp
f
52.6463 75.259 mo
50.4349 75.1837 48.2225 75.0114 46.0214 74.7441 cv
43.8214 74.4665 41.6349 74.0768 39.4665 73.603 cv
35.1274 72.658 30.8882 71.2691 26.7877 69.561 cv
27.0654 69.0401 li
27.1394 69.0881 li
27.7344 69.4737 li
27.0293 69.6286 li
20.5171 71.0598 li
20.732 70.762 li
21.0454 74.507 21.3589 78.2519 21.6281 82.0006 cv
21.9238 85.7471 22.1584 89.4989 22.4054 93.2496 cv
22.0013 89.5126 21.5846 85.7766 21.2291 82.0354 cv
20.8471 78.2964 20.5096 74.5536 20.1718 70.8108 cv
20.1497 70.566 li
20.3868 70.5127 li
26.9251 69.0445 li
26.815 69.5848 li
26.7412 69.5361 li
27.0188 69.0153 li
29.0453 69.8832 31.1102 70.6629 33.2051 71.3522 cv
34.2538 71.6932 35.3084 72.0153 36.369 72.3184 cv
37.4319 72.6127 38.4956 72.9046 39.5674 73.1683 cv
40.6403 73.4265 41.7176 73.6656 42.7997 73.8853 cv
43.883 74.0995 44.9714 74.2848 46.061 74.4677 cv
48.2418 74.8261 50.4384 75.0906 52.6463 75.259 cv
cp
f
70.1717 67.0405 mo
68.6853 67.8049 67.1958 68.5626 65.6899 69.2846 cv
64.1858 70.01 62.6884 70.7506 61.1704 71.4454 cv
56.6273 73.5551 li
52.0555 75.6016 li
52.1559 75.2067 li
53.003 76.3496 53.9211 77.4485 54.8683 78.5304 cv
55.8082 79.6174 56.735 80.7307 57.5375 81.9266 cv
55.698 79.7142 53.5191 77.8281 51.7378 75.5208 cv
51.5401 75.2647 li
51.8384 75.1258 li
56.3789 73.0107 li
60.9483 70.9588 li
62.4677 70.2663 64.0078 69.6198 65.5411 68.9581 cv
67.0727 68.2928 68.6208 67.6633 70.1717 67.0405 cv
cp
f
48.6283 95.7912 mo
44.228 96.0759 39.8141 95.71 35.4335 95.2963 cv
33.2432 95.0619 31.0573 94.7937 28.8745 94.5014 cv
25.6033 94.044 li
23.9719 93.7875 li
23.1569 93.6563 li
22.7498 93.5905 li
22.5469 93.5578 li
22.4464 93.5421 li
22.3986 93.5349 li
22.3809 93.5322 li
22.4318 93.5307 li
22.4478 93.5217 22.4154 93.5472 22.5396 93.4963 cv
22.9055 93.1099 22.3287 92.8572 22.4706 92.9715 cv
22.8954 93.3135 li
22.5407 93.5011 li
19.6841 95.0123 16.8351 96.5769 13.8174 97.7926 cv
12.3112 98.3996 10.776 98.9426 9.20519 99.3518 cv
7.63603 99.7661 6.04577 100.085 4.44741 100.333 cv
7.61712 99.6779 10.7083 98.7056 13.6562 97.4113 cv
16.5966 96.0966 19.4285 94.5432 22.2699 92.9981 cv
22.3399 93.5276 li
22.4778 93.6406 21.8968 93.3865 22.2586 92.9989 cv
22.3762 92.9463 22.3433 92.9712 22.3664 92.9631 cv
22.443 92.9641 li
22.4764 92.9684 li
22.5306 92.976 li
22.6342 92.9912 li
22.8387 93.0222 li
23.2467 93.0841 li
24.0617 93.2072 li
25.6927 93.4477 li
28.9535 93.9331 li
31.1289 94.2455 33.3077 94.534 35.4901 94.7886 cv
37.6705 95.0612 39.8547 95.3053 42.0442 95.4844 cv
44.2329 95.6673 46.4273 95.8335 48.6283 95.7912 cv
cp
f
24.2938 61.8694 mo
24.8844 59.0063 25.7016 56.2096 26.609 53.4329 cv
26.7222 53.0864 26.1711 52.9343 26.0628 53.2824 cv
25.1911 56.0854 24.6288 58.9471 24.23 61.8518 cv
24.2938 61.8694 li
cp
f
23.4765 61.4547 mo
23.9533 61.5475 24.3542 61.7933 24.6486 62.1839 cv
24.8175 62.4079 25.1316 62.1714 24.9562 61.9465 cv
24.5867 61.4724 24.1069 61.2453 23.5091 61.2137 cv
23.3727 61.2065 23.3398 61.4281 23.4765 61.4547 cv
cp
f
17.7136 65.8337 mo
20.7405 67.2488 23.8735 68.2597 27.0393 69.3104 cv
27.3074 69.3994 27.4317 68.9532 27.1561 68.8871 cv
23.9444 68.117 20.8336 66.9167 17.7591 65.7258 cv
17.7136 65.8337 li
cp
f
6.28926 76.1656 mo
11.2146 75.1402 15.3068 71.8896 20.3372 71.1964 cv
20.8076 71.1316 20.612 70.4046 20.139 70.4773 cv
15.127 71.248 11.0677 74.627 6.25663 76.0472 cv
6.28926 76.1656 li
cp
f
48.9127 71.2342 mo
51.4837 70.2068 53.9373 68.8538 56.1314 67.1587 cv
56.4507 66.9121 56.0968 66.4469 55.7912 66.7176 cv
53.6998 68.57 51.4468 70.0459 48.8818 71.1609 cv
48.9127 71.2342 li
cp
f
11.0308 81.9019 mo
11.7127 79.9527 11.785 77.7052 11.8509 75.6602 cv
11.8574 75.4569 11.5385 75.4565 11.5347 75.6602 cv
11.4945 77.7605 11.0834 79.8062 10.9706 81.8937 cv
11.0308 81.9019 li
cp
f
9.51225 76.8569 mo
12.295 75.5967 14.7814 73.8852 17.1656 71.985 cv
17.4896 71.7267 17.0041 71.213 16.7017 71.5211 cv
14.5924 73.6706 12.1009 75.3403 9.4551 76.7591 cv
9.51225 76.8569 li
cp
f
5.21013 94.7385 mo
4.23355 95.0618 3.32719 95.6597 2.90313 96.6372 cv
2.71489 97.0711 3.32223 97.458 3.5552 97.0183 cv
3.99386 96.1903 4.47186 95.4184 5.27378 94.8894 cv
5.34822 94.8404 5.30341 94.7076 5.21013 94.7385 cv
cp
f
3.6217 91.9566 mo
4.58514 93.7057 5.5712 95.4526 6.62726 97.1477 cv
6.75696 97.3559 7.08439 97.1668 6.95731 96.9547 cv
5.93016 95.2398 4.82475 93.5637 3.70731 91.9066 cv
3.6217 91.9566 li
cp
f
9.90486 82.2458 mo
12.4288 82.6011 14.9436 82.8985 17.4417 83.4209 cv
17.5987 83.4538 17.6659 83.2128 17.5082 83.1798 cv
15.0154 82.6583 12.4772 82.1868 9.93062 82.0558 cv
9.82369 82.0503 9.79589 82.2305 9.90486 82.2458 cv
cp
f
17.0317 83.1415 mo
18.1318 85.5805 20.0148 87.6446 22.0375 89.364 cv
22.3342 89.6162 22.6853 89.1715 22.3664 88.9378 cv
20.1832 87.338 18.6349 85.3105 17.1662 83.0629 cv
17.1104 82.9776 16.991 83.0512 17.0317 83.1415 cv
cp
f
16.0796 63.181 mo
16.3332 57.9856 16.5436 52.7821 16.777 47.5858 cv
16.7999 47.0738 15.9927 47.0718 15.9793 47.5858 cv
15.8453 52.7617 15.8077 58.0046 15.9333 63.181 cv
15.9356 63.2755 16.075 63.2749 16.0796 63.181 cv
cp
f
15.0579 63.3076 mo
16.3243 63.7118 17.4885 64.247 18.5633 65.0337 cv
18.6635 64.904 li
17.6338 64.0392 16.4222 63.4097 15.0955 63.171 cv
15.0579 63.3076 li
cp
f
23.9429 67.6516 mo
24.8123 68.2127 25.637 68.8402 26.4998 69.4111 cv
26.7822 69.5979 27.0653 69.1118 26.7643 68.9587 cv
25.8418 68.4899 24.8887 68.0821 23.9715 67.6027 cv
23.9429 67.6516 li
cp
f
15.2519 70.5643 mo
15.922 70.794 16.5737 71.0643 17.2323 71.3251 cv
17.3739 71.3813 17.449 71.133 17.2962 71.093 cv
16.614 70.9144 15.9324 70.7476 15.2594 70.537 cv
15.2519 70.5643 li
cp
f
153.117 54.9513 mo
166.083 56.646 li
168.729 53.8165 li
171.364 56.7338 li
175.63 59.3825 li
183.748 78.1529 li
178.884 83.5021 li
189.401 86.3181 li
191.523 93.3892 li
185.428 92.7174 li
176.136 98.7957 li
164.453 96.1715 li
151.476 100.224 li
142.933 100.673 li
133.658 98.1313 li
125.748 92.2527 li
135.728 91.806 li
154.235 79.1832 li
158.85 62.1458 li
153.117 54.9513 li
cp
.337255 .305882 .266667 rgb
f
122.802 46.7054 mo
119.857 60.8779 li
128.728 66.0651 li
126.434 87.756 li
125.834 69.8657 li
112.087 60.0065 li
107.05 56.7298 li
109.055 53.4666 li
107.92 50.134 li
118.493 44.2865 li
122.802 46.7054 li
cp
f
128.407 100.923 mo
132.156 97.5681 li
124.839 92.3204 li
100.076 87.9906 li
100.076 87.9906 97.3189 70.0644 97.2226 70.6669 cv
97.1262 71.2693 81.2114 67.2421 81.2114 67.2421 cv
72.4498 71.0314 li
76.4094 73.7034 li
82.0103 97.0272 li
87.437 95.547 li
87.5915 97.6724 li
97.7729 97.7554 li
111.764 96.038 li
128.407 100.923 li
cp
f
81.6597 48.5925 mo
81.2114 67.2421 li
97.2226 70.6669 li
100.076 87.9906 li
124.839 92.3204 li
124.839 92.3204 126.976 86.298 126.692 85.7583 cv
126.407 85.2185 125.834 69.8657 125.834 69.8657 cv
107.05 56.7298 li
109.055 53.4666 li
105.293 47.2425 li
81.6597 48.5925 li
cp
.513726 .470588 .411765 rgb
f
117.738 40.8912 mo
118.018 43.7781 li
122.802 46.7054 li
119.857 60.8779 li
128.853 66.8265 li
126.118 87.0259 li
125.748 92.2527 li
135.728 91.806 li
154.235 79.1832 li
154.235 79.1832 158.609 62.6402 158.85 62.1458 cv
159.091 61.6514 151.904 54.8181 151.81 54.2469 cv
151.716 53.6758 135.114 44.2869 135.114 44.2869 cv
131.226 37.3013 li
134.722 33.597 li
117.738 40.8912 li
cp
.576471 .529412 .466667 rgb
f
166.083 56.646 mo
168.729 53.8165 li
154.009 48.6053 li
148.464 45.8034 li
148.464 45.8034 142.543 40.717 139.282 37.5388 cv
136.021 34.3607 134.722 33.597 134.722 33.597 cv
131.226 37.3013 li
135.114 44.2869 li
151.81 54.2469 li
158.85 62.1458 li
154.061 54.854 li
166.083 56.646 li
cp
.733333 .67451 .592157 rgb
f
134.722 33.597 mo
117.738 40.8912 li
118.493 44.2865 li
107.92 50.134 li
105.293 47.2425 li
81.6597 48.5925 li
72.7976 38.711 li
93.2614 35.9276 li
118.453 32.1699 li
120.986 34.4903 li
133.931 32.3585 li
134.722 33.597 li
cp
f
72.7976 38.711 mo
73.8118 55.5554 li
72.4498 71.0314 li
81.2114 67.2421 li
81.6597 48.5925 li
72.7976 38.711 li
cp
f
122.802 46.7054 mo
122.524 59.2654 li
129.966 65.2745 li
135.138 64.6184 li
129.964 66.4481 li
127.511 88.3608 li
134.548 90.7215 li
154.235 79.1832 li
135.728 91.806 li
125.748 92.2527 li
128.345 67.3013 li
128.345 67.3013 119.729 61.29 119.857 60.8779 cv
119.984 60.4657 122.802 46.7054 122.802 46.7054 cv
cp
f
164.462 56.2696 mo
167.695 73.5307 li
166.84 56.4645 li
164.462 56.2696 li
cp
f
189.401 86.3181 mo
191.523 93.3892 li
191.523 93.3892 195.189 93.2492 194.714 92.7408 cv
194.239 92.2324 193.942 82.1136 193.942 82.1136 cv
187.413 79.2781 li
183.61 77.5579 li
178.884 83.5021 li
189.401 86.3181 li
cp
f
72.4498 71.0314 mo
76.4094 73.7034 li
84.0288 70.1022 li
93.0008 72.3398 li
96.8056 89.5068 li
87.5915 97.6724 li
97.7729 97.7554 li
111.764 96.038 li
98.0732 90.0802 li
98.0732 90.0802 97.2358 80.2459 96.9514 79.7061 cv
96.6669 79.1663 97.2226 70.6669 97.2226 70.6669 cv
81.2114 67.2421 li
72.4498 71.0314 li
cp
.278431 .247059 .203922 rgb
f
125.748 92.2527 mo
113.128 96.0088 li
127.742 100.446 li
132.156 97.5681 li
125.748 92.2527 li
cp
f
119.857 60.8779 mo
125.834 69.8657 li
126.662 84.3944 li
128.345 67.3013 li
119.857 60.8779 li
cp
f
135.728 91.806 mo
145.345 100.48 li
145.345 100.48 153.878 100.052 154.387 99.5776 cv
154.895 99.1028 164.453 96.1715 164.453 96.1715 cv
176.136 98.7957 li
185.428 92.7174 li
178.884 83.5021 li
164.707 93.3807 li
144.383 89.8841 li
144.383 89.8841 154.426 78.6769 154.235 79.1832 cv
154.045 79.6894 135.728 91.806 135.728 91.806 cv
cp
f
73.5566 39.7056 mo
73.5566 39.7056 74.1206 40.2083 74.9157 41.0062 cv
75.7095 41.8052 76.7485 42.8857 77.7515 43.9964 cv
78.76 45.102 79.737 46.2351 80.473 47.0849 cv
81.2062 47.9367 81.6827 48.5229 81.6827 48.5229 cv
81.6827 48.5229 81.075 48.073 80.2366 47.3162 cv
79.3968 46.5612 78.3238 45.5054 77.3166 44.3911 cv
76.3051 43.2808 75.3582 42.1145 74.6682 41.2236 cv
73.9793 40.3316 73.5566 39.7056 73.5566 39.7056 cv
cp
.886275 .862745 .827451 rgb
f
81.1771 48.3634 mo
87.384 48.1874 li
89.4495 48.1331 91.5128 48.035 93.5724 47.9058 cv
95.6332 47.8044 97.6902 47.6491 99.7464 47.4975 cv
101.802 47.3289 103.855 47.1438 105.906 46.9307 cv
106.237 46.8963 li
106.426 47.1548 li
107.157 48.1583 107.809 49.1823 108.393 50.2735 cv
108.684 50.8172 108.959 51.3726 109.19 51.9585 cv
109.313 52.2466 109.411 52.5508 109.497 52.8605 cv
109.534 53.0191 109.581 53.1711 109.609 53.3347 cv
109.635 53.5076 109.664 53.6451 109.683 53.8464 cv
109.706 54.078 li
109.525 54.2269 li
109.142 54.5434 108.779 54.9785 108.445 55.4203 cv
108.11 55.8646 107.792 56.3383 107.5 56.8112 cv
107.398 56.3533 li
108.383 57.0961 109.359 57.8515 110.322 58.6257 cv
111.29 59.3932 112.261 60.1556 113.211 60.947 cv
112.155 60.3025 111.121 59.6291 110.082 58.9607 cv
109.039 58.2989 108.009 57.6185 106.989 56.9254 cv
106.734 56.7522 li
106.887 56.4672 li
107.166 55.9455 107.46 55.4476 107.786 54.9546 cv
108.116 54.464 108.457 53.9817 108.932 53.5352 cv
108.775 53.9152 li
108.693 53.5373 li
108.663 53.4057 108.611 53.2718 108.572 53.1394 cv
108.478 52.8752 108.381 52.6081 108.261 52.3449 cv
108.034 51.8164 107.758 51.2983 107.464 50.7894 cv
106.877 49.775 106.203 48.7815 105.514 47.8407 cv
106.033 48.0647 li
101.909 48.563 97.758 48.827 93.6071 48.9016 cv
91.5308 48.9167 89.455 48.8842 87.3821 48.8165 cv
85.3099 48.7244 83.2377 48.5912 81.1771 48.3634 cv
cp
.337255 .305882 .266667 rgb
f
117.89 44.6685 mo
117.455 41.2489 li
119.013 44.3237 li
117.89 44.6685 li
cp
.733333 .67451 .592157 rgb
f
117.626 40.7686 mo
117.626 40.7686 121.991 38.7783 126.357 36.7878 cv
128.539 35.7926 130.722 34.7974 132.359 34.051 cv
133.178 33.6778 133.86 33.3669 134.338 33.1491 cv
134.576 33.0402 134.764 32.9548 134.892 32.8965 cv
134.941 32.8785 li
134.999 32.867 li
135.1 32.8586 135.149 32.8832 135.198 32.9072 cv
135.29 32.9617 135.323 33.0221 135.347 33.0676 cv
135.39 33.1624 135.398 33.2449 135.37 33.3461 cv
135.343 33.4506 135.242 33.5385 135.177 33.5606 cv
135.087 33.5846 li
135.015 33.0015 li
135.04 32.9969 134.875 33.0004 134.811 33.1723 cv
134.82 33.3197 li
134.914 33.4159 li
135.067 33.4447 li
135.1 33.4377 li
135.131 33.4261 li
135.125 33.4287 li
134.995 33.4831 134.805 33.5628 134.563 33.6642 cv
134.079 33.8673 133.388 34.1572 132.558 34.5052 cv
130.899 35.2011 128.687 36.129 126.474 37.057 cv
122.05 38.9127 117.626 40.7686 117.626 40.7686 cv
cp
f
85.368 67.6535 mo
85.368 67.6535 85.4374 69.5103 85.5415 72.2954 cv
85.663 75.0786 85.8835 78.7887 86.1841 82.4965 cv
86.7647 89.914 87.7751 97.3034 87.7751 97.3034 cv
87.7751 97.3034 86.1857 90.0183 85.0174 82.6378 cv
84.4234 78.9505 83.9082 75.2473 83.5655 72.4632 cv
83.2404 69.6784 83.0238 67.8217 83.0238 67.8217 cv
85.368 67.6535 li
cp
.278431 .247059 .203922 rgb
f
81.8955 97.6925 mo
81.6388 97.1648 li
83.4343 96.2876 85.3345 95.6222 87.2851 95.1847 cv
87.4145 95.7589 li
85.5074 96.1846 83.6514 96.8357 81.8955 97.6925 cv
cp
f
72.0475 71.4138 mo
72.0475 71.4138 72.6057 71.1355 73.4431 70.7178 cv
74.2734 70.2856 75.3806 69.7093 76.4877 69.133 cv
77.5964 68.5548 78.7307 68.0014 79.613 67.6367 cv
80.4929 67.2678 81.1023 67.0648 81.1023 67.0648 cv
81.4212 68.1959 li
81.4212 68.1959 80.8265 68.3184 79.9433 68.5715 cv
79.0593 68.8201 77.8917 69.2273 76.7271 69.6696 cv
75.5597 70.1119 74.3923 70.5543 73.5166 70.8861 cv
72.6351 71.2028 72.0475 71.4138 72.0475 71.4138 cv
cp
.733333 .67451 .592157 rgb
f
76.0657 74.0526 mo
76.0657 74.0526 77.8788 72.6482 79.8232 71.4091 cv
81.7553 70.1531 83.8068 69.0723 83.8068 69.0723 cv
84.2921 70.1426 li
84.2921 70.1426 82.1656 70.9342 80.109 71.9224 cv
78.0448 72.8916 76.0657 74.0526 76.0657 74.0526 cv
cp
.278431 .247059 .203922 rgb
f
82.0023 97.3092 mo
81.1043 93.4585 80.0672 89.6416 79.1722 85.7885 cv
78.2491 81.9422 77.3814 78.0805 76.6791 74.1809 cv
76.8661 74.3916 li
76.6792 74.3356 li
76.6264 74.3197 li
76.5778 74.2786 li
75.2824 73.1833 73.7933 72.2533 72.3268 71.351 cv
72.1715 71.2554 li
72.1885 71.0755 li
72.441 68.4016 72.6927 65.7274 72.8743 63.048 cv
73.0652 60.3691 73.1902 57.6863 73.2888 55.0028 cv
73.3878 52.319 73.4287 49.6328 73.3999 46.9465 cv
73.3897 44.26 73.3159 41.5722 73.1554 38.8877 cv
73.4147 41.5644 73.5944 44.2504 73.6982 46.9402 cv
73.7836 49.6305 73.7994 52.3232 73.7568 55.0151 cv
73.6466 60.3986 73.2944 65.7759 72.7619 71.1325 cv
72.6238 70.8573 li
74.1097 71.7876 75.5807 72.7141 76.9372 73.8755 cv
76.8361 73.8187 li
77.0225 73.8761 li
77.181 73.9247 li
77.2097 74.0871 li
77.8971 77.9728 78.7172 81.8391 79.54 85.7049 cv
80.3812 89.5665 81.2415 93.4278 82.0023 97.3092 cv
cp
.513726 .470588 .411765 rgb
f
87.6449 97.8095 mo
87.6449 97.8095 88.0179 97.6673 88.7093 97.5386 cv
89.3978 97.4139 90.4029 97.312 91.603 97.3386 cv
92.8043 97.3534 94.1935 97.457 95.6723 97.4331 cv
97.1446 97.4152 98.7186 97.2484 100.286 97.0181 cv
101.857 96.8137 103.427 96.5546 104.906 96.3369 cv
106.385 96.1142 107.781 95.987 108.977 95.9143 cv
110.175 95.8308 111.178 95.891 111.874 95.9205 cv
112.569 95.9923 112.965 96.0334 112.965 96.0334 cv
112.965 96.0334 112.567 96.0339 111.871 96.0348 cv
111.176 96.0529 110.186 96.1092 109.005 96.2439 cv
107.822 96.3637 106.454 96.5995 104.985 96.8405 cv
103.515 97.0815 101.948 97.3693 100.366 97.5995 cv
98.7815 97.8052 97.1805 97.949 95.6674 97.9419 cv
94.1599 97.9427 92.7744 97.73 91.5897 97.6678 cv
90.4048 97.5887 89.4146 97.5747 88.7249 97.6512 cv
88.0362 97.7165 87.6449 97.8095 87.6449 97.8095 cv
cp
.278431 .247059 .203922 rgb
f
132.609 98.3862 mo
128.537 101.143 li
128.334 101.281 li
128.118 101.226 li
117.197 98.4518 106.609 94.4446 96.6207 89.3132 cv
106.761 94.1382 117.43 97.8047 128.356 100.228 cv
127.937 100.311 li
131.922 97.4328 li
132.609 98.3862 li
cp
f
183.644 77.772 mo
185.479 78.1893 187.239 78.893 188.98 79.6003 cv
190.727 80.3065 192.417 81.1267 194.112 81.9585 cv
194.304 82.0531 li
194.317 82.2887 li
194.41 83.9807 194.564 85.6678 194.741 87.3505 cv
194.907 89.0344 195.12 90.7133 195.38 92.3844 cv
195.444 92.7953 li
195.049 92.9625 li
192.132 94.1968 li
191.634 93.189 li
191.891 93.044 li
192.114 94.1006 li
189.905 93.9292 187.701 93.7166 185.498 93.4924 cv
183.93 93.333 li
185.237 92.471 li
185.742 92.1378 li
186.384 93.042 li
184.733 94.2382 183.021 95.2751 181.296 96.2966 cv
179.577 97.3267 177.805 98.2534 176.033 99.1873 cv
175.911 99.2516 li
175.791 99.2323 li
173.886 98.9245 171.998 98.5052 170.178 97.8784 cv
168.358 97.2601 166.581 96.5214 164.901 95.6051 cv
166.672 96.3239 168.474 96.9507 170.315 97.4153 cv
172.157 97.8713 174.014 98.2523 175.895 98.4492 cv
175.654 98.494 li
177.376 97.5004 179.069 96.4463 180.773 95.4244 cv
182.466 94.3874 184.155 93.3255 185.719 92.1548 cv
186.36 93.059 li
185.86 93.3999 li
185.599 92.3786 li
187.807 92.5561 190.013 92.745 192.216 92.9753 cv
194.03 93.1649 li
192.439 94.032 li
192.18 94.173 li
191.682 93.1652 li
194.646 91.9641 li
194.315 92.5419 li
194.077 90.8468 193.888 89.1454 193.747 87.4404 cv
193.617 85.734 193.562 84.0234 193.541 82.3146 cv
193.746 82.6444 li
192.119 81.7326 190.448 80.8835 188.783 80.03 cv
187.11 79.1905 185.417 78.3927 183.644 77.772 cv
cp
.337255 .305882 .266667 rgb
f
153.547 48.7904 mo
151.642 47.8474 149.788 46.7857 148.008 45.6104 cv
146.233 44.4289 144.494 43.1796 142.872 41.7848 cv
141.244 40.3998 139.686 38.9272 138.224 37.3613 cv
136.755 35.8069 135.44 34.1116 133.686 33.134 cv
133.997 33.1958 li
121.077 35.0626 li
120.775 35.1063 li
120.561 34.8707 li
118.321 32.3935 li
118.764 32.556 li
118.427 32.5812 li
118.468 32.5768 li
114.699 33.1506 110.921 33.663 107.148 34.2091 cv
103.372 34.738 99.6018 35.306 95.8211 35.8029 cv
84.4807 37.3062 li
80.694 37.7653 76.9131 38.2619 73.1202 38.6824 cv
76.8717 37.9899 80.6351 37.3735 84.3929 36.7196 cv
95.6854 34.8836 li
99.4491 34.2675 103.223 33.7224 106.992 33.1383 cv
110.763 32.5713 114.529 31.9706 118.304 31.4314 cv
118.326 31.4282 li
118.346 31.4268 li
118.683 31.4049 li
118.966 31.3865 li
119.126 31.5676 li
121.418 34.1469 li
120.902 33.9551 li
133.87 32.2091 li
134.039 32.1864 li
134.181 32.271 li
136.151 33.4446 137.428 35.2631 138.827 36.8121 cv
140.222 38.3967 141.717 39.8948 143.287 41.3108 cv
144.858 42.7256 146.494 44.0728 148.208 45.3214 cv
149.924 46.5674 151.711 47.7153 153.547 48.7904 cv
cp
.576471 .529412 .466667 rgb
f
168.765 53.7002 mo
166.244 53.0092 163.745 52.2522 161.267 51.4326 cv
160.03 51.0181 158.783 50.6334 157.554 50.1944 cv
153.855 48.9166 li
154.158 48.7788 li
153.326 50.6235 152.498 52.47 151.593 54.2843 cv
152.247 52.3653 152.979 50.4785 153.706 48.5899 cv
153.787 48.3801 li
154.01 48.4519 li
157.737 49.6539 li
158.979 50.0541 160.203 50.5085 161.437 50.9331 cv
163.901 51.7918 166.345 52.7129 168.765 53.7002 cv
cp
.733333 .67451 .592157 rgb
f
168.974 54.0717 mo
169.438 54.5719 169.918 55.0476 170.422 55.4976 cv
170.925 55.948 171.464 56.3531 172.006 56.7471 cv
173.093 57.5311 174.27 58.1804 175.504 58.6735 cv
175.629 58.7236 li
175.697 58.8708 li
177.124 61.9611 178.484 65.0778 179.8 68.2151 cv
180.461 69.7823 181.085 71.3665 181.708 72.952 cv
182.343 74.5323 182.93 76.1352 183.499 77.748 cv
182.711 76.2384 181.941 74.7188 181.218 73.1766 cv
180.484 71.6397 179.75 70.1015 179.053 68.5464 cv
177.655 65.4388 176.3 62.3107 175.012 59.1562 cv
175.205 59.3532 li
173.952 58.7513 172.78 57.9965 171.719 57.1169 cv
170.671 56.2227 169.732 55.2048 168.974 54.0717 cv
cp
f
168.714 53.6658 mo
168.336 54.2294 168.02 54.8185 167.729 55.4242 cv
167.428 56.0217 167.15 56.6368 166.9 57.2523 cv
166.921 57.1386 li
167.082 58.8883 167.192 60.641 167.27 62.3957 cv
167.339 64.151 167.37 65.9084 167.315 67.6711 cv
167.048 65.9278 166.867 64.1795 166.724 62.4287 cv
166.59 60.6775 166.487 58.9243 166.437 57.168 cv
166.434 57.0976 li
166.457 57.0539 li
167.088 55.8481 167.754 54.6398 168.714 53.6658 cv
cp
f
120.278 60.7453 mo
120.247 58.3065 120.476 55.864 120.894 53.4525 cv
121.283 51.034 121.92 48.6564 122.711 46.3356 cv
123.009 47.0485 li
122.83 46.9651 li
122.787 46.9448 li
122.74 46.9111 li
121.468 46.0112 120.012 45.3569 118.475 45.0597 cv
118.567 45.0689 li
118.243 45.0567 li
118.499 44.9982 li
116.789 45.832 115.09 46.7166 113.4 47.6247 cv
112.558 48.084 111.721 48.5551 110.867 49.0002 cv
110.018 49.4529 109.177 49.9217 108.316 50.3605 cv
109.073 49.76 109.856 49.1977 110.637 48.6323 cv
111.415 48.0594 112.217 47.5253 113.025 46.9981 cv
114.637 45.9362 116.281 44.9152 118.005 44.0156 cv
118.116 43.9576 li
118.261 43.9568 li
118.585 43.9554 li
118.624 43.9551 li
118.677 43.9646 li
120.379 44.2666 122.024 44.9405 123.42 45.9711 cv
123.329 45.9174 li
123.507 46.0034 li
123.977 46.2316 li
123.804 46.7167 li
122.997 48.9813 122.332 51.2924 121.726 53.6268 cv
121.425 54.7953 121.183 55.9778 120.941 57.1635 cv
120.683 58.3486 120.494 59.5433 120.278 60.7453 cv
cp
f
164.256 96.3462 mo
162.625 96.9765 160.98 97.5638 159.325 98.1332 cv
157.672 98.711 155.992 99.2137 154.294 99.6588 cv
152.595 100.103 150.874 100.484 149.13 100.764 cv
148.253 100.89 147.386 100.988 146.488 101.059 cv
145.629 101.129 144.692 101.134 143.816 101.097 cv
142.033 101.027 140.27 100.767 138.535 100.4 cv
137.668 100.216 136.809 99.9935 135.963 99.7335 cv
135.113 99.4722 134.283 99.211 133.442 98.873 cv
131.723 98.1739 130.257 97.0851 128.92 95.9303 cv
127.575 94.7801 126.343 93.5587 125.006 92.4887 cv
124.775 92.3042 li
124.844 92.0392 li
125.385 89.9344 125.874 87.8064 126.328 85.6762 cv
126.802 83.5477 127.212 81.4074 127.458 79.2351 cv
127.465 81.4262 127.164 83.6065 126.87 85.7746 cv
126.543 87.9417 126.134 90.0893 125.693 92.2401 cv
125.531 91.7909 li
126.986 92.8237 128.272 94.0326 129.589 95.1416 cv
130.903 96.2454 132.306 97.2352 133.842 97.8316 cv
135.436 98.4302 137.123 98.8654 138.786 99.2737 cv
140.461 99.6558 142.161 99.9327 143.868 100.026 cv
144.735 100.073 145.548 100.086 146.43 100.029 cv
147.274 99.9752 148.144 99.8906 148.997 99.7812 cv
150.713 99.5872 152.422 99.2932 154.121 98.9324 cv
155.821 98.5745 157.504 98.1313 159.196 97.7046 cv
164.256 96.3462 li
cp
.278431 .247059 .203922 rgb
f
96.5916 89.6336 mo
96.528 88.0637 96.4996 86.4946 96.4653 84.9253 cv
96.4231 83.3559 96.4024 81.787 96.3988 80.2186 cv
96.3811 77.0815 96.3364 73.9436 96.3861 70.8083 cv
96.5523 71.2036 li
96.3054 70.9777 li
96.5702 71.1096 li
88.7471 69.6228 li
80.9467 68.0166 li
80.5077 67.9262 li
80.526 67.485 li
80.5932 65.8713 80.6326 64.2566 80.7224 62.6436 cv
80.9811 57.8041 li
81.0634 56.1909 81.1518 54.5778 81.2717 52.9656 cv
81.383 51.3532 81.4858 49.7405 81.627 48.1289 cv
81.6725 49.7461 81.6796 51.362 81.6951 52.9781 cv
81.7192 54.5946 81.712 56.2101 81.6984 57.8255 cv
81.6699 62.6717 li
81.6638 64.2873 81.6076 65.9013 81.5788 67.5162 cv
81.1584 66.9849 li
88.9671 68.4717 li
96.753 70.0779 li
96.9133 70.111 li
97.0183 70.21 li
97.2618 70.4397 li
97.4324 70.6006 li
97.4281 70.8354 li
97.3727 73.9706 97.2227 77.1034 97.1 80.2368 cv
97.0437 81.8037 96.9705 83.3701 96.8755 84.936 cv
96.7888 86.5021 96.7077 88.0683 96.5916 89.6336 cv
cp
f
112.814 37.9413 mo
121.502 34.133 li
121.721 34.6782 li
112.814 37.9413 li
cp
.576471 .529412 .466667 rgb
f
186.263 92.85 mo
184.848 91.5319 183.536 90.1084 182.278 88.6386 cv
181.048 87.1469 179.842 85.6304 178.759 84.0264 cv
178.647 83.861 li
178.765 83.7035 li
180.304 81.6419 182.084 79.7371 184.057 78.0883 cv
182.325 79.9949 180.708 81.965 179.198 84.0343 cv
179.204 83.7118 li
180.346 85.2582 181.469 86.8184 182.668 88.3225 cv
183.839 89.8486 185.056 91.3402 186.263 92.85 cv
cp
.733333 .67451 .592157 rgb
f
192.036 93.9478 mo
191.201 92.9047 190.562 91.7068 190.074 90.4514 cv
189.603 89.1891 189.299 87.8578 189.199 86.5098 cv
189.189 86.362 li
189.298 86.2677 li
190.862 84.9206 192.453 83.6049 193.991 82.2111 cv
193.378 83.0543 192.666 83.82 191.937 84.5589 cv
191.212 85.3061 190.456 86.0156 189.673 86.7025 cv
189.772 86.4609 li
189.898 87.7582 190.149 89.0433 190.537 90.2931 cv
190.72 90.9215 190.942 91.5406 191.201 92.1456 cv
191.447 92.7582 191.734 93.3508 192.036 93.9478 cv
cp
.576471 .529412 .466667 rgb
f
129.594 48.8315 mo
131.081 47.1033 133.386 45.7568 135.42 44.7663 cv
136.031 44.469 135.656 43.4702 135.04 43.7727 cv
133.894 44.3363 132.826 44.9918 131.879 45.8576 cv
130.946 46.7114 130.278 47.769 129.524 48.7736 cv
129.594 48.8315 li
cp
.733333 .67451 .592157 rgb
f
150.92 56.9633 mo
150.888 55.7478 151.197 54.8064 151.76 53.7459 cv
151.96 53.369 151.314 53.0731 151.161 53.4692 cv
150.741 54.5536 150.629 55.8271 150.722 56.9824 cv
150.733 57.1112 150.924 57.0901 150.92 56.9633 cv
cp
f
134.31 63.4571 mo
134.683 64.8681 135.273 66.1453 136.018 67.3961 cv
136.146 67.6105 136.456 67.383 136.332 67.1698 cv
135.629 65.9597 135.034 64.6767 134.48 63.3921 cv
134.433 63.2826 134.281 63.3455 134.31 63.4571 cv
cp
f
134.687 85.7624 mo
134.493 87.5429 134.03 89.4273 134.08 91.2149 cv
134.09 91.5481 134.609 91.559 134.66 91.2371 cv
134.943 89.4765 134.726 87.5496 134.766 85.7654 cv
134.687 85.7624 li
cp
f
149.698 74.4065 mo
150.903 76.0851 152.011 77.7615 153.057 79.5426 cv
153.32 79.9909 154.042 79.4927 153.721 79.0632 cv
152.505 77.4366 151.192 75.8189 149.827 74.3133 cv
149.698 74.4065 li
cp
f
103.594 62.0833 mo
103.666 61.8965 103.738 61.7097 103.81 61.523 cv
103.758 61.4992 li
103.686 61.6859 103.614 61.8726 103.542 62.0594 cv
103.594 62.0833 li
cp
f
100.189 66.6366 mo
98.9203 67.6694 97.8493 68.7654 96.9127 70.1157 cv
96.7552 70.3427 97.086 70.619 97.2462 70.3905 cv
98.1441 69.1108 99.1825 67.8502 100.32 66.7764 cv
100.189 66.6366 li
cp
f
97.0199 70.2443 mo
98.0167 76.0041 99.2554 81.7171 100.218 87.4855 cv
100.284 87.8815 100.912 87.8209 100.841 87.4254 cv
99.8004 81.6645 98.7842 75.8442 97.2997 70.1786 cv
97.2586 70.0215 96.9921 70.0835 97.0199 70.2443 cv
cp
f
117.606 90.5361 mo
111.824 89.3961 105.99 88.3723 100.162 87.4909 cv
99.6448 87.4126 99.5046 88.2117 100.022 88.2921 cv
105.851 89.1977 111.729 89.9692 117.592 90.6146 cv
117.606 90.5361 li
cp
f
84.352 65.1277 mo
83.0165 66.0954 81.4514 66.7194 79.9711 67.4388 cv
79.4203 67.7065 79.7659 68.6088 80.3124 68.3314 cv
81.8956 67.528 83.103 66.399 84.4385 65.2476 cv
84.352 65.1277 li
cp
f
106.485 55.8573 mo
106.966 57.6215 107.378 59.399 107.885 61.1574 cv
107.923 61.2881 108.116 61.2115 108.082 61.0822 cv
107.608 59.3195 107.042 57.5896 106.543 55.835 cv
106.485 55.8573 li
cp
f
99.0886 71.6645 mo
99.434 71.0307 99.7829 70.3986 100.105 69.7526 cv
100.183 69.5949 99.9353 69.481 99.8571 69.638 cv
99.5356 70.2831 99.2416 70.9414 98.9441 71.5977 cv
98.9013 71.6921 99.04 71.7537 99.0886 71.6645 cv
cp
f
102.931 65.9463 mo
103.001 65.7585 103.07 65.5707 103.14 65.3829 cv
103.068 65.3495 li
102.993 65.535 102.918 65.7203 102.843 65.9058 cv
102.931 65.9463 li
cp
f
105.061 62.7567 mo
105.128 62.4816 105.195 62.2066 105.262 61.9315 cv
105.295 61.7964 105.08 61.7589 105.049 61.8943 cv
104.986 62.1701 104.923 62.4457 104.86 62.7215 cv
104.83 62.8505 105.03 62.8839 105.061 62.7567 cv
cp
f
106.416 59.958 mo
106.795 59.1208 107.143 58.2604 107.578 57.451 cv
107.677 57.2675 107.355 57.125 107.289 57.3174 cv
106.993 58.1884 106.601 59.0309 106.246 59.8793 cv
106.199 59.9906 106.366 60.0685 106.416 59.958 cv
cp
f
99.4715 65.085 mo
102.739 61.42 105.849 57.7625 108.674 53.7369 cv
108.981 53.2996 108.335 52.8835 108.049 53.3438 cv
105.508 57.4223 102.664 61.487 99.4627 65.0778 cv
99.4715 65.085 li
cp
f
105.572 48.1644 mo
106.288 49.918 107.05 51.6521 107.782 53.399 cv
107.955 53.8137 108.624 53.5492 108.43 53.1511 cv
107.597 51.4436 106.793 49.7218 105.944 48.0222 cv
105.832 47.7979 105.474 47.9224 105.572 48.1644 cv
cp
f
81.2353 48.6585 mo
89.2879 47.9587 97.3851 48.284 105.45 48.6165 cv
105.909 48.6354 105.94 47.9833 105.475 47.9857 cv
97.4275 48.0284 89.2068 47.3294 81.2227 48.5284 cv
81.2353 48.6585 li
cp
f
121.836 44.0232 mo
122.096 43.9143 122.357 43.8057 122.619 43.7008 cv
122.821 43.62 122.684 43.2943 122.501 43.3925 cv
122.251 43.5274 121.999 43.6584 121.747 43.7894 cv
121.608 43.8616 121.684 44.0868 121.836 44.0232 cv
cp
f
124.693 42.3347 mo
124.777 42.24 124.861 42.1453 124.946 42.0507 cv
125.082 41.8972 124.824 41.6848 124.7 41.8481 cv
124.623 41.9488 124.546 42.0495 124.469 42.1502 cv
124.356 42.2988 124.569 42.4744 124.693 42.3347 cv
cp
f
126.891 40.7221 mo
129.005 39.1808 131.233 37.8303 133.356 36.3071 cv
133.815 35.9782 133.29 35.2512 132.844 35.5968 cv
130.775 37.1981 128.841 38.9495 126.758 40.5376 cv
126.642 40.6262 126.772 40.8088 126.891 40.7221 cv
cp
f
107.955 84.1738 mo
109.933 82.3443 111.893 80.4993 113.837 78.6334 cv
113.979 78.4965 113.741 78.3026 113.6 78.438 cv
111.665 80.2953 109.75 82.1698 107.85 84.0627 cv
107.955 84.1738 li
cp
f
110.025 83.8727 mo
111.188 82.5341 112.345 81.1946 113.446 79.8039 cv
113.557 79.663 113.348 79.4903 113.231 79.6266 cv
112.075 80.9722 110.981 82.3638 109.889 83.7606 cv
110.025 83.8727 li
cp
f
116.179 77.3584 mo
116.358 76.8673 116.652 76.5345 117.13 76.3165 cv
117.314 76.2326 117.196 75.9337 117.019 76.0243 cv
116.488 76.2946 116.138 76.6833 115.957 77.2559 cv
115.91 77.4023 116.124 77.5086 116.179 77.3584 cv
cp
f
120.348 73.45 mo
120.602 73.0823 120.855 72.7149 121.1 72.3416 cv
121.217 72.162 120.956 71.9472 120.841 72.1282 cv
120.593 72.5163 120.353 72.9093 120.114 73.3029 cv
120.033 73.4371 120.259 73.58 120.348 73.45 cv
cp
f
118.225 78.6203 mo
120.928 76.1193 123.761 73.3938 125.913 70.3992 cv
126.165 70.0486 125.665 69.6245 125.391 69.9688 cv
123.034 72.9354 120.842 75.8436 118.124 78.5133 cv
118.225 78.6203 li
cp
f
138.455 82.4673 mo
139.312 81.7926 140.161 81.1115 141.001 80.4154 cv
141.159 80.2843 140.967 80.0222 140.815 80.1571 cv
139.994 80.8843 139.187 81.6231 138.385 82.3705 cv
138.455 82.4673 li
cp
f
143.022 78.5926 mo
143.189 78.4017 143.352 78.209 143.511 78.012 cv
143.632 77.8641 143.406 77.6778 143.283 77.824 cv
143.12 78.0185 142.962 78.215 142.807 78.4154 cv
142.697 78.5573 142.904 78.7279 143.022 78.5926 cv
cp
f
145.186 76.7072 mo
146.997 75.2034 148.816 73.6994 150.597 72.1606 cv
150.905 71.8942 150.522 71.3756 150.227 71.6487 cv
148.483 73.2649 146.771 74.9215 145.059 76.5714 cv
145.186 76.7072 li
cp
f
149.013 57.7157 mo
149.73 57.18 150.516 56.8243 151.382 56.6085 cv
151.649 56.542 151.498 56.1064 151.226 56.1994 cv
150.345 56.4999 149.59 56.9724 148.912 57.6087 cv
149.013 57.7157 li
cp
f
72.9078 39.6691 mo
74.8365 43.2071 78.3885 46.6135 81.5257 49.1239 cv
82.0824 49.5694 82.7173 48.7659 82.22 48.2813 cv
80.5695 46.6727 78.8639 45.1432 77.3305 43.4158 cv
76.0478 41.9708 74.9417 40.4099 73.5661 39.0517 cv
73.165 38.6558 72.6836 39.2579 72.9078 39.6691 cv
cp
.513726 .470588 .411765 rgb
f
78.4674 46.2009 mo
77.0982 49.1812 li
73.7076 52.8504 li
74.3768 72.2169 li
73.7395 77.9128 li
76.1754 87.3313 li
76.5498 89.7839 76.9243 92.2364 77.2987 94.6889 cv
77.4526 95.6967 77.3488 98.046 78.5018 98.1129 cv
79.3883 98.1643 80.9953 96.3857 81.6465 95.8835 cv
82.8303 94.9702 84.0141 94.0569 85.198 93.1436 cv
85.7669 92.7048 86.3444 92.2571 86.7631 91.6731 cv
87.7951 90.2338 87.7658 87.5463 88.0249 85.8316 cv
88.1812 84.797 88.0888 82.9261 88.6037 82.0006 cv
94.8 70.8653 li
99.7999 65.4877 li
99.7999 65.4877 98.6606 56.6587 97.0679 52.1738 cv
95.4753 47.689 94.9649 46.3804 94.9649 46.3804 cv
87.598 46.8925 li
78.4674 46.2009 li
cp
.337255 .305882 .266667 rgb
f
92.2145 83.8794 mo
92.0004 89.8974 li
92.0004 89.8974 90.8532 98.328 91.0204 97.988 cv
91.1877 97.6479 102.082 89.576 102.082 89.576 cv
102.082 89.576 104.271 82.3755 105.074 78.2518 cv
105.877 74.1281 105.99 70.6361 105.99 70.6361 cv
105.99 70.6361 101.101 74.5667 98.457 77.1095 cv
95.8132 79.6524 92.2145 83.8794 92.2145 83.8794 cv
cp
f
81.6465 95.8835 mo
81.6503 95.7455 91.0204 97.988 91.0204 97.988 cv
92.0004 89.8974 li
92.1604 83.3883 li
88.544 82.4124 li
87.2135 91.302 li
81.6465 95.8835 li
cp
.4 .364706 .313726 rgb
f
92.2145 83.8794 mo
92.3987 83.1958 99.0173 76.5617 99.1969 76.1964 cv
99.3765 75.8311 104.176 72.0673 104.176 72.0673 cv
105.99 70.6361 li
99.7999 65.4877 li
99.7999 65.4877 96.4179 68.9332 93.4973 73.2125 cv
90.5767 77.4917 88.6037 82.0006 88.6037 82.0006 cv
92.2145 83.8794 li
cp
.513726 .470588 .411765 rgb
f
74.0671 52.1814 mo
77.0982 49.1812 li
78.4674 46.2009 li
87.598 46.8925 li
94.9649 46.3804 li
94.9649 46.3804 92.0607 44.1165 87.1843 42.7021 cv
82.3079 41.2876 75.2447 39.3878 75.2447 39.3878 cv
66.1125 38.8963 li
57.2487 39.1921 li
69.7751 43.7125 li
72.4396 44.826 li
74.0671 52.1814 li
cp
.67451 .619608 .54902 rgb
f
57.2487 39.1921 mo
53.2951 42.0334 li
50.3723 45.5781 li
48.2743 62.3765 li
40.8938 64.1884 li
35.9796 76.8489 li
32.925 88.2607 li
40.5348 97.181 li
46.961 98.2431 li
70.034 98.3788 li
78.5018 98.1129 li
74.7878 81.3785 li
74.7878 81.3785 74.5312 76.837 74.3768 72.2169 cv
74.2224 67.5969 73.0364 51.4779 73.296 50.9501 cv
73.5555 50.4222 72.4396 44.826 72.4396 44.826 cv
72.4396 44.826 60.2982 38.8561 57.2487 39.1921 cv
cp
.639216 .588235 .521569 rgb
f
40.8938 64.1884 mo
50.5061 73.5689 li
56.2866 72.4781 li
51.2159 65.5928 li
47.537 62.2763 li
40.8938 64.1884 li
cp
.733333 .67451 .592157 rgb
f
72.4396 44.826 mo
78.4674 46.2009 li
76.3705 50.4297 li
73.7076 52.8504 li
72.4396 44.826 li
cp
f
33.7451 84.993 mo
40.827 93.6537 li
46.6251 95.1936 li
73.6441 95.3031 li
74.1759 80.3565 li
76.2309 88.7088 li
78.5018 98.1129 li
71.3744 98.1857 li
71.3744 98.1857 47.3798 97.9246 46.961 98.2431 cv
46.5422 98.5616 40.5348 97.181 40.5348 97.181 cv
34.4924 90.539 li
32.925 88.2607 li
33.7451 84.993 li
cp
.513726 .470588 .411765 rgb
f
99.7437 65.5736 mo
106.059 70.5607 li
106.077 70.5748 li
106.076 70.5966 li
106.066 71.4143 106.033 72.2309 105.949 73.044 cv
105.924 73.4522 105.855 73.8551 105.81 74.261 cv
105.764 74.667 105.706 75.0711 105.637 75.4736 cv
105.392 77.0886 105.064 78.6889 104.704 80.2813 cv
103.984 83.4668 103.118 86.6149 102.147 89.7357 cv
102.133 89.7812 li
102.093 89.8121 li
90.9286 98.3825 li
90.6111 98.0333 li
90.6621 97.9773 li
90.7753 98.3672 li
81.4593 95.9335 li
81.6102 95.3693 li
90.8979 97.9086 li
91.2778 98.0126 li
91.0112 98.2988 li
90.9596 98.3542 li
90.6422 98.0051 li
101.903 89.5621 li
101.849 89.6381 li
102.851 86.5413 103.753 83.4046 104.507 80.2355 cv
104.883 78.6507 105.229 77.0575 105.492 75.4503 cv
105.565 75.0495 105.628 74.6473 105.678 74.2433 cv
105.728 73.8395 105.801 73.4379 105.831 73.032 cv
105.923 72.2226 105.965 71.4106 105.985 70.5969 cv
106.002 70.6325 li
99.7437 65.5736 li
cp
.337255 .305882 .266667 rgb
f
99.8483 65.3337 mo
98.6603 66.5629 97.594 67.8906 96.5361 69.2211 cv
95.4884 70.5605 94.5183 71.9566 93.5749 73.3673 cv
92.6395 74.7842 91.7802 76.2493 90.9808 77.7436 cv
90.1734 79.2335 89.4438 80.7668 88.8431 82.348 cv
88.8561 82.2967 li
88.6287 83.8057 88.3643 85.3094 88.1203 86.8159 cv
87.8725 88.322 87.5789 89.8215 87.3105 91.3246 cv
87.4742 89.8066 87.6127 88.2848 87.797 86.7697 cv
87.9851 85.2551 88.1529 83.7376 88.3576 82.2254 cv
88.3611 82.2003 li
88.3708 82.1736 li
88.9587 80.5567 89.6759 78.9924 90.4716 77.4721 cv
91.2779 75.9567 92.1853 74.499 93.1444 73.0793 cv
94.0996 71.6561 95.1572 70.3045 96.266 69.0008 cv
97.3659 67.6901 98.5856 66.4781 99.8483 65.3337 cv
cp
.733333 .67451 .592157 rgb
f
77.9562 98.5539 mo
77.9562 98.5539 77.5149 95.6597 76.7382 91.345 cv
76.3356 89.1943 75.8508 86.6738 75.1319 84.0528 cv
74.4093 81.4413 73.3504 78.6307 73.2513 75.5634 cv
73.2123 74.8006 73.2851 74.0274 73.2915 73.3412 cv
73.3042 72.6274 73.2934 71.9131 73.2703 71.2016 cv
73.2043 69.7646 73.1394 68.3504 73.0767 66.9819 cv
72.9584 64.241 72.848 61.6829 72.7535 59.4902 cv
72.5639 55.1053 72.4376 52.1823 72.4376 52.1823 cv
74.7736 52.152 li
74.7736 52.152 74.7539 55.0772 74.7244 59.4647 cv
74.7095 61.6583 74.6922 64.2174 74.6735 66.9593 cv
74.6679 68.3319 74.6621 69.7503 74.6563 71.1917 cv
74.6434 71.9195 74.618 72.6564 74.5677 73.3979 cv
74.5197 74.1668 74.4174 74.8505 74.4193 75.5515 cv
74.3605 78.374 75.2407 81.1857 75.8484 83.871 cv
76.4462 86.5746 76.802 89.1096 77.0987 91.2879 cv
77.6603 95.6445 77.9562 98.5539 77.9562 98.5539 cv
cp
f
72.502 52.5291 mo
72.3474 51.9673 72.1855 51.296 72.0731 50.6975 cv
71.9542 50.079 71.861 49.4568 71.793 48.8331 cv
71.6574 47.5856 71.6234 46.3318 71.6916 45.0875 cv
71.7601 45.4222 li
71.7323 45.3492 li
72.1139 45.7518 li
69.7832 44.4303 67.4529 43.131 65.0403 41.9952 cv
62.6301 40.857 60.1248 39.9053 57.549 39.1455 cv
60.1869 39.6402 62.8001 40.3384 65.3497 41.2398 cv
67.9005 42.1381 70.3853 43.2104 72.8467 44.2931 cv
73.0795 44.3955 li
73.2284 44.6959 li
73.2631 44.7659 li
73.3226 44.886 li
73.3316 45.101 li
73.3802 46.2563 73.5237 47.4034 73.7575 48.5269 cv
73.8744 49.0886 74.0138 49.6445 74.1754 50.1926 cv
74.3431 50.7607 74.5088 51.2447 74.7288 51.8227 cv
72.502 52.5291 li
cp
f
74.0972 52.4088 mo
74.5282 51.9437 74.9549 51.4861 75.3518 51.0059 cv
75.7475 50.5251 76.1026 50.019 76.4356 49.507 cv
77.089 48.4713 77.5807 47.357 77.9922 46.1997 cv
78.1251 45.8259 li
78.5523 45.882 li
81.2328 46.2337 83.9574 46.265 86.7004 46.2645 cv
88.0722 46.2629 89.4503 46.2615 90.8325 46.2959 cv
92.2137 46.3279 93.6012 46.4106 94.9781 46.5783 cv
90.8579 47.0132 li
89.4856 47.1452 88.1101 47.2626 86.7266 47.3286 cv
85.3436 47.4075 83.9522 47.4139 82.5571 47.3647 cv
81.8597 47.3291 81.1622 47.2775 80.465 47.2089 cv
79.7678 47.1331 79.0747 47.0162 78.3838 46.8895 cv
78.9434 46.5719 li
78.4408 47.7512 77.8082 48.9069 76.9757 49.9007 cv
76.1449 50.8948 75.154 51.7202 74.0972 52.4088 cv
cp
f
57.4844 39.0722 mo
57.4844 39.0722 58.3934 38.9457 59.9957 38.7983 cv
61.5966 38.6584 63.8951 38.5037 66.6569 38.5651 cv
69.4157 38.635 72.6406 38.8723 76.0457 39.4724 cv
79.4497 40.0626 83.036 40.9801 86.5152 42.2058 cv
88.2471 42.8642 89.9515 43.4618 91.6551 44.1501 cv
92.4949 44.5089 93.3212 44.9239 94.0633 45.4395 cv
94.8256 45.9723 95.463 46.6815 95.8477 47.5008 cv
96.2371 48.3132 96.4499 49.1441 96.6819 49.9354 cv
96.9129 50.7315 97.1389 51.5104 97.3589 52.2685 cv
97.7877 53.7901 98.1633 55.2379 98.4721 56.5834 cv
99.0972 59.2737 99.4006 61.5609 99.5456 63.1619 cv
99.6892 64.7646 99.6997 65.6835 99.6997 65.6835 cv
99.6997 65.6835 99.6534 64.765 99.4481 63.1727 cv
99.2536 61.579 98.823 59.3251 98.1526 56.6605 cv
97.816 55.3283 97.4106 53.8953 96.9503 52.3887 cv
96.7139 51.6364 96.4712 50.8634 96.2231 50.0735 cv
95.9678 49.2841 95.76 48.463 95.3931 47.7243 cv
94.6997 46.207 93.0721 45.3417 91.4435 44.6524 cv
89.791 43.9975 88.0238 43.3921 86.3198 42.7554 cv
79.437 40.2459 72.1282 39.1276 66.6459 38.8923 cv
63.9008 38.78 61.6057 38.8055 60.0024 38.8957 cv
58.3995 38.9808 57.4844 39.0722 57.4844 39.0722 cv
cp
f
90.3184 97.8211 mo
90.6572 96.6454 90.8845 95.53 91.0723 94.333 cv
91.2555 93.1537 91.3823 91.9606 91.4783 90.7621 cv
91.6703 88.3642 91.7354 85.9456 91.864 83.522 cv
91.8753 83.3098 li
92.0605 83.2313 li
92.4264 83.0762 li
92.3104 83.1634 li
96.4007 78.469 101.01 74.2398 106.031 70.5967 cv
101.139 74.4128 96.7009 78.7835 92.8061 83.5811 cv
92.7627 83.6346 li
92.6897 83.6685 li
92.3295 83.8363 li
92.5257 83.5459 li
92.4816 85.9599 92.5012 88.3844 92.3916 90.819 cv
92.3366 92.0361 92.2502 93.256 92.1042 94.4749 cv
91.9623 95.6754 91.7442 96.9443 91.4513 98.1059 cv
90.3184 97.8211 li
cp
f
92.3201 83.8123 mo
88.5029 82.4306 li
88.7019 81.8821 li
92.519 83.2638 li
92.3201 83.8123 li
cp
f
48.3746 61.7038 mo
48.3746 61.7038 50.5184 64.2906 52.4555 67.0227 cv
53.4292 68.3859 54.3665 69.7739 55.0383 70.8345 cv
55.7132 71.8932 56.1331 72.6167 56.1331 72.6167 cv
56.1331 72.6167 55.6818 71.912 54.9625 70.8852 cv
54.2461 69.8563 53.2509 68.5132 52.2218 67.1977 cv
50.1698 64.5567 47.9314 62.0839 47.9314 62.0839 cv
48.3746 61.7038 li
cp
f
87.7042 91.1408 mo
87.6439 90.9917 87.4818 91.0643 87.3982 91.1477 cv
87.3026 91.2314 87.2176 91.3272 87.1349 91.425 cv
86.6542 92.0336 li
86.4938 92.2475 86.2664 92.4162 86.0749 92.5732 cv
85.475 93.0642 li
83.0756 95.0285 li
78.2188 98.88 li
77.9287 98.0826 li
78.3479 98.0494 li
78.3778 98.957 li
76.8212 98.9941 75.2641 98.9916 73.7071 99.0033 cv
69.0353 99.0067 li
65.9206 99.0078 62.8059 98.9622 59.6917 98.9197 cv
56.5775 98.87 53.4643 98.781 50.3528 98.6684 cv
48.7994 98.605 47.2337 98.5229 45.6801 98.3115 cv
44.1284 98.1059 42.5781 97.8063 41.1137 97.2634 cv
42.6322 97.6189 44.1732 97.8038 45.7192 97.875 cv
47.2663 97.9333 48.814 97.951 50.3717 97.9344 cv
53.4847 97.8665 56.596 97.8224 59.7062 97.8174 cv
62.8164 97.8197 65.9263 97.8189 69.0359 97.8648 cv
73.7009 97.9352 li
75.2561 97.9694 76.8112 97.9893 78.3668 98.0488 cv
78.3966 98.9564 li
77.9762 98.9683 li
76.5065 99.0097 li
77.6861 98.1708 li
82.7373 94.5783 li
85.2919 92.8206 li
85.9306 92.3811 li
86.1515 92.2291 86.3543 92.1037 86.5259 91.9171 cv
87.0718 91.3657 li
87.1665 91.2762 87.2639 91.1882 87.3722 91.113 cv
87.4607 91.0317 87.6677 90.9827 87.7042 91.1408 cv
cp
.337255 .305882 .266667 rgb
f
41.1318 97.1177 mo
39.4594 95.9537 37.9264 94.5827 36.544 93.07 cv
35.1547 91.5621 33.9328 89.8928 32.9133 88.1029 cv
32.8522 87.9955 li
32.8766 87.8679 li
32.9692 87.3844 33.0294 86.8555 33.1074 86.3516 cv
33.355 84.8168 li
33.5313 83.7945 33.7289 82.7784 33.9458 81.7644 cv
34.371 79.7347 34.9332 77.7357 35.5553 75.7573 cv
36.1818 73.7798 36.8903 71.8278 37.6786 69.9079 cv
38.4735 67.9914 39.3214 66.0932 40.2957 64.2591 cv
40.238 64.4341 li
40.2727 64.2237 li
40.3322 63.864 li
40.6908 63.7589 li
47.7445 61.6924 li
47.4823 61.8566 li
47.7542 61.5474 li
47.6286 61.8299 li
48.0775 59.0734 48.4916 56.3118 48.9822 53.5629 cv
50.4059 45.314 li
50.7735 45.6559 li
50.7316 45.6661 li
50.0644 45.8284 li
50.3931 45.2426 li
51.1803 43.84 52.2799 42.6805 53.4672 41.6657 cv
54.6607 40.6529 55.9768 39.7937 57.3773 39.1221 cv
56.041 39.9114 54.8011 40.8499 53.6828 41.9056 cv
52.5748 42.967 51.5841 44.1683 50.9192 45.516 cv
50.5809 45.0927 li
50.6225 45.081 li
51.0531 44.9595 li
50.9902 45.4231 li
49.869 53.6995 li
49.5113 56.4588 49.0769 59.2057 48.6775 61.9575 cv
48.6537 62.1218 li
48.5518 62.2405 li
48.2835 62.5529 li
48.1856 62.6669 li
48.021 62.7173 li
40.9902 64.8688 li
41.4082 64.4042 li
41.3759 64.615 li
41.3625 64.7029 li
41.3181 64.7903 li
40.3936 66.6128 39.4961 68.4507 38.7032 70.3359 cv
37.904 72.2179 37.1827 74.1337 36.5416 76.0764 cv
35.8961 78.0181 35.353 79.9917 34.8392 81.9736 cv
34.5892 82.9661 34.3575 83.965 34.1474 84.9662 cv
33.8483 86.4725 li
33.7504 86.9833 33.6777 87.4771 33.5588 88.002 cv
33.5222 87.7673 li
34.4667 89.542 35.584 91.23 36.8516 92.8048 cv
38.1262 94.375 39.5684 95.8131 41.1318 97.1177 cv
cp
.513726 .470588 .411765 rgb
f
56.6567 82.948 mo
57.145 79.4523 57.0333 75.8148 56.1842 72.3819 cv
56.0701 71.9209 55.3484 72.1171 55.4714 72.5784 cv
56.3924 76.0334 56.7845 79.3615 56.5311 82.931 cv
56.6567 82.948 li
cp
.733333 .67451 .592157 rgb
f
68.1703 84.6661 mo
68.654 83.2725 68.9755 81.9272 69.1294 80.4553 cv
69.1525 80.2352 68.8005 80.2326 68.7826 80.4553 cv
68.6705 81.8502 68.4604 83.2919 68.1263 84.654 cv
68.1703 84.6661 li
cp
f
68.9924 80.6858 mo
70.7637 79.9128 72.3793 78.7457 73.8841 77.5459 cv
74.3223 77.1965 73.6988 76.5682 73.2647 76.9264 cv
71.8069 78.129 70.2645 79.25 68.8569 80.5103 cv
68.7547 80.6018 68.8849 80.7328 68.9924 80.6858 cv
cp
f
66.7966 61.4726 mo
67.1057 60.6837 67.4026 59.8869 67.6329 59.0709 cv
67.6927 58.8587 67.3808 58.7798 67.3073 58.9811 cv
67.017 59.776 66.7916 60.5942 66.5811 61.4132 cv
66.5445 61.5555 66.7453 61.6039 66.7966 61.4726 cv
cp
f
67.7334 59.194 mo
69.9173 57.4785 71.8667 55.4576 73.6442 53.3297 cv
74.0604 52.8315 73.3506 52.109 72.9248 52.6102 cv
71.123 54.7307 69.2648 56.8096 67.5011 58.9617 cv
67.3654 59.1273 67.5675 59.3242 67.7334 59.194 cv
cp
f
69.4939 45.941 mo
70.319 46.1525 71.2267 46.1552 72.0586 45.9883 cv
72.5447 45.8907 72.339 45.1473 71.8536 45.2447 cv
71.0666 45.4026 70.2531 45.6171 69.4939 45.875 cv
69.4939 45.941 li
cp
f
48.5883 88.1958 mo
48.4859 85.9495 48.1855 83.7225 48.1107 81.4711 cv
48.1032 81.2459 47.7565 81.2441 47.7594 81.4711 cv
47.7872 83.7086 47.8958 86.0412 48.4852 88.2097 cv
48.5883 88.1958 li
cp
f
48.1747 81.6648 mo
49.3785 78.7574 50.4971 75.8155 51.2618 72.7578 cv
51.4064 72.1795 50.5139 71.9328 50.3687 72.5116 cv
49.6052 75.5551 48.9053 78.6104 47.9987 81.6162 cv
47.9638 81.7318 48.1311 81.7699 48.1747 81.6648 cv
cp
f
40.8938 93.5543 mo
42.882 94.162 44.8418 94.8221 46.8161 95.4697 cv
47.0911 95.5599 47.2894 95.1124 47.0164 94.9943 cv
45.0964 94.1636 42.9887 93.6487 40.909 93.4423 cv
40.8938 93.5543 li
cp
f
47.1922 95.4151 mo
55.6148 95.9244 64.2311 95.4415 72.6526 95.0017 cv
73.1166 94.9774 73.1209 94.2558 72.6526 94.2762 cv
64.1816 94.6442 55.646 94.6078 47.1922 95.1961 cv
47.0518 95.2058 47.0509 95.4065 47.1922 95.4151 cv
cp
f
55.5757 53.9637 mo
54.8363 55.584 54.4892 57.3727 54.1769 59.1168 cv
54.1389 59.329 54.4628 59.4207 54.5025 59.2066 cv
54.8267 57.4563 55.3416 55.7464 55.6508 53.9953 cv
55.5757 53.9637 li
cp
f
49.1432 60.8928 mo
51.0239 60.5531 52.8856 60.0117 54.6312 59.2289 cv
54.9582 59.0823 54.7245 58.5183 54.3851 58.6452 cv
52.6129 59.3077 50.8532 59.9965 49.0728 60.6376 cv
48.9118 60.6956 48.9754 60.9231 49.1432 60.8928 cv
cp
f
61.6657 67.9343 mo
62.4863 67.3194 63.329 66.7236 64.1192 66.0697 cv
64.2197 65.9864 64.0832 65.8063 63.9781 65.8869 cv
63.1636 66.5117 62.3937 67.1996 61.6104 67.8627 cv
61.6657 67.9343 li
cp
f
66.4349 64.2855 mo
66.7243 63.9287 67.0136 63.5719 67.303 63.215 cv
67.1772 63.0892 li
66.8921 63.4503 66.6071 63.8115 66.322 64.1726 cv
66.4349 64.2855 li
cp
f
67.9857 62.6062 mo
69.7727 60.9399 71.6013 59.3277 73.4123 57.6888 cv
73.7273 57.4035 73.2433 56.9144 72.9444 57.2209 cv
71.241 58.9675 69.5638 60.7329 67.8341 62.4545 cv
67.7358 62.5523 67.8849 62.7002 67.9857 62.6062 cv
cp
f
90.4893 81.0836 mo
90.7702 81.1785 91.05 81.2751 91.3336 81.3616 cv
91.4896 81.4092 91.5579 81.151 91.4003 81.1197 cv
91.1086 81.0616 90.8153 81.0141 90.522 80.9648 cv
90.4893 81.0836 li
cp
f
92.4119 81.5002 mo
92.7592 81.6675 93.1097 81.8277 93.4568 81.9952 cv
93.64 82.0836 93.7569 81.8139 93.5659 81.7366 cv
93.2088 81.5923 92.8549 81.4406 92.498 81.2959 cv
92.3813 81.2486 92.2981 81.4454 92.4119 81.5002 cv
cp
f
99.5246 67.2901 mo
99.8763 67.4473 100.228 67.6026 100.583 67.7525 cv
100.701 67.8022 100.773 67.6356 100.652 67.5899 cv
100.291 67.4534 99.9285 67.323 99.565 67.1942 cv
99.5246 67.2901 li
cp
f
101.643 68.2121 mo
102.956 69.0936 104.138 70.1202 105.365 71.1135 cv
105.77 71.4412 106.225 70.8625 105.805 70.5437 cv
104.538 69.5826 103.127 68.8171 101.737 68.0506 cv
101.631 67.9919 101.543 68.1454 101.643 68.2121 cv
cp
f
95.4284 77.9643 mo
99.006 76.1076 102.401 73.9567 105.636 71.5562 cv
106.047 71.2515 105.638 70.5554 105.233 70.8666 cv
102.033 73.3272 98.7457 75.6573 95.3939 77.9052 cv
95.4284 77.9643 li
cp
f
87.3905 96.0042 mo
88.3423 96.8711 89.4297 97.4512 90.6682 97.7998 cv
90.9458 97.8779 91.0664 97.4374 90.7871 97.3686 cv
89.6052 97.0776 88.488 96.568 87.4734 95.8967 cv
87.3905 96.0042 li
cp
f
71.7425 44.7266 mo
75.8044 45.5801 79.9075 46.1638 83.9589 47.0914 cv
84.2672 47.1619 84.3991 46.6907 84.0899 46.6162 cv
80.0732 45.6474 75.9 44.7579 71.7589 44.6056 cv
71.7425 44.7266 li
cp
f
40.8476 89.3163 mo
43.2083 86.8003 45.5016 84.1928 47.7435 81.5703 cv
47.8984 81.3891 47.6416 81.1254 47.4789 81.3057 cv
45.166 83.8699 42.8752 86.4836 40.6831 89.1518 cv
40.5898 89.2654 40.7433 89.4275 40.8476 89.3163 cv
cp
f
44.7376 87.526 mo
44.9687 86.8895 45.3157 86.3414 45.7705 85.8416 cv
45.8751 85.7267 45.7045 85.5552 45.5995 85.6705 cv
45.119 86.1985 44.7918 86.8022 44.588 87.4848 cv
44.5591 87.5817 44.7039 87.6186 44.7376 87.526 cv
cp
f
46.6429 84.5244 mo
47.2447 83.3204 47.9209 82.1552 48.5541 80.9676 cv
48.7057 80.6831 48.2549 80.4342 48.1286 80.7188 cv
47.5794 81.9564 47.0744 83.2139 46.4931 84.4369 cv
46.4457 84.5368 46.5926 84.6249 46.6429 84.5244 cv
cp
f
54.047 87.151 mo
54.927 85.5476 56.0078 84.0493 56.8495 82.4316 cv
57.0893 81.9709 56.3903 81.5616 56.1522 82.024 cv
55.3113 83.6565 54.7078 85.4112 53.9013 87.0658 cv
53.8541 87.1625 53.9943 87.2473 54.047 87.151 cv
cp
f
72.0226 46.7844 mo
72.3283 46.2343 83.3679 40.1517 83.3679 40.1517 cv
90.6987 36.6609 li
96.4586 32.8209 li
96.4586 32.8209 105.884 25.8392 105.884 25.3156 cv
105.884 24.792 106.757 16.5885 106.757 16.5885 cv
121.418 11.1776 li
122.291 9.60678 li
132.764 18.1594 li
138.523 22.5229 li
128.225 30.0282 li
114.087 42.2462 li
77.608 46.7844 li
77.608 46.7844 71.1499 48.3553 72.0226 46.7844 cv
cp
.337255 .305882 .266667 rgb
f
78.1431 14.1596 mo
87.2166 21.1267 li
106.757 16.5885 li
106.174 25.5015 li
96.4586 32.8209 li
96.4586 32.8209 83.49 40.7322 83.0039 40.7322 cv
82.5179 40.7322 72.0226 46.7844 72.0226 46.7844 cv
69.7176 44.7829 li
67.4492 42.0284 li
67.4492 42.0284 73.7683 25.5015 73.7683 25.0154 cv
73.7683 24.5293 78.1431 14.1596 78.1431 14.1596 cv
cp
.576471 .529412 .466667 rgb
f
87.2166 21.1267 mo
87.5967 31.3343 li
93.9239 32.551 li
78.3493 42.5285 li
88.5702 38.1482 li
94.8973 34.0112 li
105.605 35.7146 li
96.4586 32.8209 li
106.174 25.5015 li
110.959 26.2239 li
106.092 23.3036 li
106.757 16.5885 li
106.757 16.5885 95.3841 19.1667 94.4106 19.1667 cv
93.4372 19.1667 87.2166 21.1267 87.2166 21.1267 cv
cp
.67451 .619608 .54902 rgb
f
78.1431 14.1596 mo
87.2166 21.1267 li
119.233 12.3528 li
122.291 9.60678 li
78.1431 14.1596 li
cp
f
119.233 12.3528 mo
132.617 21.8435 li
120.206 24.7638 li
138.523 22.5229 li
122.291 9.60678 li
119.233 12.3528 li
cp
.576471 .529412 .466667 rgb
f
110.959 38.3915 mo
113.636 30.1175 li
138.523 22.5229 li
114.852 41.7984 li
72.0226 46.7844 li
108.282 36.9314 li
110.959 38.3915 li
cp
.278431 .247059 .203922 rgb
f
77.7971 14.1257 mo
77.7971 14.1257 78.4513 14.4643 79.4039 15.0348 cv
80.358 15.6006 81.5933 16.4206 82.8017 17.2732 cv
84.0064 18.1199 85.2112 18.9667 86.1148 19.6017 cv
87.0287 20.2068 87.6379 20.61 87.6379 20.61 cv
86.9331 21.5978 li
86.9331 21.5978 86.3579 21.1252 85.4949 20.4165 cv
84.6584 19.6895 83.5431 18.7202 82.4279 17.751 cv
81.3189 16.7838 80.1847 15.8499 79.298 15.1923 cv
78.4153 14.5314 77.7971 14.1257 77.7971 14.1257 cv
cp
.733333 .67451 .592157 rgb
f
122.243 9.47246 mo
111.152 10.9613 li
100.043 12.309 li
92.6271 13.1247 85.2024 13.8954 77.7543 14.393 cv
78.0007 14.2026 li
76.3775 18.9427 74.5356 23.5971 72.6848 28.2415 cv
70.8587 32.8953 69.0018 37.5377 67.433 42.2879 cv
68.8519 37.4911 70.5398 32.7741 72.3108 28.0974 cv
74.0572 23.4106 75.8713 18.7519 77.4669 14.0213 cv
77.5262 13.8453 li
77.7137 13.8306 li
85.1452 13.2503 92.5713 12.5779 99.9873 11.7942 cv
122.243 9.47246 li
cp
f
138.293 22.8731 mo
137.212 23.5453 136.149 24.2462 135.117 24.9883 cv
134.088 25.7346 133.062 26.4869 132.065 27.2769 cv
130.061 28.842 128.083 30.4404 126.145 32.0881 cv
122.27 35.381 118.46 38.7585 114.738 42.2199 cv
114.678 42.2756 li
114.604 42.2904 li
111.054 42.9883 107.496 43.4424 103.93 43.8954 cv
93.2324 45.1744 li
82.5206 46.3168 li
71.799 47.3654 li
78.919 46.4203 86.0477 45.5546 93.1719 44.6623 cv
103.856 43.3198 li
109.188 42.5894 li
110.96 42.33 112.742 42.086 114.484 41.7345 cv
114.35 41.8047 li
118.104 38.3544 121.925 34.9845 125.885 31.774 cv
127.862 30.1679 129.85 28.5726 131.918 27.0814 cv
132.941 26.3225 133.993 25.6018 135.048 24.8873 cv
136.107 24.176 137.191 23.5104 138.293 22.8731 cv
cp
.337255 .305882 .266667 rgb
f
96.2915 32.5245 mo
94.7854 32.8168 93.2229 32.7796 91.6945 32.5894 cv
90.1615 32.4015 88.6499 32.044 87.184 31.5521 cv
87.3844 30.8762 li
87.4786 30.8962 li
87.0411 31.2418 li
86.7225 26.2382 li
86.6039 24.5721 86.5459 22.9047 86.4614 21.2385 cv
86.4379 20.7761 li
86.8943 20.676 li
91.2675 19.7168 li
95.6215 18.6775 li
98.5266 17.9954 101.418 17.2536 104.294 16.4529 cv
107.163 15.6293 110.052 14.8652 112.905 13.9778 cv
117.193 12.6622 li
121.475 11.3085 li
120.106 11.9172 118.719 12.485 117.328 13.0428 cv
115.937 13.6001 114.539 14.1415 113.126 14.6419 cv
108.877 16.118 li
107.457 16.6012 106.026 17.0516 104.587 17.4721 cv
101.71 18.3227 98.8159 19.1148 95.9061 19.8473 cv
92.9894 20.5518 90.0514 21.165 87.1064 21.7348 cv
87.5392 21.1726 li
87.5867 22.8518 87.661 24.5298 87.6743 26.2092 cv
87.7519 31.2418 li
87.7589 31.7047 li
87.3142 31.5876 li
87.2211 31.5632 li
87.4216 30.8872 li
90.2364 31.9394 93.2261 32.749 96.2915 32.5245 cv
cp
.733333 .67451 .592157 rgb
f
96.403 32.812 mo
94.5251 34.2548 92.5623 35.598 90.5177 36.8025 cv
88.4861 38.0301 86.384 39.1359 84.2605 40.1907 cv
82.1429 41.246 80.0553 42.3338 78.0115 43.5136 cv
75.9752 44.7028 73.9933 45.9841 72.0493 47.3256 cv
71.9122 47.4203 li
71.801 47.3099 li
70.9925 46.5071 70.2027 45.6929 69.4689 44.8237 cv
68.7349 43.959 68.0159 43.0708 67.4402 42.0933 cv
68.0801 43.0289 68.8514 43.8597 69.6381 44.669 cv
70.4333 45.4701 71.2371 46.2664 72.0682 47.025 cv
71.8201 47.0095 li
75.5977 44.1361 79.7222 41.7023 84.0124 39.6847 cv
86.1386 38.654 88.2414 37.579 90.3189 36.4549 cv
92.3826 35.3082 94.4329 34.1281 96.403 32.812 cv
cp
f
114.449 42.3415 mo
113.001 40.9919 111.602 39.5546 110.291 38.0688 cv
110.746 37.6683 li
112.044 39.1376 113.429 40.5607 114.864 41.8984 cv
114.449 42.3415 li
cp
f
114.631 26.4544 mo
116.325 25.3346 118.392 25.0256 120.333 24.6192 cv
122.305 24.2462 124.282 23.9067 126.264 23.5978 cv
130.234 23.0151 134.225 22.56 138.229 22.2776 cv
138.069 22.8046 li
135.376 20.6517 132.674 18.5135 130.046 16.2818 cv
127.404 14.0687 124.801 11.8033 122.319 9.41129 cv
123.619 10.5417 124.956 11.6278 126.299 12.7058 cv
130.325 15.9401 li
138.433 22.3396 li
139.022 22.8046 li
138.272 22.8668 li
136.278 23.0322 134.284 23.181 132.294 23.3868 cv
130.303 23.5862 128.317 23.8307 126.332 24.0826 cv
124.347 24.3319 122.364 24.6122 120.388 24.9255 cv
118.421 25.2431 116.38 25.426 114.631 26.4544 cv
cp
f
96.2993 32.6581 mo
96.5426 32.3932 96.9657 32.5064 97.2567 32.6216 cv
97.5594 32.753 97.8555 32.8793 98.1554 32.993 cv
98.7572 33.2255 99.3728 33.4165 99.9873 33.6087 cv
103.719 34.7106 li
106.213 35.5015 108.656 36.464 111.007 37.6187 cv
110.241 38.4624 li
110.104 38.2324 li
109.963 37.9942 li
110.05 37.7387 li
110.705 35.7985 111.409 33.8746 112.139 31.9594 cv
112.873 30.0453 113.652 28.1463 114.497 26.2694 cv
114.047 28.278 113.531 30.2646 112.969 32.2361 cv
112.405 34.2064 111.814 36.1681 111.174 38.1133 cv
111.119 37.6201 li
111.259 37.8479 li
112.293 39.5296 li
110.493 38.6917 li
108.159 37.605 105.796 36.583 103.388 35.6582 cv
102.189 35.1863 100.96 34.7431 99.7615 34.2051 cv
99.1621 33.937 98.5771 33.6315 98.0055 33.3082 cv
97.7182 33.145 97.4389 32.9706 97.1675 32.7991 cv
96.9128 32.6446 96.586 32.4591 96.2993 32.6581 cv
cp
f
80.8121 33.6243 mo
82.8913 32.9443 85.0659 32.5907 87.1545 31.9072 cv
87.6982 31.7293 87.4611 30.8622 86.9177 31.0479 cv
84.8261 31.7628 82.8608 32.7937 80.7793 33.5055 cv
80.8121 33.6243 li
cp
f
82.1789 23.7653 mo
83.3502 22.5834 84.8178 21.756 86.3357 21.1021 cv
86.74 20.9279 86.3831 20.2648 85.9817 20.4964 cv
84.5001 21.3514 83.2948 22.4758 82.122 23.7083 cv
82.1789 23.7653 li
cp
f
80.9061 21.9876 mo
81.5507 23.5606 82.3333 25.0702 82.9713 26.6465 cv
83.0345 26.8025 83.2906 26.7352 83.2272 26.5759 cv
82.5927 24.9825 81.9406 23.388 80.9928 21.9511 cv
80.9061 21.9876 li
cp
f
82.8581 29.3719 mo
81.7659 30.4111 80.7917 31.6869 80.3029 33.127 cv
80.2533 33.2735 80.468 33.3532 80.5455 33.2293 cv
81.3384 31.9615 82.0774 30.7062 83.0357 29.5495 cv
83.1374 29.4268 82.9773 29.2585 82.8581 29.3719 cv
cp
f
79.8872 34.0141 mo
78.023 36.6531 76.1563 39.2875 74.359 41.9733 cv
74.2143 42.1897 74.5622 42.3901 74.7069 42.1767 cv
76.5166 39.5064 78.2526 36.7912 79.9937 34.0763 cv
79.8872 34.0141 li
cp
f
69.6067 43.8887 mo
70.3446 44.8429 71.0706 45.8245 71.842 46.7493 cv
72.1191 47.0815 72.7054 47.3141 72.8785 46.7676 cv
72.977 46.4568 72.5123 46.3431 72.3986 46.6353 cv
72.3834 46.6746 71.2 45.4491 71.0762 45.3068 cv
70.6291 44.7928 70.1605 44.2976 69.6972 43.7983 cv
69.6067 43.8887 li
cp
f
69.1184 41.658 mo
70.4347 43.4229 71.4237 45.3602 72.5931 47.2176 cv
72.8656 47.6505 73.5572 47.2491 73.2806 46.8158 cv
72.0931 44.9552 70.5624 43.3241 69.1631 41.6235 cv
69.1184 41.658 li
cp
f
85.0797 37.6304 mo
85.3035 37.4066 li
85.2432 37.3463 li
85.0194 37.5701 li
85.0797 37.6304 li
cp
f
82.0948 37.5965 mo
83.5816 37.976 85.0844 38.271 86.5697 38.6613 cv
86.809 38.7243 86.9118 38.3492 86.6717 38.2911 cv
85.1755 37.9291 83.6504 37.5809 82.1168 37.4335 cv
82.0228 37.4244 82.0057 37.5736 82.0948 37.5965 cv
cp
f
74.5854 30.2716 mo
76.5365 28.4908 78.5687 26.8029 80.489 24.9881 cv
80.6182 24.8658 80.4256 24.676 80.2945 24.7936 cv
78.3307 26.5567 76.4842 28.4416 74.5519 30.238 cv
74.5854 30.2716 li
cp
f
75.9334 28.2679 mo
77.4426 26.3259 79.1318 24.5813 81.087 23.0853 cv
82.5623 21.9563 84.2214 21.0764 85.272 19.4994 cv
85.5546 19.0753 84.8083 18.651 84.5967 19.1047 cv
83.669 21.0953 81.5195 22.1962 79.9433 23.634 cv
78.4242 25.0197 77.0622 26.544 75.8365 28.1932 cv
75.9334 28.2679 li
cp
f
127.798 374.823 mo
127.798 374.823 131.821 374.689 134.234 374.152 cv
136.648 373.616 141.341 373.214 141.341 373.214 cv
152.068 372.007 li
152.068 372.007 165.744 371.471 171.778 369.728 cv
177.811 367.985 186.125 363.962 186.125 363.962 cv
183.979 357.66 li
166.683 349.079 li
164.135 324.944 li
163.062 324.408 li
152.604 326.687 li
144.961 335.537 li
135.843 336.743 li
135.843 336.743 136.782 345.459 136.38 345.325 cv
135.978 345.19 131.687 349.481 131.016 350.42 cv
130.346 351.358 125.921 360.208 125.921 360.208 cv
127.664 367.18 li
127.798 374.823 li
cp
.403922 .392157 .345098 rgb
f
103.437 295.784 mo
89.8119 301.043 li
84.314 318.971 li
81.4456 331.879 li
85.9873 347.894 li
91.7242 351.48 li
105.588 361.519 li
127.798 374.823 li
127.798 374.823 128.297 370.125 127.102 365.583 cv
125.906 361.041 126.146 359.129 126.146 359.129 cv
126.146 359.129 129.253 352.436 131.643 349.567 cv
134.034 346.699 136.185 344.309 136.185 344.309 cv
135.843 336.743 li
123.277 322.795 li
121.843 312.995 li
115.389 306.78 li
111.325 300.565 li
111.325 300.565 105.349 296.023 103.437 295.784 cv
cp
.615686 .6 .52549 rgb
f
142.738 364.916 mo
170.741 363.121 li
183.979 357.66 li
166.683 349.079 li
142.738 364.916 li
cp
f
103.437 295.784 mo
109.709 299.216 li
121.843 312.995 li
123.277 322.795 li
135.843 336.743 li
144.961 335.537 li
152.742 326.297 li
163.062 324.408 li
149.919 313.218 li
146.328 303.165 li
116.889 297.78 li
103.437 295.784 li
cp
.705882 .690196 .6 rgb
f
127.664 367.18 mo
142.738 364.916 li
143.456 372.814 li
127.798 374.823 li
127.664 367.18 li
cp
.34902 .341176 .286275 rgb
f
170.741 363.121 mo
171.778 369.728 li
179.717 367.788 li
186.125 363.962 li
183.979 357.66 li
170.741 363.121 li
cp
f
85.9873 347.894 mo
100.654 345.699 li
121.069 358.043 li
126.146 359.129 li
127.664 367.18 li
127.664 367.18 129.305 374.511 127.798 374.823 cv
126.292 375.135 105.588 361.519 105.588 361.519 cv
96.8556 355.194 li
85.9873 347.894 li
cp
.560784 .54902 .478431 rgb
f
123.277 322.795 mo
150.031 314.838 li
146.328 303.165 li
121.843 312.995 li
123.277 322.795 li
cp
f
127.688 374.877 mo
116.917 368.881 li
115.122 367.88 113.32 366.893 111.571 365.815 cv
109.81 364.756 108.056 363.681 106.324 362.568 cv
104.596 361.449 102.886 360.298 101.232 359.062 cv
99.555 357.86 98.0206 356.437 96.4244 355.209 cv
93.156 352.773 89.6714 350.583 86.1734 348.463 cv
86.0788 348.406 li
86.025 348.314 li
85.2769 347.035 84.7396 345.683 84.2459 344.324 cv
83.7543 342.964 83.3411 341.582 82.9765 340.19 cv
82.2392 337.406 81.6519 334.6 81.1657 331.76 cv
81.1543 331.694 li
81.1648 331.63 li
82.0235 326.417 83.3529 321.332 84.769 316.277 cv
86.2079 311.227 87.7639 306.217 89.4038 301.231 cv
89.4363 301.131 li
89.5291 301.094 li
102.807 295.727 li
89.7043 301.505 li
89.829 301.369 li
88.2802 306.373 86.8129 311.408 85.4663 316.469 cv
84.1242 321.527 82.7984 326.609 81.9916 331.754 cv
81.9906 331.625 li
82.4861 334.422 83.0881 337.218 83.8321 339.961 cv
84.5877 342.69 85.4064 345.451 86.7607 347.879 cv
86.6126 347.73 li
90.1244 349.887 93.5943 352.093 96.9002 354.586 cv
98.5463 355.879 100.033 357.251 101.674 358.477 cv
103.29 359.729 104.968 360.902 106.668 362.045 cv
108.372 363.183 110.102 364.285 111.842 365.373 cv
113.57 366.483 115.362 367.489 117.116 368.555 cv
127.688 374.877 li
cp
.403922 .392157 .345098 rgb
f
121.095 357.264 mo
121.095 357.264 122.481 357.434 123.789 357.991 cv
125.109 358.511 126.264 359.399 126.264 359.399 cv
125.672 360.07 li
125.672 360.07 124.759 359.091 123.586 358.39 cv
122.436 357.659 121.095 357.264 121.095 357.264 cv
cp
.756863 .737255 .639216 rgb
f
123.067 322.733 mo
122.759 321.195 122.563 319.84 122.366 318.486 cv
122.172 317.152 121.979 315.82 121.677 314.308 cv
123.432 313.958 li
123.741 315.503 123.939 316.865 124.137 318.227 cv
124.331 319.554 124.521 320.879 124.822 322.384 cv
123.067 322.733 li
cp
f
124.572 321.963 mo
124.572 321.963 125.203 322.998 126.203 324.471 cv
127.205 325.959 128.623 327.896 130.12 329.781 cv
133.109 333.555 136.39 337.111 136.39 337.111 cv
136.39 337.111 132.798 333.879 129.445 330.369 cv
127.767 328.617 126.153 326.794 124.994 325.377 cv
123.823 323.953 123.104 322.987 123.104 322.987 cv
124.572 321.963 li
cp
f
123.422 323.037 mo
123.685 323.383 124.305 324.189 125.167 325.236 cv
126.373 326.711 127.992 328.527 129.607 330.216 cv
130.766 331.427 131.96 332.613 133.023 333.642 cv
132.06 332.518 130.981 331.23 129.944 329.919 cv
128.514 328.12 127.085 326.18 126.018 324.596 cv
125.281 323.511 124.739 322.654 124.506 322.28 cv
123.422 323.037 li
cp
136.239 337.276 mo
136.204 337.245 132.605 333.999 129.282 330.524 cv
127.661 328.828 126.034 327.003 124.821 325.519 cv
123.66 324.107 122.931 323.129 122.924 323.119 cv
122.788 322.934 li
124.639 321.642 li
124.763 321.845 li
124.77 321.855 125.405 322.895 126.389 324.346 cv
127.448 325.921 128.873 327.851 130.294 329.641 cv
133.245 333.366 136.521 336.923 136.554 336.958 cv
136.239 337.276 li
cp
f
102.675 295.759 mo
102.675 295.759 103.103 295.841 103.834 296.06 cv
104.568 296.272 105.598 296.654 106.756 297.283 cv
109.091 298.515 111.804 300.828 114.126 303.467 cv
116.449 306.089 118.604 308.82 120.408 310.64 cv
122.193 312.483 123.555 313.459 123.555 313.459 cv
122.426 314.848 li
122.426 314.848 121.018 313.688 119.293 311.658 cv
117.543 309.647 115.561 306.769 113.437 304.039 cv
111.332 301.312 108.83 298.882 106.615 297.524 cv
105.518 296.834 104.523 296.39 103.81 296.134 cv
103.098 295.869 102.675 295.759 102.675 295.759 cv
cp
f
167.044 348.569 mo
165.925 340.64 164.847 332.706 163.83 324.765 cv
163.986 325.011 li
158.809 321.824 154.441 317.595 149.481 314.272 cv
149.361 314.191 li
149.315 314.053 li
145.88 303.681 li
146.167 303.961 li
144.422 303.437 142.659 302.944 140.891 302.505 cv
139.117 302.048 137.359 301.73 135.534 301.471 cv
131.905 300.914 128.298 300.259 124.698 299.571 cv
117.492 298.228 110.321 296.733 103.091 295.525 cv
110.363 296.452 117.592 297.7 124.811 298.939 cv
128.424 299.537 132.036 300.141 135.652 300.688 cv
137.457 300.93 139.309 301.253 141.088 301.7 cv
142.878 302.132 144.648 302.614 146.417 303.132 cv
146.632 303.195 li
146.703 303.412 li
150.123 313.785 li
149.957 313.567 li
154.963 317 159.33 321.186 164.349 324.434 cv
164.488 324.524 li
164.506 324.681 li
165.406 332.637 166.246 340.6 167.044 348.569 cv
cp
f
127.475 374.877 mo
132.447 374.468 137.344 373.537 142.281 372.826 cv
144.748 372.461 147.224 372.126 149.715 371.889 cv
157.171 371.324 li
162.128 370.922 167.069 370.316 171.892 369.196 cv
174.306 368.651 176.681 367.943 178.981 367.044 cv
180.135 366.607 181.265 366.105 182.368 365.555 cv
183.482 365.022 184.543 364.393 185.606 363.767 cv
185.433 364.16 li
185.014 362.047 184.628 359.864 183.863 357.896 cv
184.014 358.053 li
178.291 355.153 172.601 352.186 166.92 349.209 cv
172.729 351.937 178.529 354.674 184.295 357.479 cv
184.4 357.53 li
184.447 357.637 li
184.902 358.68 185.189 359.74 185.469 360.806 cv
185.745 361.872 185.982 362.94 186.187 364.023 cv
186.236 364.283 li
186.014 364.416 li
184.935 365.064 183.855 365.714 182.724 366.266 cv
181.603 366.836 180.453 367.356 179.282 367.81 cv
176.947 368.744 174.536 369.482 172.093 370.053 cv
167.204 371.209 162.209 371.739 157.234 372.118 cv
149.773 372.595 li
147.297 372.774 144.824 373.051 142.353 373.359 cv
137.416 373.999 132.456 374.645 127.475 374.877 cv
cp
.403922 .392157 .345098 rgb
f
163.762 324.22 mo
161.96 324.75 160.15 325.244 158.338 325.733 cv
156.526 326.22 154.721 326.736 152.9 327.183 cv
153.056 327.118 li
152.98 327.17 li
153.077 327.088 li
151.911 328.42 150.751 329.749 149.652 331.116 cv
149.104 331.8 148.568 332.492 148.058 333.198 cv
147.54 333.89 147.106 334.65 146.426 335.391 cv
146.093 335.755 145.652 336.142 145.095 336.369 cv
144.54 336.588 144.007 336.633 143.535 336.66 cv
143.057 336.684 142.612 336.681 142.169 336.684 cv
141.737 336.683 141.302 336.693 140.903 336.727 cv
139.234 336.864 137.56 337.245 135.938 337.791 cv
136.534 336.891 li
137.193 344.995 li
137.228 345.435 li
136.898 345.725 li
134.626 347.724 132.607 350.013 130.878 352.508 cv
130.016 353.758 129.245 355.07 128.524 356.41 cv
127.811 357.754 127.184 359.147 126.65 360.577 cv
126.663 360.235 li
127.199 362.689 127.668 365.132 127.88 367.626 cv
128.092 370.101 128.24 372.643 127.682 375.077 cv
127.831 373.843 127.759 372.607 127.671 371.381 cv
127.575 370.154 127.388 368.935 127.169 367.723 cv
126.711 365.308 126.19 362.888 125.521 360.537 cv
125.476 360.379 li
125.533 360.194 li
127.403 354.162 130.972 348.628 135.734 344.407 cv
135.44 345.136 li
134.792 337.032 li
134.737 336.34 li
135.389 336.132 li
137.126 335.575 138.929 335.143 140.797 335.056 cv
141.281 335.03 141.732 335.031 142.184 335.045 cv
143.473 335.058 li
144.34 335.043 144.771 334.918 145.315 334.338 cv
145.847 333.785 146.366 333.041 146.938 332.341 cv
147.503 331.64 148.088 330.961 148.684 330.294 cv
149.875 328.962 151.114 327.686 152.35 326.416 cv
152.403 326.361 li
152.447 326.335 li
152.526 326.287 li
152.609 326.237 li
152.682 326.222 li
154.519 325.843 156.37 325.531 158.215 325.19 cv
160.061 324.851 161.907 324.518 163.762 324.22 cv
cp
.756863 .737255 .639216 rgb
f
143.758 373.123 mo
142.792 370.614 142.157 367.965 141.865 365.274 cv
141.896 365.383 li
141.677 364.972 li
141.543 364.72 li
141.799 364.561 li
148.19 360.587 li
154.551 356.57 li
167.232 348.444 li
163.292 351.568 159.208 354.51 154.999 357.261 cv
152.906 358.653 150.789 360.011 148.63 361.301 cv
146.478 362.6 144.326 363.899 142.117 365.102 cv
142.238 364.691 li
142.436 365.112 li
142.464 365.171 li
142.467 365.222 li
142.639 367.878 143.074 370.523 143.758 373.123 cv
cp
f
124.775 336.319 mo
124.775 336.209 124.775 336.099 124.775 335.989 cv
124.775 335.881 124.607 335.88 124.607 335.989 cv
124.607 336.099 124.607 336.209 124.607 336.319 cv
124.607 336.427 124.775 336.427 124.775 336.319 cv
cp
f
125.121 335.715 mo
126.22 333.408 127.47 331.178 128.576 328.889 cv
128.815 328.394 128.054 327.97 127.845 328.462 cv
126.842 330.824 125.979 333.252 124.958 335.619 cv
124.911 335.728 125.068 335.826 125.121 335.715 cv
cp
f
118.743 339.271 mo
121.297 338.097 123.894 337.018 126.448 335.84 cv
126.696 335.726 126.48 335.352 126.233 335.472 cv
123.71 336.691 121.238 338.007 118.718 339.229 cv
118.743 339.271 li
cp
f
110.599 313.647 mo
112.435 311.746 114.369 309.927 116.146 307.972 cv
116.644 307.424 115.815 306.604 115.335 307.161 cv
113.6 309.176 112.02 311.328 110.347 313.395 cv
110.205 313.569 110.436 313.815 110.599 313.647 cv
cp
f
99.8361 335.328 mo
99.7942 338.628 99.8931 341.933 99.7767 345.231 cv
99.7695 345.434 100.099 345.434 100.091 345.231 cv
99.9749 341.933 100.074 338.628 100.032 335.328 cv
100.03 335.202 99.8377 335.202 99.8361 335.328 cv
cp
f
107.529 349.189 mo
105.162 347.772 102.821 346.321 100.432 344.942 cv
100.186 344.8 99.9624 345.183 100.21 345.322 cv
102.614 346.676 105.057 347.952 107.483 349.267 cv
107.529 349.189 li
cp
f
93.3249 346.851 mo
95.5403 346.353 97.7665 345.901 99.9773 345.382 cv
100.287 345.309 100.155 344.818 99.8453 344.903 cv
97.6582 345.503 95.4894 346.17 93.3082 346.79 cv
93.3249 346.851 li
cp
f
97.2461 312.403 mo
101.601 313.478 106.008 313.923 110.489 313.996 cv
111.018 314.005 111.014 313.151 110.489 313.178 cv
106.041 313.407 101.689 312.989 97.313 312.161 cv
97.1559 312.131 97.0869 312.364 97.2461 312.403 cv
cp
f
125.67 351.818 mo
127.561 351.325 129.564 351.295 131.492 351.011 cv
132.311 350.891 131.959 349.658 131.15 349.771 cv
129.169 350.047 127.452 350.87 125.601 351.568 cv
125.448 351.626 125.506 351.86 125.67 351.818 cv
cp
f
150.104 364.063 mo
157.046 364.072 163.968 363.901 170.904 363.619 cv
171.635 363.589 171.638 362.445 170.904 362.479 cv
163.956 362.803 157.033 363.234 150.104 363.846 cv
149.968 363.858 149.963 364.063 150.104 364.063 cv
cp
f
179.85 358.465 mo
176.746 359.388 173.631 361.029 170.7 362.404 cv
170.046 362.711 170.618 363.714 171.272 363.382 cv
174.127 361.932 177.315 360.487 179.92 358.631 cv
180 358.574 179.955 358.434 179.85 358.465 cv
cp
f
147.697 339.862 mo
147.072 338.379 146.16 336.976 145.01 335.844 cv
144.532 335.374 143.86 336.194 144.438 336.586 cv
145.758 337.479 146.743 338.537 147.511 339.94 cv
147.565 340.038 147.742 339.97 147.697 339.862 cv
cp
f
137.913 306.649 mo
132.39 308.116 126.96 310.386 121.985 313.191 cv
121.295 313.581 121.912 314.636 122.606 314.254 cv
127.635 311.485 132.702 309.059 137.972 306.79 cv
137.913 306.649 li
cp
f
146.457 324.176 mo
148.662 325.101 150.727 326.333 152.953 327.239 cv
153.661 327.527 154.005 326.343 153.273 326.079 cv
151.045 325.275 148.715 324.823 146.492 324.048 cv
146.457 324.176 li
cp
f
88.0443 329.879 mo
85.751 330.095 83.499 330.715 81.5116 331.909 cv
81.0837 332.167 81.4779 332.844 81.9033 332.58 cv
83.8329 331.381 85.8232 330.501 88.0749 330.106 cv
88.2018 330.083 88.174 329.867 88.0443 329.879 cv
cp
f
106.626 330.43 mo
107.606 328.53 108.87 326.821 110.376 325.306 cv
110.582 325.098 110.265 324.781 110.054 324.984 cv
108.47 326.517 107.273 328.313 106.428 330.346 cv
106.381 330.46 106.57 330.538 106.626 330.43 cv
cp
f
106.514 334.327 mo
108.965 331.481 111.361 328.583 113.734 325.671 cv
113.914 325.449 113.597 325.13 113.417 325.354 cv
111.055 328.296 108.713 331.258 106.432 334.264 cv
106.514 334.327 li
cp
f
115.921 322.596 mo
118.048 319.924 120.001 317.131 121.977 314.347 cv
122.261 313.948 121.571 313.53 121.313 313.959 cv
119.565 316.859 117.599 319.618 115.619 322.363 cv
115.493 322.538 115.785 322.767 115.921 322.596 cv
cp
f
119.737 320.145 mo
120.623 318.482 121.858 317.072 122.783 315.433 cv
123.143 314.796 122.125 314.219 121.811 314.865 cv
120.982 316.573 120.518 318.403 119.646 320.092 cv
119.737 320.145 li
cp
f
102.287 343.911 mo
102.287 343.801 102.287 343.691 102.287 343.581 cv
102.203 343.581 li
102.203 343.691 102.203 343.801 102.203 343.911 cv
102.287 343.911 li
cp
f
102.253 343.238 mo
102.371 342.784 102.267 342.458 101.933 342.133 cv
101.869 342.116 li
101.292 342.323 100.957 342.916 100.658 343.424 cv
100.429 343.816 101.065 344.114 101.246 343.672 cv
101.368 343.376 101.529 343 101.725 342.734 cv
101.872 342.494 li
101.986 342.193 102.089 342.434 102.179 343.217 cv
102.253 343.238 li
cp
f
92.3666 317.541 mo
91.1177 318.332 89.8892 319.233 88.8663 320.304 cv
88.7793 320.395 88.9158 320.533 89.0047 320.443 cv
90.0599 319.376 91.1256 318.398 92.3843 317.572 cv
92.3666 317.541 li
cp
f
89.0631 309.273 mo
89.1756 309.166 89.2882 309.058 89.4007 308.951 cv
89.3413 308.891 li
89.2337 309.004 89.1262 309.116 89.0186 309.229 cv
89.0631 309.273 li
cp
f
146.035 364.876 mo
153.085 360.514 159.755 355.222 166.138 349.936 cv
166.693 349.476 165.903 348.712 165.351 349.15 cv
158.846 354.324 152.851 360.041 145.93 364.695 cv
145.819 364.77 145.919 364.948 146.035 364.876 cv
cp
f
153.85 362.503 mo
154.68 361.683 155.48 360.826 156.257 359.956 cv
156.433 359.758 156.142 359.465 155.965 359.664 cv
155.186 360.537 154.421 361.431 153.697 362.35 cv
153.613 362.457 153.748 362.604 153.85 362.503 cv
cp
f
158.447 357.861 mo
158.669 357.643 158.891 357.425 159.113 357.206 cv
159.231 357.089 159.047 356.904 158.93 357.023 cv
158.711 357.245 158.493 357.467 158.274 357.688 cv
158.164 357.801 158.335 357.972 158.447 357.861 cv
cp
f
162.14 354.621 mo
163.471 353.313 164.798 352 166.125 350.688 cv
166.44 350.376 165.936 349.877 165.64 350.203 cv
164.385 351.587 163.129 352.971 161.878 354.359 cv
161.719 354.535 161.969 354.79 162.14 354.621 cv
cp
f
163.503 358.881 mo
163.738 358.56 163.973 358.24 164.208 357.919 cv
164.36 357.711 164.001 357.492 163.858 357.714 cv
163.643 358.047 163.428 358.379 163.213 358.712 cv
163.094 358.897 163.378 359.052 163.503 358.881 cv
cp
f
163.31 362.712 mo
166.093 363.302 168.819 363.434 171.634 362.971 cv
171.981 362.913 171.837 362.373 171.487 362.438 cv
168.794 362.939 166.056 363.03 163.351 362.564 cv
163.255 362.547 163.212 362.691 163.31 362.712 cv
cp
f
178.849 359.203 mo
180.542 358.721 182.234 358.095 183.869 357.442 cv
184.262 357.285 184.101 356.645 183.69 356.795 cv
182.013 357.407 180.31 358.078 178.703 358.858 cv
178.509 358.953 178.646 359.261 178.849 359.203 cv
cp
f
172.034 368.668 mo
171.918 367.01 171.69 365.363 171.494 363.713 cv
171.459 363.424 171.001 363.425 171.039 363.713 cv
171.263 365.38 171.454 367.051 171.759 368.705 cv
171.788 368.859 172.045 368.825 172.034 368.668 cv
cp
f
148.528 340.344 mo
148.976 339.802 149.424 339.26 149.872 338.718 cv
149.95 338.624 149.812 338.49 149.739 338.584 cv
149.307 339.143 148.876 339.702 148.444 340.26 cv
148.528 340.344 li
cp
f
153.274 328.309 mo
151.109 331.585 148.993 334.828 147.122 338.286 cv
147.021 338.472 147.301 338.636 147.406 338.452 cv
149.329 335.061 151.22 331.62 153.304 328.327 cv
153.274 328.309 li
cp
f
151.437 332.351 mo
151.825 331.27 152.204 330.186 152.58 329.1 cv
152.653 328.888 152.314 328.795 152.242 329.007 cv
151.876 330.095 151.514 331.183 151.16 332.275 cv
151.103 332.452 151.375 332.523 151.437 332.351 cv
cp
f
135.645 351.517 mo
135.992 350.532 136.34 349.547 136.687 348.562 cv
136.745 348.397 136.479 348.323 136.424 348.49 cv
136.099 349.481 135.774 350.472 135.449 351.463 cv
135.408 351.588 135.602 351.639 135.645 351.517 cv
cp
f
137.664 346.609 mo
138.081 345.83 138.556 345.076 138.941 344.281 cv
139.042 344.073 138.739 343.889 138.627 344.098 cv
138.208 344.878 137.876 345.709 137.488 346.506 cv
137.432 346.622 137.601 346.725 137.664 346.609 cv
cp
f
139.509 342.238 mo
138.495 343.937 137.518 345.67 136.417 347.315 cv
136.596 347.39 136.775 347.466 136.954 347.541 cv
137.201 346.528 137.57 345.589 138.034 344.654 cv
138.198 344.323 137.715 344.032 137.533 344.361 cv
137.004 345.314 136.64 346.327 136.387 347.385 cv
136.314 347.694 136.778 347.926 136.924 347.612 cv
137.755 345.812 138.725 344.073 139.648 342.319 cv
139.696 342.228 139.562 342.149 139.509 342.238 cv
cp
f
112.554 335.077 mo
124.123 336.589 li
126.483 334.065 li
128.834 336.667 li
132.641 339.031 li
139.884 355.778 li
135.544 360.551 li
144.928 363.063 li
146.821 369.372 li
141.383 368.773 li
133.092 374.196 li
122.669 371.855 li
111.09 375.47 li
103.468 375.871 li
95.192 373.603 li
88.1345 368.358 li
97.039 367.96 li
113.552 356.697 li
117.669 341.496 li
112.554 335.077 li
cp
.403922 .392157 .345098 rgb
f
85.5064 327.72 mo
82.8785 340.365 li
90.7935 344.993 li
88.7468 364.346 li
88.2116 348.384 li
75.9465 339.587 li
71.4524 336.664 li
73.2409 333.752 li
72.2279 330.779 li
81.6618 325.562 li
85.5064 327.72 li
cp
f
90.507 376.094 mo
93.8522 373.101 li
87.324 368.419 li
65.2292 364.556 li
65.2292 364.556 62.7696 348.561 62.6838 349.099 cv
62.5978 349.636 48.3982 346.043 48.3982 346.043 cv
40.5809 349.424 li
44.1138 351.808 li
49.111 372.618 li
53.9528 371.298 li
54.0906 373.194 li
63.1748 373.268 li
75.658 371.736 li
90.507 376.094 li
cp
f
48.7982 329.404 mo
48.3982 346.043 li
62.6838 349.099 li
65.2292 364.556 li
87.324 368.419 li
87.324 368.419 89.2305 363.045 88.9767 362.564 cv
88.7229 362.082 88.2116 348.384 88.2116 348.384 cv
71.4524 336.664 li
73.2409 333.752 li
69.884 328.199 li
48.7982 329.404 li
cp
.560784 .54902 .478431 rgb
f
80.9885 322.532 mo
81.2382 325.108 li
85.5064 327.72 li
82.8785 340.365 li
90.9054 345.672 li
88.4651 363.695 li
88.1345 368.358 li
97.039 367.96 li
113.552 356.697 li
113.552 356.697 117.454 341.937 117.669 341.496 cv
117.884 341.055 111.472 334.958 111.388 334.449 cv
111.304 333.939 96.491 325.562 96.491 325.562 cv
93.0222 319.329 li
96.1415 316.024 li
80.9885 322.532 li
cp
.615686 .6 .52549 rgb
f
124.123 336.589 mo
126.483 334.065 li
113.35 329.415 li
108.403 326.915 li
108.403 326.915 103.119 322.377 100.21 319.541 cv
97.3005 316.706 96.1415 316.024 96.1415 316.024 cv
93.0222 319.329 li
96.491 325.562 li
111.388 334.449 li
117.669 341.496 li
113.396 334.99 li
124.123 336.589 li
cp
.756863 .737255 .639216 rgb
f
96.1415 316.024 mo
80.9885 322.532 li
81.6618 325.562 li
72.2279 330.779 li
69.884 328.199 li
48.7982 329.404 li
40.8912 320.587 li
59.1495 318.104 li
81.6261 314.751 li
83.8861 316.821 li
95.4362 314.919 li
96.1415 316.024 li
cp
f
40.8912 320.587 mo
41.7961 335.616 li
40.5809 349.424 li
48.3982 346.043 li
48.7982 329.404 li
40.8912 320.587 li
cp
f
85.5064 327.72 mo
85.2584 338.926 li
91.8986 344.288 li
96.5126 343.702 li
91.8965 345.335 li
89.708 364.886 li
95.9865 366.992 li
113.552 356.697 li
97.039 367.96 li
88.1345 368.358 li
90.4518 346.096 li
90.4518 346.096 82.7646 340.733 82.8785 340.365 cv
82.9923 339.997 85.5064 327.72 85.5064 327.72 cv
cp
f
122.676 336.253 mo
125.561 351.654 li
124.798 336.427 li
122.676 336.253 li
cp
f
144.928 363.063 mo
146.821 369.372 li
146.821 369.372 150.092 369.247 149.668 368.794 cv
149.244 368.34 148.979 359.312 148.979 359.312 cv
143.154 356.782 li
139.761 355.247 li
135.544 360.551 li
144.928 363.063 li
cp
f
40.5809 349.424 mo
44.1138 351.808 li
50.9119 348.595 li
58.917 350.592 li
62.3117 365.908 li
54.0906 373.194 li
63.1748 373.268 li
75.658 371.736 li
63.4427 366.42 li
63.4427 366.42 62.6955 357.646 62.4418 357.164 cv
62.188 356.682 62.6838 349.099 62.6838 349.099 cv
48.3982 346.043 li
40.5809 349.424 li
cp
.34902 .341176 .286275 rgb
f
88.1345 368.358 mo
76.875 371.71 li
89.9136 375.668 li
93.8522 373.101 li
88.1345 368.358 li
cp
f
82.8785 340.365 mo
88.2116 348.384 li
88.9507 361.347 li
90.4518 346.096 li
82.8785 340.365 li
cp
f
97.039 367.96 mo
105.62 375.699 li
105.62 375.699 113.233 375.317 113.687 374.894 cv
114.141 374.47 122.669 371.855 122.669 371.855 cv
133.092 374.196 li
141.383 368.773 li
135.544 360.551 li
122.895 369.365 li
104.761 366.245 li
104.761 366.245 113.722 356.246 113.552 356.697 cv
113.382 357.149 97.039 367.96 97.039 367.96 cv
cp
f
41.5684 321.474 mo
41.5684 321.474 42.0716 321.923 42.7811 322.635 cv
43.4893 323.348 44.4163 324.312 45.3112 325.303 cv
46.211 326.289 47.0827 327.3 47.7393 328.059 cv
48.3936 328.818 48.8187 329.341 48.8187 329.341 cv
48.8187 329.341 48.2765 328.94 47.5284 328.265 cv
46.7791 327.591 45.8218 326.649 44.9232 325.655 cv
44.0206 324.664 43.1758 323.624 42.5602 322.829 cv
41.9455 322.033 41.5684 321.474 41.5684 321.474 cv
cp
.898039 .886275 .847059 rgb
f
48.3676 329.199 mo
53.9055 329.042 li
55.7484 328.994 57.5894 328.906 59.427 328.791 cv
61.2657 328.701 63.101 328.562 64.9356 328.427 cv
66.7692 328.276 68.6015 328.111 70.4314 327.921 cv
70.7266 327.89 li
70.8949 328.121 li
71.5477 329.016 72.1295 329.93 72.65 330.903 cv
72.9099 331.389 73.1555 331.884 73.3615 332.407 cv
73.4707 332.664 73.5588 332.935 73.635 333.212 cv
73.6684 333.353 73.7106 333.489 73.7355 333.635 cv
73.758 333.789 73.7838 333.912 73.8014 334.091 cv
73.8215 334.298 li
73.6605 334.431 li
73.3182 334.713 72.9949 335.101 72.6967 335.496 cv
72.3981 335.892 72.1137 336.315 71.8536 336.737 cv
71.7626 336.328 li
72.6416 336.991 73.5125 337.665 74.3714 338.355 cv
75.2346 339.04 76.1011 339.72 76.9489 340.427 cv
76.0072 339.852 75.0839 339.251 74.1575 338.654 cv
73.2267 338.064 72.308 337.457 71.3972 336.838 cv
71.1698 336.684 li
71.3062 336.43 li
71.5558 335.964 71.8174 335.52 72.1085 335.08 cv
72.403 334.642 72.7075 334.212 73.1316 333.814 cv
72.9909 334.153 li
72.9183 333.816 li
72.8914 333.698 72.8451 333.579 72.8103 333.46 cv
72.7264 333.225 72.6393 332.986 72.5325 332.752 cv
72.3301 332.28 72.0835 331.818 71.8217 331.364 cv
71.2978 330.459 70.6966 329.572 70.0813 328.733 cv
70.5444 328.933 li
66.8653 329.377 63.1615 329.613 59.458 329.679 cv
57.6054 329.693 55.7533 329.664 53.9038 329.603 cv
52.0549 329.521 50.2061 329.402 48.3676 329.199 cv
cp
.403922 .392157 .345098 rgb
f
81.1235 325.903 mo
80.7353 322.851 li
82.1258 325.595 li
81.1235 325.903 li
cp
.756863 .737255 .639216 rgb
f
80.8878 322.423 mo
80.8878 322.423 84.7828 320.647 88.6779 318.871 cv
90.6254 317.983 92.573 317.095 94.0336 316.429 cv
94.764 316.096 95.3726 315.819 95.7986 315.625 cv
96.0117 315.528 96.1791 315.451 96.293 315.399 cv
96.3369 315.383 li
96.3884 315.373 li
96.479 315.365 96.5225 315.387 96.5659 315.409 cv
96.6992 315.552 li
96.7375 315.637 96.7445 315.71 96.72 315.8 cv
96.6958 315.894 96.6058 315.972 96.548 315.992 cv
96.4677 316.013 li
96.403 315.493 li
96.4257 315.489 96.2785 315.492 96.2207 315.645 cv
96.2293 315.777 li
96.3127 315.863 li
96.4493 315.888 li
96.4788 315.882 li
96.5063 315.872 li
96.5008 315.874 li
96.3852 315.923 96.2156 315.994 95.9997 316.084 cv
95.5679 316.265 94.9512 316.524 94.2109 316.835 cv
92.7307 317.456 90.7568 318.283 88.783 319.111 cv
84.8354 320.767 80.8878 322.423 80.8878 322.423 cv
cp
f
52.1068 346.41 mo
52.1068 346.41 52.1687 348.067 52.2616 350.552 cv
52.37 353.035 52.5667 356.345 52.835 359.654 cv
53.3529 366.272 54.2545 372.865 54.2545 372.865 cv
54.2545 372.865 52.8364 366.365 51.794 359.78 cv
51.264 356.49 50.8044 353.186 50.4985 350.702 cv
50.2086 348.217 50.0153 346.56 50.0153 346.56 cv
52.1068 346.41 li
cp
.34902 .341176 .286275 rgb
f
49.0086 373.212 mo
48.7795 372.741 li
50.3815 371.958 52.077 371.365 53.8173 370.974 cv
53.9327 371.487 li
52.2312 371.866 50.5752 372.447 49.0086 373.212 cv
cp
f
40.2219 349.765 mo
40.2219 349.765 40.72 349.517 41.4672 349.144 cv
42.208 348.759 43.1958 348.245 44.1836 347.73 cv
45.1728 347.214 46.1848 346.721 46.9721 346.395 cv
47.7571 346.066 48.3009 345.885 48.3009 345.885 cv
48.5854 346.894 li
48.5854 346.894 48.0548 347.004 47.2668 347.229 cv
46.4781 347.451 45.4363 347.814 44.3972 348.209 cv
43.3556 348.604 42.314 348.998 41.5327 349.294 cv
40.7462 349.577 40.2219 349.765 40.2219 349.765 cv
cp
.756863 .737255 .639216 rgb
f
43.8071 352.12 mo
43.8071 352.12 45.4248 350.867 47.1596 349.761 cv
48.8835 348.641 50.7138 347.676 50.7138 347.676 cv
51.1469 348.631 li
51.1469 348.631 49.2495 349.337 47.4146 350.219 cv
45.5729 351.084 43.8071 352.12 43.8071 352.12 cv
cp
.34902 .341176 .286275 rgb
f
49.1039 372.87 mo
48.3026 369.434 47.3773 366.029 46.5788 362.591 cv
45.7552 359.159 44.981 355.713 44.3544 352.234 cv
44.5212 352.422 li
44.3545 352.372 li
44.3074 352.358 li
44.264 352.321 li
43.1082 351.344 41.7796 350.514 40.4711 349.709 cv
40.3326 349.624 li
40.3477 349.463 li
40.573 347.078 40.7976 344.692 40.9597 342.301 cv
41.13 339.911 41.2415 337.517 41.3295 335.123 cv
41.4178 332.729 41.4543 330.332 41.4286 327.935 cv
41.4195 325.538 41.3537 323.14 41.2105 320.745 cv
41.4418 323.133 41.6022 325.53 41.6948 327.929 cv
41.771 330.33 41.785 332.732 41.7471 335.134 cv
41.6487 339.937 41.3344 344.735 40.8594 349.514 cv
40.7362 349.269 li
42.0619 350.099 43.3744 350.925 44.5847 351.962 cv
44.4945 351.911 li
44.6608 351.962 li
44.8022 352.006 li
44.8278 352.15 li
45.4411 355.617 46.1728 359.067 46.907 362.516 cv
47.6575 365.962 48.425 369.407 49.1039 372.87 cv
cp
.560784 .54902 .478431 rgb
f
54.1383 373.316 mo
54.1383 373.316 54.4711 373.189 55.088 373.074 cv
55.7023 372.963 56.5991 372.872 57.6698 372.896 cv
58.7416 372.909 59.9811 373.002 61.3006 372.98 cv
62.6141 372.964 64.0185 372.816 65.417 372.61 cv
66.819 372.428 68.2197 372.197 69.5393 372.002 cv
70.8585 371.804 72.1038 371.69 73.1717 371.625 cv
74.2402 371.551 75.1347 371.604 75.7561 371.631 cv
76.3758 371.695 76.7299 371.731 76.7299 371.731 cv
76.7299 371.731 76.3748 371.732 75.7536 371.733 cv
75.133 371.749 74.2499 371.799 73.196 371.919 cv
72.1407 372.026 70.9205 372.237 69.6095 372.452 cv
68.2982 372.667 66.9003 372.923 65.4886 373.129 cv
64.0747 373.312 62.6462 373.441 61.2962 373.434 cv
59.9512 373.435 58.715 373.245 57.658 373.19 cv
56.6007 373.119 55.7173 373.107 55.1019 373.175 cv
54.4874 373.233 54.1383 373.316 54.1383 373.316 cv
cp
.34902 .341176 .286275 rgb
f
94.2564 373.831 mo
90.6232 376.29 li
90.4418 376.413 li
90.2497 376.364 li
80.5052 373.889 71.0589 370.314 62.1467 365.736 cv
71.1941 370.041 80.7136 373.312 90.4614 375.474 cv
90.0883 375.548 li
93.6434 372.98 li
94.2564 373.831 li
cp
f
139.791 355.438 mo
141.428 355.811 142.998 356.438 144.552 357.069 cv
146.111 357.7 147.619 358.431 149.13 359.174 cv
149.303 359.258 li
149.314 359.468 li
149.397 360.978 149.534 362.483 149.692 363.984 cv
149.84 365.487 150.03 366.985 150.262 368.476 cv
150.319 368.842 li
149.967 368.992 li
147.364 370.093 li
146.92 369.194 li
147.149 369.064 li
147.348 370.007 li
145.378 369.854 143.411 369.664 141.445 369.464 cv
140.046 369.322 li
141.212 368.553 li
141.663 368.256 li
142.236 369.063 li
140.763 370.13 139.235 371.055 137.696 371.966 cv
136.162 372.885 134.581 373.712 133 374.546 cv
132.891 374.603 li
132.784 374.586 li
131.085 374.311 129.4 373.937 127.776 373.378 cv
126.152 372.826 124.567 372.167 123.068 371.349 cv
124.649 371.991 126.256 372.55 127.899 372.964 cv
129.542 373.371 131.199 373.711 132.877 373.887 cv
132.662 373.927 li
134.198 373.04 135.709 372.1 137.23 371.188 cv
138.74 370.263 140.247 369.315 141.642 368.271 cv
142.214 369.078 li
141.768 369.382 li
141.536 368.471 li
143.505 368.629 145.474 368.798 147.439 369.003 cv
149.058 369.172 li
147.638 369.946 li
147.407 370.072 li
146.963 369.172 li
149.607 368.101 li
149.312 368.616 li
149.1 367.104 148.931 365.586 148.805 364.065 cv
148.689 362.542 148.64 361.016 148.621 359.491 cv
148.804 359.786 li
147.353 358.972 145.861 358.214 144.376 357.453 cv
142.883 356.704 141.373 355.992 139.791 355.438 cv
cp
.403922 .392157 .345098 rgb
f
112.938 329.58 mo
111.238 328.739 109.584 327.792 107.996 326.743 cv
106.412 325.689 104.86 324.574 103.414 323.33 cv
101.96 322.094 100.571 320.78 99.2665 319.383 cv
97.9552 317.996 96.782 316.483 95.2175 315.611 cv
95.495 315.666 li
83.9674 317.332 li
83.6974 317.371 li
83.5073 317.161 li
81.5078 314.95 li
81.9031 315.095 li
81.6028 315.118 li
81.6397 315.114 li
78.2766 315.626 74.9058 316.083 71.5391 316.57 cv
68.1702 317.042 64.8065 317.549 61.4333 317.992 cv
51.3152 319.334 li
47.9366 319.743 44.5631 320.186 41.179 320.562 cv
44.5262 319.944 47.884 319.394 51.2368 318.81 cv
61.3122 317.172 li
64.6703 316.623 68.0377 316.136 71.4001 315.615 cv
74.7647 315.109 78.125 314.573 81.4932 314.092 cv
81.5131 314.089 li
81.5306 314.088 li
81.8312 314.068 li
82.0833 314.052 li
82.2268 314.214 li
84.2712 316.515 li
83.8114 316.344 li
95.3812 314.786 li
95.5322 314.766 li
95.6591 314.841 li
97.417 315.888 98.5564 317.511 99.8046 318.893 cv
101.049 320.307 102.382 321.643 103.783 322.907 cv
105.185 324.169 106.645 325.371 108.174 326.485 cv
109.705 327.597 111.299 328.621 112.938 329.58 cv
cp
.615686 .6 .52549 rgb
f
126.516 333.961 mo
124.266 333.344 122.037 332.669 119.826 331.938 cv
118.722 331.568 117.609 331.225 116.513 330.833 cv
113.213 329.693 li
113.483 329.57 li
112.741 331.216 112.002 332.863 111.194 334.482 cv
111.778 332.77 112.431 331.086 113.08 329.401 cv
113.152 329.214 li
113.351 329.278 li
116.676 330.351 li
117.785 330.708 118.877 331.113 119.977 331.492 cv
122.176 332.258 124.356 333.08 126.516 333.961 cv
cp
.756863 .737255 .639216 rgb
f
126.702 334.292 mo
127.116 334.739 127.545 335.163 127.994 335.564 cv
128.443 335.966 128.924 336.328 129.407 336.679 cv
130.377 337.379 131.428 337.958 132.528 338.398 cv
132.64 338.443 li
132.701 338.574 li
133.974 341.331 135.187 344.112 136.361 346.911 cv
136.951 348.31 137.508 349.723 138.064 351.138 cv
138.63 352.548 139.154 353.978 139.662 355.417 cv
138.959 354.07 138.271 352.714 137.626 351.338 cv
136.971 349.967 136.317 348.594 135.695 347.207 cv
134.447 344.434 133.238 341.643 132.089 338.829 cv
132.261 339.005 li
131.143 338.468 130.098 337.794 129.151 337.009 cv
128.216 336.211 127.378 335.303 126.702 334.292 cv
cp
f
126.47 333.93 mo
126.132 334.433 125.851 334.959 125.591 335.499 cv
125.322 336.032 125.075 336.581 124.852 337.13 cv
124.87 337.029 li
125.014 338.59 125.112 340.154 125.182 341.719 cv
125.243 343.285 125.271 344.853 125.222 346.426 cv
124.984 344.871 124.822 343.311 124.694 341.749 cv
124.575 340.186 124.483 338.622 124.438 337.055 cv
124.436 336.992 li
124.457 336.953 li
125.02 335.877 125.614 334.799 126.47 333.93 cv
cp
f
83.2544 340.247 mo
83.2266 338.071 83.4306 335.891 83.8035 333.74 cv
84.1509 331.582 84.7193 329.461 85.4255 327.39 cv
85.6911 328.026 li
85.5317 327.952 li
85.4931 327.934 li
85.4508 327.903 li
84.3159 327.101 83.0166 326.517 81.6453 326.252 cv
81.7274 326.26 li
81.439 326.249 li
81.6674 326.197 li
80.1418 326.941 78.6257 327.73 77.1176 328.54 cv
76.366 328.95 75.6198 329.37 74.8577 329.767 cv
74.0997 330.171 73.3497 330.59 72.5818 330.981 cv
73.2573 330.445 73.9554 329.944 74.6528 329.439 cv
75.3462 328.928 76.0624 328.451 76.7835 327.981 cv
78.2216 327.034 79.6885 326.123 81.2261 325.32 cv
81.3252 325.268 li
81.455 325.268 li
81.7435 325.266 li
81.7786 325.266 li
81.8261 325.274 li
83.3441 325.544 84.8118 326.145 86.0576 327.065 cv
85.9768 327.017 li
86.1351 327.094 li
86.5551 327.297 li
86.4007 327.73 li
85.6804 329.751 85.0873 331.813 84.546 333.895 cv
84.2781 334.938 84.0614 335.993 83.846 337.051 cv
83.6154 338.108 83.4467 339.174 83.2544 340.247 cv
cp
f
122.493 372.011 mo
121.038 372.573 119.569 373.097 118.093 373.605 cv
116.618 374.121 115.12 374.569 113.604 374.966 cv
112.088 375.363 110.553 375.702 108.997 375.952 cv
108.214 376.064 107.44 376.153 106.64 376.216 cv
105.873 376.278 105.037 376.282 104.255 376.25 cv
102.665 376.187 101.091 375.955 99.5439 375.627 cv
98.7699 375.463 98.004 375.265 97.249 375.033 cv
96.4902 374.8 95.7502 374.567 94.9998 374.265 cv
93.466 373.641 92.158 372.67 90.9652 371.64 cv
89.7653 370.613 88.6657 369.524 87.4728 368.569 cv
87.2669 368.404 li
87.3279 368.168 li
87.811 366.29 88.2475 364.391 88.6521 362.491 cv
89.0748 360.591 89.4406 358.682 89.6603 356.744 cv
89.6663 358.699 89.3985 360.644 89.1359 362.578 cv
88.8439 364.512 88.4791 366.428 88.0861 368.347 cv
87.9414 367.946 li
89.2394 368.868 90.3872 369.946 91.5619 370.936 cv
92.7345 371.921 93.986 372.804 95.3565 373.336 cv
96.7789 373.87 98.2841 374.258 99.768 374.623 cv
101.262 374.963 102.779 375.211 104.302 375.294 cv
105.076 375.335 105.8 375.347 106.588 375.296 cv
107.341 375.249 108.117 375.173 108.878 375.075 cv
110.409 374.902 111.934 374.64 113.45 374.318 cv
114.966 373.999 116.469 373.603 117.978 373.223 cv
122.493 372.011 li
cp
.34902 .341176 .286275 rgb
f
62.1208 366.021 mo
62.064 364.621 62.0387 363.221 62.0081 361.821 cv
61.9704 360.42 61.952 359.021 61.9488 357.621 cv
61.933 354.822 61.8931 352.022 61.9374 349.225 cv
62.0857 349.578 li
61.8654 349.376 li
62.1017 349.494 li
55.1217 348.167 li
48.162 346.734 li
47.7703 346.654 li
47.7867 346.26 li
47.8466 344.82 47.8818 343.38 47.9619 341.94 cv
48.1927 337.622 li
48.2662 336.183 48.345 334.744 48.452 333.305 cv
48.5513 331.867 48.643 330.428 48.769 328.99 cv
48.8096 330.433 48.8159 331.875 48.8297 333.317 cv
48.8513 334.759 48.8448 336.2 48.8327 337.641 cv
48.8073 341.965 li
48.8018 343.407 48.7517 344.847 48.726 346.288 cv
48.3509 345.814 li
55.318 347.14 li
62.2648 348.573 li
62.4078 348.603 li
62.5015 348.691 li
62.7187 348.896 li
62.8709 349.04 li
62.8671 349.249 li
62.8176 352.047 62.6839 354.842 62.5743 357.637 cv
62.5241 359.035 62.4588 360.433 62.374 361.83 cv
62.2967 363.227 62.2244 364.625 62.1208 366.021 cv
cp
f
76.5944 319.9 mo
84.3467 316.503 li
84.5422 316.989 li
76.5944 319.9 li
cp
.615686 .6 .52549 rgb
f
142.128 368.891 mo
140.865 367.715 139.694 366.445 138.572 365.134 cv
137.475 363.803 136.399 362.45 135.432 361.019 cv
135.333 360.871 li
135.438 360.73 li
136.811 358.891 138.399 357.192 140.159 355.72 cv
138.614 357.422 137.172 359.179 135.824 361.026 cv
135.83 360.738 li
136.848 362.118 137.851 363.51 138.92 364.852 cv
139.965 366.213 141.051 367.544 142.128 368.891 cv
cp
.756863 .737255 .639216 rgb
f
147.279 369.871 mo
146.533 368.94 145.964 367.871 145.528 366.751 cv
145.108 365.625 144.836 364.437 144.748 363.234 cv
144.738 363.102 li
144.836 363.018 li
146.231 361.816 147.651 360.643 149.023 359.399 cv
148.476 360.151 147.841 360.834 147.19 361.494 cv
146.544 362.16 145.868 362.793 145.171 363.406 cv
145.258 363.191 li
145.371 364.348 145.595 365.495 145.941 366.61 cv
146.104 367.171 146.302 367.723 146.533 368.263 cv
146.753 368.809 147.009 369.338 147.279 369.871 cv
cp
.615686 .6 .52549 rgb
f
91.5662 329.617 mo
92.8927 328.075 94.9496 326.874 96.7646 325.99 cv
97.3092 325.724 96.9746 324.833 96.4256 325.103 cv
95.4025 325.606 94.45 326.191 93.6054 326.964 cv
92.7726 327.725 92.1764 328.669 91.5035 329.565 cv
91.5662 329.617 li
cp
.756863 .737255 .639216 rgb
f
110.594 336.872 mo
110.566 335.788 110.841 334.948 111.343 334.002 cv
111.522 333.665 110.946 333.401 110.809 333.755 cv
110.434 334.722 110.334 335.859 110.417 336.889 cv
110.427 337.004 110.597 336.985 110.594 336.872 cv
cp
f
95.7742 342.666 mo
96.107 343.925 96.633 345.065 97.2984 346.181 cv
97.4125 346.372 97.6888 346.169 97.5782 345.979 cv
96.951 344.899 96.4201 343.754 95.9259 342.608 cv
95.8838 342.51 95.7478 342.567 95.7742 342.666 cv
cp
f
96.1103 362.567 mo
95.9375 364.156 95.5243 365.837 95.569 367.432 cv
95.5773 367.73 96.0406 367.739 96.0866 367.452 cv
96.3384 365.881 96.1449 364.162 96.1807 362.57 cv
96.1103 362.567 li
cp
f
109.503 352.436 mo
110.578 353.933 111.567 355.429 112.501 357.018 cv
112.735 357.418 113.38 356.974 113.093 356.59 cv
112.008 355.139 110.836 353.696 109.619 352.352 cv
109.503 352.436 li
cp
f
68.3685 341.44 mo
68.4327 341.274 68.4968 341.107 68.561 340.941 cv
68.5149 340.919 li
68.4507 341.086 68.3866 341.252 68.3224 341.419 cv
68.3685 341.44 li
cp
f
65.3304 345.503 mo
64.1985 346.424 63.243 347.402 62.4072 348.607 cv
62.2668 348.81 62.5618 349.056 62.7048 348.852 cv
63.5059 347.711 64.4324 346.586 65.4474 345.628 cv
65.3304 345.503 li
cp
f
62.5029 348.722 mo
63.3923 353.861 64.4975 358.958 65.3563 364.105 cv
65.4153 364.458 65.9756 364.404 65.9119 364.051 cv
64.9838 358.911 64.077 353.718 62.7526 348.663 cv
62.7159 348.523 62.4781 348.578 62.5029 348.722 cv
cp
f
80.87 366.827 mo
75.7112 365.81 70.5061 364.896 65.3066 364.11 cv
64.8449 364.04 64.7198 364.753 65.1819 364.825 cv
70.3826 365.633 75.6266 366.321 80.8578 366.897 cv
80.87 366.827 li
cp
f
51.2003 344.157 mo
50.0088 345.02 48.6124 345.577 47.2916 346.219 cv
46.8001 346.458 47.1084 347.263 47.5961 347.015 cv
49.0086 346.298 50.0859 345.291 51.2775 344.264 cv
51.2003 344.157 li
cp
f
70.9477 335.885 mo
71.3775 337.459 71.7446 339.045 72.197 340.614 cv
72.2306 340.731 72.4033 340.663 72.3723 340.547 cv
71.9494 338.975 71.4447 337.431 70.9999 335.866 cv
70.9477 335.885 li
cp
f
64.3486 349.989 mo
64.6568 349.424 64.9681 348.859 65.2554 348.283 cv
65.3255 348.142 65.1041 348.041 65.0343 348.181 cv
64.7475 348.756 64.4851 349.344 64.2197 349.929 cv
64.3486 349.989 li
cp
f
67.7768 344.887 mo
67.839 344.72 67.9011 344.552 67.9632 344.384 cv
67.8988 344.355 li
67.832 344.52 67.7653 344.685 67.6985 344.851 cv
67.7768 344.887 li
cp
f
69.6777 342.041 mo
69.7375 341.796 69.7973 341.55 69.857 341.305 cv
69.8864 341.184 69.6947 341.151 69.6671 341.272 cv
69.6106 341.518 69.5542 341.764 69.4977 342.01 cv
69.4714 342.125 69.6501 342.155 69.6777 342.041 cv
cp
f
70.8865 339.544 mo
71.224 338.797 71.5353 338.03 71.9235 337.307 cv
72.0116 337.144 71.7239 337.017 71.6655 337.188 cv
71.4012 337.965 71.0513 338.717 70.7345 339.474 cv
70.6929 339.573 70.842 339.643 70.8865 339.544 cv
cp
f
64.6903 344.119 mo
67.6056 340.849 70.3807 337.585 72.9013 333.994 cv
73.1751 333.603 72.5988 333.232 72.343 333.643 cv
70.0761 337.282 67.5387 340.908 64.6825 344.112 cv
64.6903 344.119 li
cp
f
70.1335 329.022 mo
70.7718 330.586 71.4518 332.133 72.1048 333.692 cv
72.2597 334.062 72.8564 333.826 72.6831 333.471 cv
71.9398 331.947 71.2227 330.411 70.4654 328.895 cv
70.3654 328.695 70.0454 328.806 70.1335 329.022 cv
cp
f
48.4195 329.463 mo
55.6042 328.838 62.8288 329.128 70.0248 329.425 cv
70.4343 329.442 70.4615 328.86 70.0464 328.862 cv
62.8665 328.9 55.5318 328.277 48.4083 329.346 cv
48.4195 329.463 li
cp
f
84.6444 325.327 mo
84.8768 325.23 85.1091 325.133 85.343 325.039 cv
85.523 324.967 85.4007 324.676 85.2379 324.764 cv
85.0146 324.884 84.7897 325.001 84.5646 325.118 cv
84.4407 325.183 84.5084 325.384 84.6444 325.327 cv
cp
f
87.1936 323.82 mo
87.4189 323.567 li
87.5406 323.43 87.3108 323.24 87.1996 323.386 cv
86.9939 323.656 li
86.8927 323.788 87.0828 323.945 87.1936 323.82 cv
cp
f
89.1545 322.381 mo
91.0411 321.006 93.029 319.801 94.923 318.442 cv
95.332 318.149 94.864 317.5 94.4657 317.809 cv
92.6199 319.237 90.8948 320.8 89.0358 322.217 cv
88.9322 322.296 89.0485 322.459 89.1545 322.381 cv
cp
f
72.2592 361.15 mo
74.024 359.518 75.7729 357.872 77.5072 356.207 cv
77.6343 356.085 77.4217 355.912 77.2958 356.033 cv
75.5695 357.69 73.8612 359.362 72.1662 361.051 cv
72.2592 361.15 li
cp
f
74.1063 360.881 mo
75.1438 359.687 76.1764 358.492 77.1583 357.251 cv
77.2577 357.125 77.0709 356.971 76.9664 357.093 cv
75.9356 358.294 74.9593 359.535 73.9849 360.781 cv
74.1063 360.881 li
cp
f
79.5968 355.069 mo
79.7568 354.631 80.0192 354.334 80.4459 354.14 cv
80.6101 354.065 80.5047 353.798 80.3462 353.879 cv
79.8726 354.12 79.5606 354.467 79.3988 354.978 cv
79.3574 355.108 79.5479 355.203 79.5968 355.069 cv
cp
f
83.3172 351.582 mo
83.5432 351.254 83.7689 350.926 83.9874 350.593 cv
84.0926 350.433 83.8595 350.241 83.7564 350.403 cv
83.5352 350.749 83.3217 351.1 83.1084 351.451 cv
83.0357 351.571 83.2372 351.698 83.3172 351.582 cv
cp
f
81.4224 356.195 mo
83.8341 353.964 86.3616 351.532 88.2824 348.86 cv
88.5073 348.547 88.0606 348.169 87.8165 348.476 cv
85.7131 351.123 83.7577 353.718 81.3329 356.1 cv
81.4224 356.195 li
cp
f
99.4719 359.628 mo
100.237 359.025 100.994 358.418 101.744 357.797 cv
101.885 357.68 101.714 357.446 101.578 357.566 cv
100.845 358.215 100.125 358.874 99.4095 359.541 cv
99.4719 359.628 li
cp
f
103.547 356.17 mo
103.696 356 103.841 355.828 103.984 355.652 cv
104.091 355.52 103.889 355.354 103.78 355.485 cv
103.635 355.658 103.494 355.833 103.355 356.012 cv
103.257 356.139 103.442 356.291 103.547 356.17 cv
cp
f
105.478 354.488 mo
107.093 353.147 108.717 351.805 110.305 350.432 cv
110.58 350.194 110.239 349.731 109.976 349.975 cv
108.42 351.417 106.892 352.895 105.364 354.367 cv
105.478 354.488 li
cp
f
108.892 337.544 mo
109.532 337.066 110.233 336.748 111.006 336.556 cv
111.245 336.496 111.11 336.108 110.867 336.191 cv
110.081 336.459 109.407 336.88 108.803 337.448 cv
108.892 337.544 li
cp
f
40.9896 321.442 mo
42.7103 324.599 45.8795 327.638 48.6786 329.878 cv
49.1753 330.275 49.7418 329.558 49.2981 329.126 cv
47.8254 327.691 46.3037 326.326 44.9355 324.785 cv
43.7911 323.496 42.8042 322.103 41.5769 320.891 cv
41.219 320.538 40.7895 321.075 40.9896 321.442 cv
cp
.560784 .54902 .478431 rgb
f
17.6477 377.687 mo
17.9204 377.196 27.7703 371.769 27.7703 371.769 cv
34.311 368.654 li
39.4501 365.228 li
39.4501 365.228 47.8596 358.999 47.8596 358.532 cv
47.8596 358.064 48.6382 350.745 48.6382 350.745 cv
61.7197 345.917 li
62.4983 344.516 li
71.8422 352.147 li
76.9814 356.04 li
67.7932 362.736 li
55.179 373.637 li
22.6311 377.687 li
22.6311 377.687 16.8691 379.088 17.6477 377.687 cv
cp
.403922 .392157 .345098 rgb
f
23.1085 348.578 mo
31.2042 354.794 li
48.6382 350.745 li
48.1184 358.697 li
39.4501 365.228 li
39.4501 365.228 27.8792 372.287 27.4455 372.287 cv
27.0118 372.287 17.6477 377.687 17.6477 377.687 cv
15.5911 375.901 li
13.5672 373.443 li
13.5672 373.443 19.2053 358.697 19.2053 358.264 cv
19.2053 357.83 23.1085 348.578 23.1085 348.578 cv
cp
.615686 .6 .52549 rgb
f
31.2042 354.794 mo
31.5433 363.902 li
37.1886 364.987 li
23.2925 373.889 li
32.4118 369.981 li
38.0571 366.29 li
47.6106 367.81 li
39.4501 365.228 li
48.1184 358.697 li
52.3873 359.342 li
48.0449 356.736 li
48.6382 350.745 li
48.6382 350.745 38.4914 353.045 37.6228 353.045 cv
36.7543 353.045 31.2042 354.794 31.2042 354.794 cv
cp
.705882 .690196 .6 rgb
f
23.1085 348.578 mo
31.2042 354.794 li
59.7696 346.966 li
62.4983 344.516 li
23.1085 348.578 li
cp
f
59.7696 346.966 mo
71.7115 355.434 li
60.6381 358.039 li
76.9814 356.04 li
62.4983 344.516 li
59.7696 346.966 li
cp
.615686 .6 .52549 rgb
f
52.3873 370.198 mo
54.7757 362.816 li
76.9814 356.04 li
55.8613 373.238 li
17.6477 377.687 li
49.999 368.895 li
52.3873 370.198 li
cp
.34902 .341176 .286275 rgb
f
22.7999 348.548 mo
22.7999 348.548 23.3836 348.85 24.2334 349.359 cv
25.0847 349.864 26.1869 350.595 27.265 351.356 cv
28.3399 352.111 29.4149 352.867 30.2211 353.434 cv
31.0365 353.973 31.58 354.333 31.58 354.333 cv
30.9512 355.214 li
30.9512 355.214 30.438 354.793 29.668 354.16 cv
28.9216 353.512 27.9266 352.647 26.9315 351.782 cv
25.9421 350.919 24.9301 350.086 24.139 349.499 cv
23.3514 348.91 22.7999 348.548 22.7999 348.548 cv
cp
.756863 .737255 .639216 rgb
f
62.4557 344.396 mo
52.5602 345.724 li
42.6481 346.927 li
36.0315 347.655 29.407 348.342 22.7617 348.786 cv
22.9815 348.616 li
21.5332 352.845 19.8898 356.998 18.2385 361.142 cv
16.6092 365.294 14.9525 369.436 13.5527 373.675 cv
14.8187 369.395 16.3247 365.186 17.9048 361.014 cv
19.463 356.832 21.0816 352.675 22.5053 348.454 cv
22.5581 348.297 li
22.7255 348.284 li
29.356 347.767 35.9817 347.167 42.5984 346.467 cv
62.4557 344.396 li
cp
f
76.7757 356.352 mo
75.811 356.952 74.8624 357.577 73.9418 358.239 cv
73.0237 358.905 72.1086 359.577 71.2191 360.281 cv
69.4309 361.678 67.6658 363.104 65.937 364.574 cv
62.4794 367.512 59.0806 370.526 55.7597 373.614 cv
55.7063 373.664 li
55.6394 373.677 li
52.472 374.3 49.298 374.705 46.1167 375.109 cv
36.5716 376.25 li
27.0142 377.269 li
17.4482 378.205 li
23.8008 377.362 30.1612 376.589 36.5176 375.793 cv
46.0505 374.595 li
50.8074 373.944 li
52.3883 373.712 53.9782 373.495 55.5331 373.181 cv
55.4132 373.244 li
58.7625 370.165 62.1721 367.158 65.7046 364.294 cv
67.4689 362.861 69.2431 361.438 71.0878 360.107 cv
72.0008 359.43 72.9392 358.787 73.8803 358.149 cv
74.8252 357.515 75.7923 356.921 76.7757 356.352 cv
cp
.403922 .392157 .345098 rgb
f
39.3009 364.963 mo
37.9572 365.224 36.5631 365.191 35.1995 365.021 cv
33.8317 364.854 32.483 364.535 31.175 364.096 cv
31.3539 363.493 li
31.4379 363.511 li
31.0475 363.819 li
30.7633 359.355 li
30.6575 357.868 30.6057 356.381 30.5303 354.894 cv
30.5093 354.481 li
30.9166 354.392 li
34.8185 353.536 li
38.7032 352.609 li
41.2952 352 43.8753 351.338 46.4411 350.624 cv
49.0005 349.889 51.578 349.207 54.1244 348.416 cv
57.95 347.242 li
61.7705 346.034 li
60.5487 346.577 59.3117 347.084 58.0705 347.581 cv
56.8292 348.079 55.5817 348.562 54.3209 349.008 cv
50.5302 350.325 li
49.2632 350.756 47.9867 351.158 46.7021 351.533 cv
44.1357 352.292 41.5533 352.999 38.9571 353.653 cv
36.3548 354.281 33.7334 354.828 31.1058 355.337 cv
31.492 354.835 li
31.5344 356.333 31.6006 357.83 31.6125 359.329 cv
31.6817 363.819 li
31.688 364.232 li
31.2913 364.128 li
31.2081 364.106 li
31.387 363.503 li
33.8985 364.441 36.5659 365.164 39.3009 364.963 cv
cp
.756863 .737255 .639216 rgb
f
39.4004 365.22 mo
37.725 366.507 35.9737 367.706 34.1495 368.78 cv
32.3368 369.876 30.4613 370.862 28.5667 371.803 cv
26.6773 372.745 24.8146 373.716 22.9911 374.768 cv
21.1743 375.829 19.406 376.972 17.6715 378.169 cv
17.5492 378.254 li
17.4499 378.155 li
16.7286 377.439 16.0239 376.713 15.3692 375.937 cv
14.7143 375.166 14.0729 374.373 13.5592 373.501 cv
14.1301 374.336 14.8183 375.077 15.5202 375.799 cv
16.2297 376.514 16.9469 377.224 17.6883 377.901 cv
17.467 377.887 li
20.8375 375.324 24.5174 373.152 28.3453 371.352 cv
30.2423 370.432 32.1185 369.473 33.972 368.47 cv
35.8134 367.447 37.6427 366.394 39.4004 365.22 cv
cp
f
55.5017 373.722 mo
54.2098 372.518 52.9613 371.236 51.7921 369.91 cv
52.198 369.553 li
53.3556 370.864 54.5915 372.134 55.8718 373.327 cv
55.5017 373.722 li
cp
f
55.6641 359.548 mo
57.1755 358.548 59.0193 358.273 60.7516 357.91 cv
62.5107 357.577 64.2743 357.275 66.0434 356.999 cv
69.5856 356.479 73.1463 356.073 76.7188 355.821 cv
76.5754 356.291 li
74.1728 354.37 71.762 352.463 69.4174 350.471 cv
67.0607 348.497 64.7379 346.476 62.5233 344.341 cv
63.6835 345.35 64.8761 346.319 66.0741 347.281 cv
69.6668 350.167 li
76.9004 355.876 li
77.4259 356.291 li
76.7569 356.347 li
74.9782 356.494 73.1984 356.627 71.423 356.811 cv
69.6467 356.989 67.8752 357.207 66.104 357.431 cv
64.3326 357.654 62.5635 357.904 60.8002 358.184 cv
59.0459 358.467 57.2244 358.63 55.6641 359.548 cv
cp
f
39.3079 365.083 mo
39.525 364.846 39.9025 364.947 40.1622 365.05 cv
40.4322 365.167 40.6964 365.28 40.964 365.382 cv
41.501 365.589 42.0502 365.759 42.5984 365.931 cv
45.928 366.914 li
48.1529 367.62 50.3331 368.478 52.4304 369.509 cv
51.7469 370.261 li
51.6252 370.056 li
51.4994 369.844 li
51.5764 369.616 li
52.161 367.885 52.7893 366.168 53.4407 364.459 cv
54.0951 362.751 54.7901 361.057 55.544 359.383 cv
55.1425 361.175 54.6823 362.947 54.1813 364.706 cv
53.6774 366.464 53.1504 368.214 52.5797 369.95 cv
52.5308 369.51 li
52.6556 369.713 li
53.5775 371.214 li
51.972 370.466 li
49.8897 369.496 47.7808 368.585 45.6325 367.759 cv
44.5627 367.338 43.4664 366.943 42.397 366.463 cv
41.8622 366.224 41.3403 365.951 40.8303 365.663 cv
40.574 365.517 40.3247 365.362 40.0826 365.208 cv
39.8553 365.071 39.5637 364.905 39.3079 365.083 cv
cp
f
25.4899 365.945 mo
27.345 365.338 29.2852 365.023 31.1487 364.413 cv
31.6338 364.254 31.4223 363.48 30.9374 363.646 cv
29.0713 364.284 27.3178 365.204 25.4607 365.839 cv
25.4899 365.945 li
cp
f
26.7094 357.148 mo
27.7544 356.094 29.0639 355.356 30.4182 354.772 cv
30.779 354.617 30.4605 354.025 30.1023 354.232 cv
28.7804 354.995 27.705 355.998 26.6586 357.097 cv
26.7094 357.148 li
cp
f
25.5738 355.562 mo
26.1489 356.966 26.8471 358.313 27.4164 359.719 cv
27.4727 359.858 27.7013 359.798 27.6447 359.656 cv
27.0785 358.234 26.4967 356.812 25.6511 355.53 cv
25.5738 355.562 li
cp
f
27.3154 362.151 mo
26.3409 363.078 25.4717 364.216 25.0356 365.501 cv
24.9913 365.632 25.1829 365.703 25.252 365.592 cv
25.9595 364.461 26.6188 363.341 27.4739 362.309 cv
27.5646 362.2 27.4218 362.049 27.3154 362.151 cv
cp
f
24.6647 366.293 mo
23.0014 368.647 21.3359 370.998 19.7323 373.394 cv
19.6032 373.587 19.9136 373.766 20.0427 373.575 cv
21.6573 371.193 23.2062 368.77 24.7597 366.348 cv
24.6647 366.293 li
cp
f
15.4922 375.103 mo
16.1505 375.954 16.7983 376.83 17.4866 377.655 cv
17.7338 377.952 18.2569 378.159 18.4114 377.672 cv
18.4992 377.394 18.0846 377.293 17.9832 377.553 cv
17.9696 377.589 16.9138 376.495 16.8033 376.368 cv
16.4044 375.91 15.9863 375.468 15.5729 375.022 cv
15.4922 375.103 li
cp
f
15.0565 373.113 mo
16.2309 374.687 17.1133 376.416 18.1567 378.073 cv
18.3998 378.459 19.0169 378.101 18.7701 377.715 cv
17.7106 376.054 16.3449 374.599 15.0964 373.082 cv
15.0565 373.113 li
cp
f
29.2975 369.519 mo
29.4972 369.319 li
29.4434 369.266 li
29.2437 369.465 li
29.2975 369.519 li
cp
f
26.6344 369.489 mo
27.9609 369.827 29.3018 370.091 30.6269 370.439 cv
30.8405 370.495 30.9322 370.16 30.718 370.109 cv
29.383 369.786 28.0223 369.475 26.654 369.343 cv
26.6344 369.489 li
cp
f
19.9343 362.953 mo
21.6751 361.365 23.4882 359.859 25.2016 358.239 cv
25.3169 358.13 25.145 357.961 25.0281 358.066 cv
23.276 359.639 21.6284 361.321 19.9044 362.923 cv
19.9343 362.953 li
cp
f
21.137 361.166 mo
22.4835 359.433 23.9907 357.876 25.7352 356.542 cv
27.0515 355.534 28.5318 354.749 29.4691 353.342 cv
29.7212 352.964 29.0554 352.585 28.8666 352.99 cv
28.0388 354.766 26.1211 355.748 24.7147 357.031 cv
23.3593 358.268 22.1442 359.628 21.0506 361.099 cv
21.137 361.166 li
cp
f
122.071 240.856 mo
139.79 191.139 li
151.426 186.378 li
128.683 235.303 li
122.071 240.856 li
.501961 .541176 .678431 rgb
f
86.3699 169.718 mo
94.5681 207.27 li
96.6837 205.419 li
103.295 208.593 li
104.617 156.231 li
93.5103 165.751 li
86.3699 169.718 li
f
78.9652 187.172 mo
81.6098 196.163 li
83.9899 210.444 li
86.6344 217.32 li
78.9652 225.782 li
86.3699 241.12 li
82.1387 241.914 li
66.2715 208.857 li
78.9652 187.172 li
f
46.9662 219.964 mo
60.7179 236.36 li
66.007 232.658 li
55.4288 221.551 li
49.6108 216.262 li
46.9662 219.964 li
f
102.502 230.013 mo
102.237 247.996 li
108.584 244.294 li
114.667 242.443 li
122.336 220.757 li
102.502 230.013 li
f
86.3699 169.718 mo
71.5606 166.544 li
63.6269 166.544 li
69.9738 185.056 li
78.9652 187.172 li
85.841 217.055 li
94.5681 207.27 li
89.2789 180.825 li
86.3699 169.718 li
.533333 .662745 .831373 rgb
f
47.2308 213.353 mo
60.9823 227.633 li
72.8828 241.12 li
82.1387 241.914 li
66.2715 208.857 li
47.2308 213.353 li
f
28.9834 217.055 mo
46.9662 219.964 li
60.7179 236.36 li
47.2308 233.98 li
28.9834 217.055 li
f
102.502 229.22 mo
102.237 247.996 li
86.3699 241.12 li
78.9652 225.782 li
102.502 229.22 li
f
120.749 176.858 mo
115.46 216.262 li
122.336 220.757 li
116.253 238.74 li
122.071 240.856 li
139.79 191.139 li
134.765 189.552 li
126.567 180.825 li
120.749 176.858 li
f
73.9406 142.743 mo
77.114 150.413 li
82.6676 159.933 li
86.3699 169.718 li
99.0638 161.52 li
104.617 156.231 li
90.8657 149.09 li
90.8657 149.09 74.9985 141.421 73.9406 142.743 cv
.701961 .784314 .890196 rgb
f
142.699 166.015 mo
142.17 180.296 li
139.79 191.139 li
151.426 186.378 li
142.699 166.015 li
f
96.6837 206.477 mo
101.179 219.964 li
102.502 230.013 li
122.336 220.757 li
112.022 213.882 li
112.022 213.882 96.4193 203.832 96.6837 206.477 cv
f
50.1398 181.883 mo
66.2715 208.857 li
78.9652 187.172 li
50.1398 181.883 li
f
27.3966 198.014 mo
37.4459 207.799 li
46.9662 219.964 li
49.6108 216.262 li
47.2308 213.353 li
49.0819 200.13 li
49.0819 200.13 28.4544 197.221 27.3966 198.014 cv
f
73.9406 142.743 mo
63.6269 166.544 li
86.3699 169.718 li
82.4031 158.611 li
73.9406 142.743 li
.85098 .882353 .92549 rgb
f
120.749 176.858 mo
128.418 182.412 li
139.79 191.139 li
139.79 191.139 142.434 181.618 142.17 180.296 cv
141.905 178.974 142.699 166.015 142.699 166.015 cv
120.749 176.858 li
f
96.6837 206.477 mo
100.386 217.055 li
102.502 230.013 li
92.7169 227.104 li
78.9652 225.782 li
96.6837 206.477 li
f
50.1398 181.883 mo
65.4781 208.857 li
53.3132 212.295 li
47.2308 213.353 li
49.0819 197.221 li
50.1398 181.883 li
f
27.3966 198.014 mo
37.4459 207.799 li
46.9662 219.964 li
37.4459 217.848 li
28.9834 217.055 li
27.3966 198.014 li
f
75.5424 186.032 mo
69.9738 185.056 li
63.6269 166.544 li
71.7934 167.684 li
75.5424 186.032 li
.929412 .960784 .988235 rgb
f
71.7934 167.684 mo
63.6269 166.544 li
73.9406 142.743 li
71.5606 166.544 li
71.7934 167.684 li
.976471 .984314 .996078 rgb
f
120.187 218.581 mo
115.96 216.507 li
115.471 216.181 li
120.749 176.858 li
125.809 180.522 li
123.153 198.501 li
117.841 199.348 li
117.224 203.261 li
122.459 203.2 li
122.112 205.552 li
120.312 205.526 li
122.035 206.071 li
120.187 218.581 li
.929412 .960784 .988235 rgb
f
115.96 216.507 mo
115.46 216.262 li
115.471 216.181 li
115.96 216.507 li
.956863 .976471 .992157 rgb
f
125.809 180.522 mo
120.749 176.858 li
142.699 166.015 li
142.699 166.015 li
125.905 179.875 li
125.809 180.522 li
.976471 .984314 .996078 rgb
f
72.8828 241.12 mo
72.8828 241.12 li
58.6083 224.739 li
47.2308 213.353 li
47.2308 213.353 li
53.3132 212.295 li
55.2991 211.734 li
75.1025 240.793 li
72.8828 241.12 li
.929412 .960784 .988235 rgb
f
47.2308 213.353 mo
47.2308 213.353 48.2719 208.025 48.4918 207.365 cv
48.7118 206.705 50.1398 181.883 50.1398 181.883 cv
50.1398 181.883 li
54.8696 211.104 li
55.2991 211.734 li
53.3132 212.295 li
47.2308 213.353 li
.976471 .984314 .996078 rgb
f
86.4457 226.875 mo
78.9652 225.782 li
86.3231 226.49 li
86.3186 226.498 li
86.4457 226.875 li
.85098 .882353 .92549 rgb
f
86.0794 240.519 mo
85.6588 240.353 li
78.9652 225.782 li
86.0794 240.519 li
.92549 .945098 .976471 rgb
f
91.8167 242.773 mo
86.0794 240.519 li
78.9652 225.782 li
86.4457 226.875 li
91.8167 242.773 li
.929412 .960784 .988235 rgb
f
86.3231 226.49 mo
78.9652 225.782 li
96.6837 206.477 li
86.3231 226.49 li
.976471 .984314 .996078 rgb
f
35.4438 218.1 mo
28.9834 217.055 li
34.9721 217.617 li
35.4438 218.1 li
.85098 .882353 .92549 rgb
f
51.5707 234.635 mo
47.2308 233.98 li
28.9834 217.055 li
35.4438 218.1 li
51.5707 234.635 li
.929412 .960784 .988235 rgb
f
34.9721 217.617 mo
28.9834 217.055 li
27.3966 198.014 li
34.1968 216.822 li
34.9721 217.617 li
.976471 .984314 .996078 rgb
f
98.996 206.529 mo
98.9691 206.518 98.9415 206.507 98.915 206.497 cv
98.9083 206.491 98.9017 206.486 98.8952 206.481 cv
98.996 206.529 li
94.9741 164.496 mo
94.9463 164.179 li
96.561 163.136 li
94.9741 164.496 li
.501961 .541176 .678431 rgb
f
101.734 207.819 mo
100.725 207.296 99.7854 206.846 98.996 206.529 cv
98.8952 206.481 li
98.733 206.349 98.6342 206.265 98.6342 206.265 cv
94.9741 164.496 li
96.561 163.136 li
99.0638 161.52 li
102.152 158.579 li
102.135 162.264 101.938 204.455 101.734 207.819 cv
.25098 .294118 .458824 rgb
f
94.9463 164.179 mo
94.8956 163.6 li
73.9406 142.743 li
102.153 158.322 li
102.153 158.322 102.153 158.41 102.152 158.579 cv
99.0638 161.52 li
96.561 163.136 li
94.9463 164.179 li
.352941 .423529 .603922 rgb
f
101.53 208.139 mo
100.998 208.139 99.5329 206.998 98.915 206.497 cv
98.9415 206.507 98.9691 206.518 98.996 206.529 cv
99.7854 206.846 100.725 207.296 101.734 207.819 cv
101.727 207.934 101.72 208.004 101.713 208.025 cv
101.687 208.104 101.623 208.139 101.53 208.139 cv
f
131.403 223.419 mo
145.918 188.672 li
145.912 188.634 li
150.09 186.925 li
131.403 223.419 li
.25098 .294118 .458824 rgb
f
145.912 188.634 mo
142.699 166.015 li
150.096 186.912 li
150.09 186.925 li
145.912 188.634 li
.352941 .423529 .603922 rgb
f
97.5182 206.065 mo
97.3949 206.044 97.2838 206.034 97.1856 206.034 cv
97.1717 206.034 97.1583 206.034 97.1449 206.034 cv
96.6837 205.419 li
97.5182 206.065 li
.501961 .541176 .678431 rgb
f
109.411 243.432 mo
111.824 225.663 li
118.695 222.456 li
119.087 222.76 li
113.589 242.113 li
109.411 243.432 li
.25098 .294118 .458824 rgb
f
111.824 225.663 mo
111.83 225.619 li
97.1449 206.034 li
97.1583 206.034 97.1717 206.034 97.1856 206.034 cv
97.2838 206.034 97.3949 206.044 97.5182 206.065 cv
118.695 222.456 li
111.824 225.663 li
.352941 .423529 .603922 rgb
f
81.7002 222.54 mo
71.6675 199.639 li
76.3876 191.575 li
76.8619 191.75 li
76.8619 191.75 84.3393 218.801 84.3393 219.461 cv
84.3393 220.12 81.7002 222.54 81.7002 222.54 cv
.25098 .294118 .458824 rgb
f
71.6675 199.639 mo
71.5838 199.448 li
50.1398 181.883 li
76.3876 191.575 li
71.6675 199.639 li
.352941 .423529 .603922 rgb
f
90.0222 184.541 mo
89.5654 182.257 li
90.0572 184.493 li
90.0222 184.541 li
89.0999 180.141 mo
87.4296 173.764 li
87.5645 173.591 87.6381 173.497 87.6381 173.497 cv
89.0999 180.141 li
.615686 .65098 .760784 rgb
f
81.6098 196.163 mo
78.9652 187.172 li
78.9652 187.172 76.6671 186.224 76.763 186.224 cv
76.7722 186.224 76.8038 186.233 76.8619 186.252 cv
76.8674 186.254 76.8736 186.255 76.8805 186.255 cv
77.6216 186.255 85.995 175.597 87.4296 173.764 cv
89.0999 180.141 li
89.5654 182.257 li
90.0222 184.541 li
81.6098 196.163 li
.639216 .745098 .87451 rgb
f
91.6332 192.596 mo
91.4154 191.507 li
91.6907 192.553 li
91.6332 192.596 li
.615686 .65098 .760784 rgb
f
84.4839 197.907 mo
84.4839 197.907 90.8041 189.344 90.6638 188.651 cv
91.4154 191.507 li
91.6332 192.596 li
84.4839 197.907 li
90.6638 188.651 mo
90.6612 188.641 li
90.6622 188.644 90.6631 188.647 90.6638 188.651 cv
.639216 .745098 .87451 rgb
f
122.459 203.2 mo
123.153 198.501 li
137.197 196.26 li
134.932 203.055 li
122.459 203.2 li
f
117.224 203.261 mo
117.841 199.348 li
123.153 198.501 li
122.459 203.2 li
117.224 203.261 li
.945098 .968627 .992157 rgb
f
132.667 209.438 mo
122.035 206.071 li
122.112 205.552 li
134.52 205.732 li
132.667 209.438 li
.639216 .745098 .87451 rgb
f
122.035 206.071 mo
120.312 205.526 li
122.112 205.552 li
122.035 206.071 li
.945098 .968627 .992157 rgb
f
63.5004 166.388 mo
71.2324 167.03 78.7429 168.347 86.3341 169.907 cv
86.9179 170.027 87.168 169.133 86.5813 169.011 cv
79.0034 167.436 71.2885 165.689 63.5004 165.981 cv
63.2359 165.991 63.2416 166.366 63.5004 166.388 cv
cp
1 1 1 rgb
f
87.1396 169.371 mo
93.6013 165.934 99.5093 161.81 104.885 156.845 cv
105.373 156.394 104.641 155.663 104.155 156.116 cv
98.8838 161.023 93.1552 165.389 86.9637 169.07 cv
86.7702 169.185 86.9416 169.476 87.1396 169.371 cv
cp
f
86.2244 169.245 mo
89.0325 182.228 92.145 195.062 94.1154 208.216 cv
94.2147 208.878 95.2253 208.598 95.1241 207.938 cv
93.1251 194.899 90.7077 181.698 86.5186 169.164 cv
86.4564 168.978 86.1828 169.053 86.2244 169.245 cv
cp
f
47.1166 213.583 mo
53.5238 212.889 59.759 211.083 66.097 209.972 cv
66.7947 209.85 66.5001 208.783 65.8034 208.908 cv
59.501 210.038 53.2721 211.626 47.0606 213.169 cv
46.8362 213.225 46.876 213.609 47.1166 213.583 cv
cp
f
66.2182 209.266 mo
71.2727 202.438 75.533 195.263 79.6292 187.832 cv
79.9951 187.168 78.9749 186.572 78.6131 187.238 cv
74.6003 194.624 70.6508 202.129 66.0802 209.185 cv
66.2182 209.266 li
cp
f
49.8266 181.252 mo
54.6689 190.88 59.9349 200.341 65.3287 209.669 cv
65.6236 210.179 66.4096 209.721 66.119 209.207 cv
60.817 199.83 55.8949 190.177 50.0524 181.12 cv
49.9608 180.978 49.751 181.102 49.8266 181.252 cv
cp
f
28.983 217.091 mo
35.016 218.131 41.0359 218.504 46.9011 220.399 cv
47.4468 220.576 47.6727 219.728 47.1367 219.545 cv
41.3119 217.551 35.1549 216.98 29.0409 216.663 cv
28.7996 216.651 28.7387 217.049 28.983 217.091 cv
cp
f
47.4236 220.024 mo
47.8261 219.438 48.2442 218.862 48.6506 218.278 cv
49.0655 217.681 49.4455 216.94 49.9612 216.43 cv
50.4533 215.943 49.4386 215.364 49.2692 216.027 cv
49.0924 216.718 48.5506 217.396 48.189 218.008 cv
47.8262 218.621 47.4764 219.233 47.1727 219.878 cv
47.0932 220.047 47.317 220.18 47.4236 220.024 cv
cp
f
27.08 197.831 mo
33.8958 205.198 40.6642 212.555 46.9563 220.382 cv
47.3424 220.863 48.0198 220.18 47.6343 219.704 cv
41.3392 211.927 34.6877 204.376 27.3163 197.595 cv
27.1579 197.449 26.9336 197.673 27.08 197.831 cv
cp
f
46.004 219.607 mo
50.5821 225.299 55.3484 230.828 60.1452 236.336 cv
60.5262 236.773 61.1638 236.133 60.7821 235.699 cv
55.9726 230.224 51.1387 224.776 46.117 219.494 cv
46.004 219.607 li
cp
f
73.6138 142.738 mo
76.4038 152.38 83.9197 159.82 86.0194 169.723 cv
86.1299 170.244 86.9283 170.024 86.8179 169.503 cv
84.7176 159.597 77.3426 152.075 74.1321 142.595 cv
74.0221 142.27 73.5167 142.402 73.6138 142.738 cv
cp
f
65.9177 209.556 mo
70.9947 220.843 76.4886 231.961 82.1579 242.962 cv
82.4448 243.519 83.2869 243.027 82.9984 242.471 cv
77.3074 231.501 72.2285 220.19 65.9554 209.534 cv
65.9177 209.556 li
cp
f
79.3338 226.035 mo
87.0466 226.927 94.749 227.646 102.24 229.792 cv
102.798 229.952 103.037 229.08 102.479 228.923 cv
94.9298 226.805 87.1646 225.878 79.3338 225.803 cv
79.1806 225.801 79.189 226.018 79.3338 226.035 cv
cp
f
102.136 229.649 mo
109.248 227.606 115.75 224.471 122.451 221.379 cv
123.067 221.095 122.532 220.168 121.916 220.464 cv
115.411 223.592 109.008 227.323 102.078 229.439 cv
101.944 229.479 102 229.688 102.136 229.649 cv
cp
f
102.559 229.428 mo
102.468 235.287 102.04 241.151 101.655 246.997 cv
101.618 247.548 102.476 247.545 102.512 246.997 cv
102.896 241.163 103.406 235.268 102.893 229.428 cv
102.874 229.217 102.562 229.209 102.559 229.428 cv
cp
f
96.4585 206.784 mo
98.9754 214.303 101.213 221.515 102.162 229.428 cv
102.231 230.008 103.155 230.007 103.077 229.428 cv
101.991 221.34 99.963 214.147 96.7639 206.655 cv
96.6898 206.482 96.3988 206.605 96.4585 206.784 cv
cp
f
120.482 177.202 mo
121.574 177.297 124.602 180.244 125.076 180.636 cv
126.705 181.987 128.244 183.437 129.779 184.893 cv
132.61 187.577 135.442 190.158 138.829 192.127 cv
139.404 192.461 139.926 191.566 139.35 191.236 cv
135.007 188.748 131.613 185.148 127.849 181.914 cv
126.356 180.632 124.82 179.525 123.148 178.485 cv
122.253 177.928 121.538 177.055 120.482 177.028 cv
120.369 177.025 120.372 177.192 120.482 177.202 cv
cp
f
139.067 191.986 mo
143.104 189.921 148.054 189.964 151.503 186.764 cv
152.006 186.298 151.258 185.557 150.754 186.014 cv
147.398 189.059 142.523 189.064 138.913 191.722 cv
138.757 191.837 138.889 192.077 139.067 191.986 cv
cp
f
142.763 165.97 mo
142.591 174.299 141.358 182.631 139.373 190.714 cv
139.224 191.323 140.167 191.583 140.312 190.973 cv
142.294 182.649 143.064 174.521 142.966 165.97 cv
142.964 165.839 142.765 165.839 142.763 165.97 cv
cp
f
140.081 189.828 mo
132.991 206.493 127.282 223.841 121.357 240.945 cv
121.115 241.644 122.224 241.946 122.464 241.25 cv
128.361 224.143 134.949 207.221 140.453 189.985 cv
140.522 189.77 140.173 189.614 140.081 189.828 cv
cp
f
28.9987 217.337 mo
32.7255 220.631 36.109 224.317 39.7653 227.689 cv
42.1286 229.869 44.6873 231.788 47.0147 234.017 cv
47.474 234.457 48.1742 233.759 47.7133 233.319 cv
45.2503 230.967 42.5504 228.928 40.0402 226.635 cv
36.4364 223.343 33.0395 220.094 29.0339 217.291 cv
28.9987 217.337 li
cp
.168627 .266667 .415686 rgb
f
29.1388 216.473 mo
29.1088 210.265 28.4257 204.071 27.6043 197.923 cv
27.5157 197.261 26.5926 197.373 26.6911 198.047 cv
27.5868 204.172 28.0861 210.318 28.7029 216.473 cv
28.7303 216.747 29.1401 216.76 29.1388 216.473 cv
cp
.533333 .662745 .831373 rgb
f
26.9802 197.57 mo
34.1045 198.687 41.2874 199.41 48.4402 200.325 cv
49.0862 200.407 49.0836 199.387 48.4402 199.308 cv
41.2955 198.43 34.1919 197.837 27.0207 197.271 cv
26.8515 197.257 26.8097 197.544 26.9802 197.57 cv
cp
.168627 .266667 .415686 rgb
f
46.7384 213.582 mo
55.8215 222.318 64.3654 231.505 72.3944 241.215 cv
72.8156 241.725 73.5102 241.001 73.1135 240.496 cv
65.3288 230.582 56.5351 221.521 46.8514 213.469 cv
46.7384 213.582 li
cp
f
47.5959 213.047 mo
49.0719 208.496 48.9125 203.431 49.1838 198.696 cv
49.507 193.052 49.8298 187.409 50.1436 181.765 cv
50.1795 181.121 49.1754 181.122 49.1412 181.765 cv
48.5982 191.98 49.1234 202.889 47.2176 212.942 cv
47.1709 213.189 47.5172 213.289 47.5959 213.047 cv
cp
.533333 .662745 .831373 rgb
f
85.8213 240.262 mo
83.8757 235.329 81.5703 230.514 79.3482 225.701 cv
79.0522 225.06 78.0856 225.618 78.3949 226.259 cv
80.6836 230.999 82.9195 235.805 85.4762 240.408 cv
85.5772 240.59 85.9014 240.465 85.8213 240.262 cv
cp
.168627 .266667 .415686 rgb
f
78.975 226.353 mo
85.2737 220.144 90.9362 213.266 96.7508 206.609 cv
97.272 206.012 96.3984 205.134 95.8776 205.735 cv
90.0696 212.444 84.0234 219.035 78.724 226.16 cv
78.6135 226.308 78.8494 226.477 78.975 226.353 cv
cp
f
96.8283 206.06 mo
105.373 210.371 113.35 216.046 121.543 220.996 cv
122.193 221.389 122.784 220.373 122.137 219.98 cv
113.957 215.002 105.843 209.525 97.0556 205.672 cv
96.7962 205.558 96.5649 205.928 96.8283 206.06 cv
cp
f
122.108 221.388 mo
118.841 227.798 116.633 234.84 114.136 241.575 cv
113.883 242.259 114.979 242.556 115.229 241.876 cv
117.697 235.166 120.581 228.409 122.254 221.45 cv
122.108 221.388 li
cp
f
63.5224 166.528 mo
67.764 158.831 71.5629 151.029 74.3874 142.69 cv
74.5918 142.086 73.638 141.827 73.4348 142.427 cv
70.6593 150.621 67.1799 158.661 63.259 166.374 cv
63.1705 166.548 63.427 166.701 63.5224 166.528 cv
cp
.533333 .662745 .831373 rgb
f
73.9718 142.663 mo
84.0484 146.824 93.9898 151.016 103.52 156.341 cv
104.174 156.707 104.762 155.701 104.107 155.338 cv
94.5726 150.046 84.5936 145.259 74.1031 142.187 cv
73.7894 142.095 73.6869 142.545 73.9718 142.663 cv
cp
.168627 .266667 .415686 rgb
f
104.323 155.956 mo
103.857 173.669 103.02 191.401 102.79 209.118 cv
102.783 209.718 103.696 209.714 103.72 209.118 cv
104.431 191.454 105.366 173.632 104.744 155.956 cv
104.735 155.685 104.33 155.684 104.323 155.956 cv
cp
f
115.901 216.456 mo
117.219 203.337 119.435 190.315 121.192 177.252 cv
121.292 176.515 120.276 176.368 120.179 177.115 cv
118.479 190.22 116.335 203.255 115.494 216.456 cv
115.478 216.72 115.875 216.712 115.901 216.456 cv
cp
f
120.911 177.282 mo
128.189 174.1 135.164 170.194 142.291 166.69 cv
142.875 166.403 142.359 165.503 141.777 165.812 cv
134.776 169.534 127.534 172.896 120.705 176.931 cv
120.474 177.068 120.677 177.385 120.911 177.282 cv
cp
.533333 .662745 .831373 rgb
f
142.911 165.697 mo
145.355 172.394 147.919 179.121 150.931 185.586 cv
151.155 186.066 151.986 185.724 151.794 185.223 cv
149.239 178.563 146.185 172.043 143.07 165.63 cv
143.027 165.542 142.877 165.604 142.911 165.697 cv
cp
.168627 .266667 .415686 rgb
f
128.375 236.478 mo
136.828 219.932 144.007 202.806 151.975 186.031 cv
152.19 185.579 151.518 185.18 151.298 185.636 cv
143.196 202.37 135.765 219.388 128.149 236.346 cv
128.082 236.497 128.297 236.63 128.375 236.478 cv
cp
f
122.388 241.675 mo
124.861 239.732 127.198 237.634 129.547 235.544 cv
129.952 235.184 129.354 234.586 128.951 234.948 cv
126.622 237.049 124.286 239.136 122.09 241.377 cv
121.895 241.576 122.181 241.838 122.388 241.675 cv
cp
f
116.434 239.283 mo
118.118 240.111 119.825 240.858 121.559 241.574 cv
122.038 241.772 122.263 240.978 121.775 240.789 cv
120.055 240.124 118.334 239.503 116.574 238.951 cv
116.381 238.891 116.248 239.192 116.434 239.283 cv
cp
f
101.849 247.898 mo
105.978 245.638 110.294 243.783 114.804 242.432 cv
115.35 242.269 115.116 241.409 114.569 241.577 cv
109.973 242.989 105.676 244.915 101.615 247.497 cv
101.362 247.657 101.586 248.043 101.849 247.898 cv
cp
f
85.5521 240.367 mo
90.7806 243.247 96.1885 245.478 101.755 247.619 cv
102.295 247.826 102.537 246.95 101.995 246.75 cv
96.5018 244.73 90.9666 242.658 85.6621 240.179 cv
85.5371 240.121 85.4274 240.298 85.5521 240.367 cv
cp
f
82.5681 242.861 mo
84.1887 242.522 85.6583 241.907 87.2328 241.408 cv
87.8652 241.208 87.5874 240.2 86.9586 240.414 cv
85.3502 240.961 83.9872 241.914 82.4617 242.609 cv
82.3126 242.677 82.4231 242.892 82.5681 242.861 cv
cp
f
72.9155 241.264 mo
75.9622 242.396 79.2965 242.301 82.4039 243.259 cv
82.9586 243.43 83.1987 242.556 82.6433 242.391 cv
79.534 241.464 76.1798 241.172 72.9541 240.978 cv
72.7805 240.968 72.7711 241.21 72.9155 241.264 cv
cp
f
47.627 234.077 mo
51.6209 235.191 55.5668 235.522 59.6667 236.063 cv
60.2825 236.144 60.2852 235.163 59.6667 235.09 cv
55.6866 234.618 51.6243 234.576 47.6695 233.923 cv
47.5701 233.906 47.5258 234.049 47.627 234.077 cv
cp
f
60.7705 236.171 mo
62.451 235.306 63.9078 234.021 65.7539 233.512 cv
66.3851 233.338 66.1084 232.334 65.4835 232.532 cv
63.5286 233.15 62.1034 234.492 60.4699 235.657 cv
60.1606 235.877 60.4248 236.349 60.7705 236.171 cv
cp
f
49.7284 181.536 mo
59.2029 183.906 68.8692 185.571 78.4293 187.568 cv
79.1587 187.72 79.4712 186.603 78.7383 186.447 cv
69.1588 184.414 59.4898 182.449 49.7748 181.193 cv
49.5782 181.168 49.5412 181.489 49.7284 181.536 cv
cp
f
78.4744 186.979 mo
80.3315 192.241 81.2649 197.871 82.396 203.32 cv
83.3649 207.987 83.8979 213.259 85.7524 217.683 cv
86.0661 218.432 87.1135 218.008 86.788 217.247 cv
82.6879 207.666 83.3031 196.341 78.9126 186.794 cv
78.7999 186.549 78.3841 186.723 78.4744 186.979 cv
cp
f
63.4783 166.408 mo
65.7498 172.306 67.7112 178.232 69.3545 184.336 cv
69.4928 184.85 70.295 184.631 70.153 184.116 cv
68.4807 178.048 66.5778 171.934 63.704 166.313 cv
63.6414 166.191 63.4275 166.277 63.4783 166.408 cv
cp
f
306.194 89.4608 mo
305.788 64.088 li
314.384 58.5922 li
312.022 82.8317 li
306.194 89.4608 li
0 .678431 .65098 rgb
f
328.187 57.8806 mo
334.341 25.128 li
344.28 20.6267 li
335.722 52.323 li
328.187 57.8806 li
f
330.983 71.1119 mo
330.301 84.3249 li
330.301 84.3249 358.407 82.4575 357.579 82.089 cv
356.751 81.7203 349.697 65.4876 349.697 65.4876 cv
330.983 71.1119 li
f
300.322 27.2758 mo
300.667 45.7405 li
306.244 41.6781 li
312.444 54.6564 li
323.727 21.7907 li
312.886 25.5421 li
300.322 27.2758 li
f
277.512 44.0602 mo
287.03 64.5632 li
290.222 64.2985 li
287.926 58.3172 li
293.044 53.0585 li
283.451 36.2904 li
280.036 38.8365 li
277.512 44.0602 li
f
298.102 1.15757 mo
299.779 10.533 li
299.934 26.6693 li
292.86 25.4042 li
279.018 19.7374 li
298.102 1.15757 li
0 .92549 .737255 rgb
f
300.667 45.7405 mo
299.934 26.6693 li
289.807 24.2432 li
279.018 19.7374 li
280.898 29.9962 li
288.265 45.9716 li
293.044 53.0585 li
300.667 45.7405 li
0 .831373 .666667 rgb
f
298.426 .469249 mo
307.784 8.14646 li
323.727 21.7907 li
314.811 24.6644 li
305.039 27.4547 li
299.934 26.6693 li
300.155 12.5848 li
298.426 .469249 li
0 .890196 .709804 rgb
f
328.034 58.0066 mo
334.341 25.128 li
323.588 23.2166 li
318.04 38.7971 li
312.088 52.611 li
314.384 58.5922 li
313.523 67.4325 li
321.542 70.8049 li
320.582 62.9386 li
328.034 58.0066 li
0 .635294 .568627 rgb
f
326.354 .743779 mo
331.127 16.7543 li
334.341 25.128 li
323.677 23.213 li
323.727 21.7907 li
314.671 14.2871 li
326.354 .743779 li
0 .933333 .752941 rgb
f
326.354 .743779 mo
333.01 6.93791 li
343.98 20.1205 li
338.896 23.1466 li
334.341 25.128 li
326.354 .743779 li
0 .890196 .709804 rgb
f
335.722 52.323 mo
343.311 58.7909 li
350.513 65.8311 li
335.584 70.1516 li
331.551 71.4923 li
323.995 66.2053 li
320.582 62.9386 li
332.114 55.1644 li
335.722 52.323 li
f
321.085 62.8229 mo
324.918 66.8586 li
330.983 71.1119 li
330.225 80.3346 li
330.335 84.9935 li
323.922 81.4107 li
321.76 70.3541 li
321.085 62.8229 li
cp
0 .831373 .666667 rgb
f
305.312 64.244 mo
305.312 64.244 306.217 91.0949 305.992 90.5096 cv
305.768 89.9243 300.618 83.5065 300.618 83.5065 cv
290.753 66.2059 li
287.926 58.3173 li
305.312 64.244 li
cp
f
306.244 41.6781 mo
314.384 58.5922 li
305.312 64.244 li
287.926 58.3172 li
306.244 41.6781 li
0 .92549 .737255 rgb
f
268.31 45.0035 mo
277.512 44.0602 li
287.513 64.7633 li
284.154 65.9855 li
268.31 45.0035 li
0 .831373 .666667 rgb
f
258.334 60.6524 mo
251.792 77.1995 li
268.791 80.5462 li
267.478 85.3482 li
302.16 86.4739 li
302.16 86.4739 300.662 84.4968 300.563 84.0646 cv
300.465 83.6324 298.95 80.386 298.95 80.386 cv
270.597 72.1299 li
279.138 68.314 li
258.334 60.6524 li
f
290.147 63.7523 mo
292.714 69.2141 li
298.95 80.386 li
270.597 72.1299 li
290.147 63.7523 li
cp
0 .92549 .737255 rgb
f
258.334 60.6524 mo
277.844 58.4687 li
284.154 65.9855 li
278.58 68.2596 li
258.334 60.6524 li
f
277.512 44.0602 mo
282.419 36.0957 li
272.787 33.7487 li
268.31 45.0035 li
277.512 44.0602 li
f
310.663 25.8489 mo
314.811 24.6644 li
319.972 23.001 li
319.941 23.101 li
312.886 25.5421 li
310.663 25.8489 li
0 .678431 .65098 rgb
f
311.176 50.9489 mo
308.445 45.1965 li
310.003 26.0372 li
310.663 25.8489 li
312.886 25.5421 li
319.941 23.101 li
311.176 50.9489 li
0 .458824 .423529 rgb
f
310.003 26.0372 mo
310.026 25.7569 li
298.426 .469249 li
320.031 22.813 li
319.972 23.001 li
314.811 24.6644 li
310.663 25.8489 li
310.003 26.0372 li
0 .603922 .462745 rgb
f
316.019 68.8199 mo
313.472 67.9526 li
314.384 58.5922 li
313.523 67.4325 li
316.087 68.5107 li
316.019 68.8199 li
0 .678431 .65098 rgb
f
313.472 67.9526 mo
313.44 67.9416 li
314.384 58.5922 li
313.472 67.9526 li
0 .458824 .423529 rgb
f
314.384 58.5922 mo
314.384 58.5922 li
312.564 54.3065 li
312.646 54.0659 li
314.384 58.5922 li
0 .678431 .65098 rgb
f
312.564 54.3065 mo
312.317 53.7247 li
312.415 53.4619 li
312.646 54.0659 li
312.564 54.3065 li
0 .458824 .423529 rgb
f
317.295 40.5255 mo
318.053 38.3195 li
321.668 28.61 li
318.04 38.7971 li
317.295 40.5255 li
0 .678431 .65098 rgb
f
316.824 41.6186 mo
318.053 38.3195 li
317.295 40.5255 li
316.824 41.6186 li
0 .458824 .423529 rgb
f
323.781 23.2509 mo
323.67 23.2311 li
323.677 23.213 li
323.781 23.2509 li
0 .678431 .65098 rgb
f
316.087 68.5107 mo
313.523 67.4325 li
314.384 58.5922 li
312.646 54.0659 li
312.415 53.4619 li
316.824 41.6186 li
317.295 40.5255 li
318.04 38.7971 li
321.668 28.61 li
323.67 23.2311 li
323.781 23.2509 li
325.871 24.0091 li
316.087 68.5107 li
0 .431373 .368627 rgb
f
285.253 39.4402 mo
283.451 36.2904 li
282.468 37.0236 li
283.63 35.9201 li
285.253 39.4402 li
0 .678431 .65098 rgb
f
290.499 55.527 mo
290.096 55.526 281.571 37.8754 281.571 37.8754 cv
282.468 37.0236 li
283.451 36.2904 li
285.253 39.4402 li
288.265 45.9716 li
293.044 53.0585 li
293.044 53.0585 290.711 55.068 290.51 55.5187 cv
290.508 55.5242 290.504 55.527 290.499 55.527 cv
0 .458824 .423529 rgb
f
293.044 53.0585 mo
288.265 45.9716 li
285.253 39.4402 li
283.63 35.9201 li
283.813 35.746 li
284.301 37.2009 li
293.044 53.0585 li
0 .564706 .435294 rgb
f
269.22 64.8869 mo
264.973 79.5211 li
268.791 80.5462 li
270.597 72.1299 li
279.138 68.314 li
269.22 64.8869 li
0 .678431 .65098 rgb
f
288.658 77.7533 mo
287.034 86.3731 li
301.826 85.7767 li
300.618 83.5065 li
298.95 80.386 li
288.658 77.7533 li
cp
f
279.712 23.5252 mo
278.592 20.1859 li
279.022 19.758 li
279.712 23.5252 li
286.046 22.6724 mo
279.036 19.7446 li
279.036 19.7445 li
286.046 22.6143 li
286.034 22.6354 li
286.046 22.6724 li
280.213 18.5741 mo
298.426 .469249 li
297.97 1.28591 li
280.213 18.5741 li
0 .92549 .737255 rgb
f
286.046 22.6143 mo
279.036 19.7445 li
280.213 18.5741 li
297.97 1.28591 li
286.046 22.6143 li
0 .996078 .929412 rgb
f
293.044 53.0585 mo
293.044 53.0585 li
283.816 35.7429 li
283.813 35.746 li
279.712 23.5252 li
279.022 19.758 li
279.036 19.7446 li
286.046 22.6724 li
289.763 34.1741 li
283.853 34.6641 li
287.436 41.8693 li
292.034 41.2026 li
295.187 50.9584 li
293.044 53.0585 li
0 .988235 .913725 rgb
f
293.044 53.0585 mo
293.044 53.0585 li
284.301 37.2009 li
283.813 35.746 li
283.816 35.7429 li
293.044 53.0585 li
0 .968627 .85098 rgb
f
319.554 18.064 mo
314.671 14.2871 li
326.497 1.49812 li
319.554 18.064 li
0 .996078 .933333 rgb
f
269.194 64.733 mo
258.453 61.1731 li
259.377 61.0442 li
269.194 64.733 li
0 .988235 .913725 rgb
f
269.841 64.9474 mo
269.194 64.733 li
259.377 61.0442 li
277.844 58.4687 li
280.188 61.7234 li
269.841 64.9474 li
0 .996078 .929412 rgb
f
350.826 83.2088 mo
350.674 82.8488 li
352.722 82.6818 354.501 82.5247 355.742 82.3935 cv
350.826 83.2088 li
357.579 82.089 mo
356.84 81.7596 351.13 68.769 349.921 66.0024 cv
349.939 65.9973 li
357.579 82.089 li
0 .92549 .737255 rgb
f
350.674 82.8488 mo
344.478 68.1645 li
344.04 67.7043 li
349.921 66.0024 li
351.13 68.769 356.84 81.7596 357.579 82.089 cv
357.579 82.089 li
355.742 82.3935 li
354.501 82.5247 352.722 82.6818 350.674 82.8488 cv
0 .976471 .909804 rgb
f
341.075 56.8851 mo
335.722 52.323 li
339.883 55.6953 li
341.075 56.8851 li
0 .92549 .737255 rgb
f
344.04 67.7043 mo
332.114 55.1644 li
335.722 52.323 li
341.075 56.8851 li
349.697 65.4876 li
349.939 65.9973 li
349.921 66.0024 li
344.04 67.7043 li
0 .992157 .92549 rgb
f
306.244 41.678 mo
305.312 64.244 li
314.384 58.5923 li
306.244 41.678 li
cp
0 .890196 .709804 rgb
f
300.445 39.9831 mo
300.189 33.3097 li
300.434 33.2894 li
300.559 39.9667 li
300.445 39.9831 li
.729412 .979838 .928904 rgb
f
300.559 39.9667 mo
300.434 33.2894 li
300.485 33.2852 li
300.693 39.9473 li
300.559 39.9667 li
0 .760784 .721569 rgb
f
292.034 41.2026 mo
289.763 34.1741 li
300.189 33.3097 li
300.445 39.9831 li
292.034 41.2026 li
0 .87451 .733333 rgb
f
287.436 41.8693 mo
283.853 34.6641 li
289.763 34.1741 li
292.034 41.2026 li
287.436 41.8693 li
0 .992157 .929412 rgb
f
298.166 .544003 mo
292.088 7.39947 285.598 13.8286 278.472 19.5925 cv
278.027 19.9518 278.595 20.6424 279.035 20.2773 cv
286.135 14.3859 292.646 7.93271 298.34 .669737 cv
298.427 .559157 298.256 .44273 298.166 .544003 cv
cp
0 .831373 .666667 rgb
f
323.428 22.128 mo
319.57 32.5528 316.465 43.1222 311.879 53.3101 cv
311.637 53.8482 312.494 54.174 312.734 53.6379 cv
317.274 43.4886 321.164 33.0647 323.748 22.2509 cv
323.798 22.0432 323.507 21.9141 323.428 22.128 cv
cp
f
278.699 20.2956 mo
285.679 22.985 292.685 26.2684 300.119 27.521 cv
300.745 27.6264 300.84 26.6411 300.214 26.5388 cv
292.825 25.33 286.007 21.9627 278.914 19.7345 cv
278.548 19.6195 278.335 20.1555 278.699 20.2956 cv
cp
0 .92549 .737255 rgb
f
300.141 27.2545 mo
308.279 27.5666 316.102 25.4524 323.636 22.5433 cv
324.228 22.3147 323.814 21.4159 323.223 21.6469 cv
315.801 24.547 308.184 26.579 300.187 26.7848 cv
299.892 26.7924 299.831 27.2426 300.141 27.2545 cv
cp
f
298.257 .422262 mo
299.574 9.12268 299.616 17.9224 299.556 26.7063 cv
299.551 27.4838 300.767 27.6056 300.766 26.8242 cv
300.763 17.8979 300.193 9.16333 298.412 .395348 cv
298.391 .296328 298.241 .321759 298.257 .422262 cv
cp
1 1 1 rgb
f
300.008 27.0612 mo
299.542 33.1179 299.861 39.3046 300.542 45.3332 cv
300.607 45.9116 301.484 45.7525 301.43 45.1791 cv
300.859 39.1341 300.662 33.1087 300.432 27.0453 cv
300.423 26.8016 300.026 26.8243 300.008 27.0612 cv
cp
f
287.735 58.4305 mo
294.041 53.1296 300.207 47.6602 306.402 42.2296 cv
306.858 41.8293 306.259 41.098 305.802 41.5006 cv
299.62 46.9505 293.403 52.3677 287.335 57.9445 cv
287.038 58.2169 287.422 58.6932 287.735 58.4305 cv
cp
0 .415686 .341176 rgb
f
306.149 41.3703 mo
308.621 47.1086 311.24 52.7743 313.916 58.4201 cv
314.184 58.9851 315.071 58.5791 314.799 58.013 cv
312.095 52.3774 309.339 46.7743 306.435 41.2385 cv
306.341 41.06 306.068 41.1829 306.149 41.3703 cv
cp
0 .635294 .568627 rgb
f
287.541 58.0941 mo
293.254 60.6713 299.302 62.5512 305.206 64.6358 cv
305.866 64.8688 306.257 63.8482 305.596 63.6206 cv
299.667 61.5817 293.753 59.296 287.669 57.7602 cv
287.45 57.7048 287.327 57.9974 287.541 58.0941 cv
cp
1 1 1 rgb
f
305.71 64.4516 mo
308.643 62.714 311.546 60.979 314.401 59.1143 cv
314.938 58.7639 314.298 57.98 313.765 58.341 cv
310.973 60.2335 308.28 62.2232 305.575 64.2352 cv
305.459 64.3209 305.583 64.5269 305.71 64.4516 cv
cp
f
305.165 64.0583 mo
304.987 72.6885 305.457 81.3415 305.376 89.9778 cv
305.369 90.6639 306.441 90.7717 306.443 90.0819 cv
306.47 81.4409 306.552 72.6353 305.491 64.0461 cv
305.469 63.8648 305.169 63.8712 305.165 64.0583 cv
cp
f
300.505 84.2264 mo
301.954 86.4816 303.684 88.4467 305.29 90.5875 cv
305.677 91.1028 306.46 90.4608 306.063 89.9515 cv
304.413 87.8342 302.427 86.0976 300.638 84.1174 cv
300.562 84.0335 300.446 84.1352 300.505 84.2264 cv
cp
0 .415686 .341176 rgb
f
314.049 58.7685 mo
312.698 66.6871 311.977 74.7096 311.308 82.7101 cv
311.253 83.3608 312.267 83.4612 312.318 82.8086 cv
312.956 74.8019 313.867 66.8181 314.462 58.8088 cv
314.482 58.5401 314.094 58.5074 314.049 58.7685 cv
cp
0 .635294 .568627 rgb
f
305.878 91.0591 mo
308.045 88.4487 310.434 86.0105 312.31 83.1681 cv
312.664 82.6315 311.88 82.0588 311.499 82.5814 cv
309.493 85.3257 307.354 87.9508 305.658 90.8999 cv
305.572 91.0502 305.765 91.1957 305.878 91.0591 cv
cp
0 .415686 .341176 rgb
f
315.415 13.8544 mo
319.358 9.76387 323.055 5.43919 326.812 1.17904 cv
327.19 .750801 326.467 .233331 326.094 .659343 cv
322.371 4.90423 318.574 9.09692 315.043 13.5046 cv
314.863 13.7288 315.21 14.0668 315.415 13.8544 cv
cp
0 .831373 .666667 rgb
f
325.983 .746746 mo
328.97 8.74754 330.31 17.3466 334.128 25.0249 cv
334.451 25.6748 335.481 25.2043 335.154 24.5519 cv
331.31 16.8834 330.206 8.22626 326.49 .513254 cv
326.333 .18655 325.859 .412986 325.983 .746746 cv
cp
0 .92549 .737255 rgb
f
326.325 .628202 mo
332.19 7.20466 338.166 13.6308 343.732 20.4724 cv
344.191 21.0372 345.067 20.3172 344.604 19.7547 cv
339.027 12.9736 333.335 6.01266 326.587 .349074 cv
326.419 .208049 326.18 .465423 326.325 .628202 cv
cp
0 .415686 .341176 rgb
f
334.839 25.4948 mo
337.747 23.6846 340.813 22.1916 343.993 20.9232 cv
344.555 20.6991 344.156 19.8173 343.598 20.0658 cv
340.44 21.4711 337.486 23.2254 334.681 25.2424 cv
334.545 25.3404 334.694 25.5856 334.839 25.4948 cv
cp
0 .92549 .737255 rgb
f
334.158 24.9702 mo
331.814 35.7183 329.825 46.5507 327.78 57.3588 cv
327.663 57.9813 328.65 58.0772 328.762 57.4545 cv
330.724 46.6412 332.851 35.854 334.727 25.0257 cv
334.791 24.6578 334.234 24.6184 334.158 24.9702 cv
cp
f
335.515 53.1047 mo
340.457 57.2155 345.39 61.0627 349.723 65.8597 cv
350.248 66.4409 351.196 65.658 350.662 65.0875 cv
346.289 60.4172 341.381 55.7959 335.691 52.7804 cv
335.495 52.6765 335.364 52.9783 335.515 53.1047 cv
cp
0 .415686 .341176 rgb
f
330.67 71.8751 mo
337.268 70.2178 343.631 67.9331 350.312 66.5346 cv
350.932 66.4048 350.765 65.4256 350.143 65.562 cv
343.591 66.9991 336.624 68.6471 330.628 71.7396 cv
330.67 71.8751 li
cp
0 .92549 .737255 rgb
f
350.009 66.9604 mo
351.814 72.0825 353.946 77.0693 356.532 81.8468 cv
356.86 82.4519 357.842 82.002 357.507 81.3977 cv
354.87 76.6462 352.497 71.7898 350.503 66.7329 cv
350.373 66.4043 349.895 66.6348 350.009 66.9604 cv
cp
0 .415686 .341176 rgb
f
356.727 82.195 mo
347.862 82.8529 338.94 84.353 330.04 84.1655 cv
329.383 84.1517 329.276 85.1732 329.94 85.1904 cv
338.895 85.4223 347.958 83.8934 356.795 82.5897 cv
357.054 82.5515 356.98 82.1762 356.727 82.195 cv
cp
f
330.976 70.9826 mo
330.196 75.6288 329.852 80.2642 330.03 84.9727 cv
330.055 85.6161 331.073 85.4526 331.031 84.799 cv
330.735 80.1884 330.816 75.6081 331.374 71.0214 cv
331.406 70.7635 331.018 70.7308 330.976 70.9826 cv
cp
0 .92549 .737255 rgb
f
343.85 20.4266 mo
341.448 31.1723 338.831 41.7307 335.14 52.1176 cv
334.893 52.8123 335.972 53.2243 336.208 52.5274 cv
339.747 42.1151 342.75 31.3761 344.305 20.4709 cv
344.348 20.1726 343.912 20.1473 343.85 20.4266 cv
cp
0 .415686 .341176 rgb
f
252.124 77.326 mo
254.51 72.014 256.602 66.5087 258.601 61.0403 cv
258.792 60.5204 258.011 60.2229 257.8 60.733 cv
255.577 66.1137 253.397 71.5843 251.563 77.1109 cv
251.441 77.4793 251.966 77.6783 252.124 77.326 cv
cp
f
258.211 61.1329 mo
264.907 63.8577 271.69 66.3364 278.54 68.6456 cv
279.15 68.8514 279.511 67.9116 278.898 67.7106 cv
272.029 65.4544 265.211 63.0452 258.334 60.8123 cv
258.125 60.7443 258.005 61.0492 258.211 61.1329 cv
cp
1 1 1 rgb
f
289.771 63.8533 mo
283.268 65.7332 276.908 68.8316 270.716 71.5506 cv
270.132 71.8067 270.542 72.6868 271.129 72.447 cv
277.355 69.9033 284.019 67.4846 289.859 64.1377 cv
289.994 64.0601 289.946 63.8024 289.771 63.8533 cv
cp
0 .92549 .737255 rgb
f
270.43 72.4125 mo
280.01 75.1067 289.399 78.4339 299.004 81.0493 cv
299.638 81.2221 300.012 80.2616 299.372 80.0875 cv
289.754 77.4682 280.309 74.2789 270.615 71.9316 cv
270.3 71.8554 270.107 72.3215 270.43 72.4125 cv
cp
1 1 1 rgb
f
251.818 77.6507 mo
257.181 79.4665 262.985 79.8966 268.487 81.2461 cv
269.187 81.4178 269.595 80.3583 268.892 80.1909 cv
263.38 78.8793 257.535 77.5692 251.864 77.4575 cv
251.757 77.4554 251.705 77.6123 251.818 77.6507 cv
cp
0 .415686 .341176 rgb
f
267.176 85.753 mo
278.573 86.8429 289.975 86.9674 301.4 86.2715 cv
302.105 86.2286 301.914 85.1419 301.211 85.1862 cv
289.889 85.9001 278.56 85.8193 267.241 85.084 cv
266.811 85.056 266.743 85.7117 267.176 85.753 cv
cp
f
320.759 62.8156 mo
323.677 66.5617 327.355 69.5461 331.425 71.9632 cv
331.922 72.2583 332.453 71.5244 331.953 71.233 cv
327.897 68.8671 324.364 65.902 321.123 62.5158 cv
320.915 62.2982 320.57 62.5731 320.759 62.8156 cv
cp
0 .92549 .737255 rgb
f
258.068 61.1149 mo
264.711 60.7746 271.271 59.9378 277.825 58.8199 cv
278.451 58.7132 278.284 57.7371 277.656 57.8473 cv
271.133 58.9933 264.557 59.9137 257.955 60.4665 cv
257.529 60.5022 257.653 61.1361 258.068 61.1149 cv
cp
0 .415686 .341176 rgb
f
283.772 65.4238 mo
279.256 58.5391 273.952 52.1369 268.95 45.6026 cv
268.613 45.1631 267.952 45.7093 268.287 46.1477 cv
273.283 52.6733 278.117 59.4399 283.65 65.5237 cv
283.772 65.4238 li
cp
f
268.164 45.4749 mo
269.773 41.6854 271.264 37.8472 272.845 34.0452 cv
272.976 33.7304 272.475 33.5384 272.35 33.8557 cv
270.846 37.6876 269.251 41.4832 267.776 45.3264 cv
267.68 45.5767 268.06 45.7199 268.164 45.4749 cv
cp
0 .831373 .666667 rgb
f
272.586 33.8829 mo
275.795 34.521 278.954 35.415 282.069 36.4138 cv
282.616 36.5889 282.932 35.7386 282.387 35.5856 cv
279.166 34.6807 275.925 34.0461 272.621 33.527 cv
272.391 33.4909 272.364 33.8388 272.586 33.8829 cv
cp
f
268.387 45.5213 mo
271.393 45.4324 274.434 45.0286 277.424 44.7112 cv
277.991 44.6511 277.839 43.7772 277.272 43.8373 cv
274.315 44.1512 271.288 44.3866 268.364 44.9264 cv
268.046 44.9853 268.037 45.5317 268.387 45.5213 cv
cp
0 .92549 .737255 rgb
f
277.579 44.0966 mo
279.109 41.2751 280.947 38.6057 283.324 36.4307 cv
283.844 35.9546 283.102 35.2336 282.611 35.7604 cv
280.343 38.1894 278.438 40.7878 277.13 43.8535 cv
277.018 44.1162 277.439 44.356 277.579 44.0966 cv
cp
f
277.397 44.3535 mo
280.519 50.9274 283.182 57.743 286.449 64.2438 cv
286.706 64.7547 287.469 64.4022 287.254 63.8726 cv
284.523 57.1312 281.308 50.5179 277.618 44.2518 cv
277.54 44.1199 277.328 44.2091 277.397 44.3535 cv
cp
f
320.59 62.8174 mo
321.013 68.9281 322.215 75.0375 323.312 81.0565 cv
323.399 81.5356 324.145 81.4087 324.059 80.9268 cv
322.975 74.8876 322.211 68.7571 320.928 62.7587 cv
320.881 62.5391 320.575 62.5999 320.59 62.8174 cv
cp
0 .635294 .568627 rgb
f
320.738 62.7565 mo
325.882 59.6551 330.849 56.4788 335.67 52.8689 cv
336.127 52.5266 335.561 51.8377 335.107 52.184 cv
330.405 55.7716 325.585 59.3611 320.648 62.6123 cv
320.738 62.7565 li
cp
0 .415686 .341176 rgb
f
313.158 68.081 mo
315.846 69.1886 318.585 70.166 321.31 71.1802 cv
321.837 71.3765 322.152 70.5503 321.622 70.3654 cv
318.875 69.4065 316.141 68.4105 313.363 67.5467 cv
313.013 67.4379 312.815 67.9396 313.158 68.081 cv
cp
f
323.725 81.6867 mo
325.797 82.9595 327.918 84.1335 330.042 85.3175 cv
330.527 85.5881 330.903 84.9062 330.406 84.6439 cv
328.257 83.5082 326.116 82.3689 323.92 81.3249 cv
323.71 81.2247 323.524 81.5637 323.725 81.6867 cv
cp
f
323.53 23.9207 mo
325.535 24.0898 327.523 24.2079 329.504 24.5894 cv
331.3 24.9354 333.003 25.4688 334.849 25.4873 cv
335.482 25.4937 335.577 24.5017 334.944 24.5051 cv
331.062 24.5265 327.47 23.0007 323.511 23.4107 cv
323.22 23.4409 323.244 23.8966 323.53 23.9207 cv
cp
0 .92549 .737255 rgb
f
298.403 .251996 mo
306.603 7.66537 314.954 14.9014 323.292 22.1585 cv
323.647 22.467 324.073 21.8726 323.72 21.5673 cv
315.373 14.3412 307.045 7.0987 298.562 .0317606 cv
298.426 -.0818352 298.276 .137072 298.403 .251996 cv
cp
0 .415686 .341176 rgb
f
287.854 57.8691 mo
289.582 67.4252 296.582 75.0612 299.949 84.0177 cv
300.208 84.7069 301.247 84.2262 300.988 83.5387 cv
297.576 74.4613 291.112 67.0588 287.976 57.8311 cv
287.854 57.8691 li
cp
f
270.316 72.1519 mo
269.58 76.4235 268.33 80.5998 267.096 84.7497 cv
266.952 85.2345 267.694 85.5167 267.831 85.0314 cv
269.022 80.7818 270.295 76.6028 270.729 72.1921 cv
270.755 71.9237 270.361 71.8915 270.316 72.1519 cv
cp
0 .92549 .737255 rgb
f
278.66 20.2092 mo
280.565 31.9264 285.96 43.4469 292.349 53.3517 cv
292.601 53.7431 293.295 53.315 293.046 52.9146 cv
286.572 42.5143 282.581 31.7545 278.93 20.1249 cv
278.881 19.9673 278.634 20.0538 278.66 20.2092 cv
cp
0 .415686 .341176 rgb
f
296.979 310.383 mo
299.322 341.357 li
304.007 334.329 li
309.212 339.015 li
310.514 297.889 li
304.007 305.958 li
296.979 310.383 li
.65098 .14902 .211765 rgb
f
306.089 346.563 mo
305.568 361.66 li
309.473 360.619 li
312.336 341.618 li
306.089 346.563 li
f
319.884 309.081 mo
313.637 357.495 li
318.583 358.797 li
327.693 319.233 li
331.337 298.41 li
322.227 306.739 li
319.884 309.081 li
f
336.803 334.85 mo
331.597 347.604 li
327.953 359.838 li
315.98 366.605 li
307.651 369.989 li
301.404 371.551 li
303.486 379.359 li
339.927 368.167 li
331.337 361.66 li
340.447 337.453 li
341.749 332.247 li
336.803 334.85 li
f
274.073 301.533 mo
283.444 305.177 li
296.719 310.383 li
299.322 341.357 li
298.28 343.179 li
305.568 345.782 li
305.568 361.66 li
289.951 359.577 li
274.073 301.533 li
.760784 .207843 .223529 rgb
f
277.457 364.002 mo
287.869 368.167 li
301.404 371.551 li
303.486 379.359 li
289.951 376.236 li
275.895 371.811 li
275.895 371.811 272.512 372.592 272.772 371.811 cv
273.032 371.03 277.457 364.002 277.457 364.002 cv
f
310.254 305.437 mo
319.884 309.081 li
313.637 357.495 li
310.774 357.235 li
312.336 342.659 li
308.952 337.973 li
310.254 305.437 li
f
326.392 328.343 mo
336.803 334.85 li
331.597 347.604 li
327.953 361.399 li
324.83 360.358 li
318.583 358.797 li
326.392 328.343 li
f
288.91 272.12 mo
296.719 310.383 li
304.527 304.917 li
310.514 297.889 li
310.514 297.889 294.376 274.203 288.91 272.12 cv
.709804 .243137 .282353 rgb
f
315.199 278.888 mo
319.884 309.081 li
331.337 298.41 li
315.199 278.888 li
f
304.007 334.329 mo
305.568 345.782 li
312.336 341.618 li
304.007 334.329 li
f
333.377 322.05 mo
334.242 323.443 li
336.803 334.85 li
341.749 332.247 li
333.377 322.05 li
cp
f
288.91 272.12 mo
296.719 310.383 li
274.073 301.533 li
288.91 272.12 li
.898039 .341176 .298039 rgb
f
307.13 291.642 mo
315.199 278.888 li
319.884 309.081 li
310.254 305.437 li
310.514 296.588 li
307.13 291.642 li
f
333.703 322.324 mo
336.803 334.85 li
326.392 328.343 li
333.703 322.324 li
cp
f
304.149 334.777 mo
305.903 345.849 li
298.28 343.179 li
304.149 334.777 li
f
290.177 358.91 mo
277.457 364.002 li
301.404 371.551 li
314.42 366.702 li
327.953 359.838 li
317.884 359.342 li
310.308 356.745 li
309.473 360.619 li
304.463 362.156 li
290.177 358.91 li
f
276.556 372.019 mo
275.237 371.947 li
275.622 371.874 275.895 371.811 275.895 371.811 cv
276.556 372.019 li
281.742 365.716 mo
277.457 364.002 li
282.17 365.488 li
281.742 365.716 li
.898039 .341176 .298039 rgb
f
278.272 372.113 mo
276.556 372.019 li
275.895 371.811 li
275.895 371.811 275.622 371.874 275.237 371.947 cv
272.772 371.811 li
277.457 364.002 li
281.742 365.716 li
281.519 365.836 li
278.272 372.113 li
.976471 .478431 .454902 rgb
f
293.195 359.595 mo
290.177 358.91 li
289.809 359.057 li
274.073 301.533 li
280.928 304.212 li
284.596 319.537 li
279.95 320.684 li
285.494 338.906 li
288.718 336.757 li
294.073 359.126 li
293.195 359.595 li
f
280.928 304.212 mo
274.073 301.533 li
275.511 298.72 li
281.166 301.135 li
280.653 303.063 li
280.928 304.212 li
278.587 292.697 mo
288.662 272.975 li
284.1 290.113 li
278.587 292.697 li
.988235 .564706 .505882 rgb
f
282.17 365.488 mo
277.457 364.002 li
289.951 359.577 li
289.809 359.057 li
290.177 358.91 li
293.195 359.595 li
282.17 365.488 li
f
312.689 305.877 mo
310.254 305.437 li
310.514 296.588 li
307.13 291.642 li
315.199 278.888 li
312.689 305.877 li
f
304.463 362.156 mo
304.244 361.483 li
304.378 361.501 li
304.463 362.156 li
302.188 344.575 mo
298.28 343.179 li
302.184 344.547 li
302.188 344.575 li
.898039 .341176 .298039 rgb
f
304.378 361.501 mo
304.244 361.483 li
298.28 343.179 li
302.188 344.575 li
304.378 361.501 li
.976471 .478431 .454902 rgb
f
302.184 344.547 mo
298.28 343.179 li
303.816 336.025 li
303.293 337.551 302.082 343.757 302.082 343.757 cv
302.184 344.547 li
303.816 336.025 mo
303.89 335.811 303.95 335.689 303.991 335.689 cv
304.007 335.689 304.02 335.708 304.03 335.748 cv
303.816 336.025 li
.988235 .564706 .505882 rgb
f
302.831 306.698 mo
302.778 306.142 li
304.527 304.917 li
307.86 301.005 li
307.92 301.105 li
304.007 305.958 li
302.831 306.698 li
.65098 .14902 .211765 rgb
f
307.494 337.047 mo
305.546 335.099 li
302.831 306.698 li
304.007 305.958 li
307.92 301.105 li
307.927 301.115 li
307.494 337.047 li
.423529 .0235294 .0431373 rgb
f
302.778 306.142 mo
302.732 305.661 li
289.311 273.625 li
288.91 272.12 li
291.909 274.707 li
307.86 301.005 li
304.527 304.917 li
302.778 306.142 li
.462745 .0352941 .0588235 rgb
f
327.841 372.113 mo
327.593 371.955 li
337.758 368.833 li
337.798 368.867 li
327.841 372.113 li
317.694 365.637 mo
317.667 365.62 li
316.991 365.398 li
326.095 360.78 li
326.215 360.82 li
317.694 365.637 li
.65098 .14902 .211765 rgb
f
327.593 371.955 mo
317.694 365.637 li
326.215 360.82 li
327.953 361.399 li
328.136 360.708 li
337.758 368.833 li
327.593 371.955 li
.423529 .0235294 .0431373 rgb
f
327.953 361.399 mo
326.215 360.82 li
326.095 360.78 li
326.857 360.394 li
328.057 360.641 li
328.136 360.708 li
327.953 361.399 li
.494118 .0313725 .0470588 rgb
f
305.817 361.741 mo
305.568 361.66 li
309.473 360.619 li
305.817 361.741 li
309.473 360.619 mo
310.091 356.745 li
310.296 356.799 li
309.473 360.619 li
321.472 359.519 mo
317.884 359.342 li
312.084 357.354 li
312.526 357.394 li
313.338 357.611 li
316.73 358.309 li
318.583 358.797 li
318.606 358.695 li
318.609 358.696 li
318.583 358.797 li
321.472 359.519 li
.65098 .14902 .211765 rgb
f
318.583 358.797 mo
316.73 358.309 li
318.606 358.695 li
318.583 358.797 li
.423529 .0235294 .0431373 rgb
f
312.526 357.394 mo
312.084 357.354 li
311.065 357.005 li
312.526 357.394 li
.494118 .0313725 .0470588 rgb
f
322.963 359.592 mo
321.472 359.519 li
318.583 358.797 li
318.609 358.696 li
322.963 359.592 li
f
316.991 365.398 mo
305.817 361.741 li
309.473 360.619 li
310.296 356.799 li
311.065 357.005 li
312.084 357.354 li
317.884 359.342 li
321.472 359.519 li
322.963 359.592 li
326.857 360.394 li
326.095 360.78 li
316.991 365.398 li
.584314 .0509804 .0627451 rgb
f
298.393 330.307 mo
297.319 317.525 li
297.801 321.257 li
298.481 330.248 li
298.393 330.307 li
.972411 .82173 .810058 rgb
f
298.481 330.248 mo
297.801 321.257 li
298.926 329.952 li
298.481 330.248 li
.737255 .227451 .27451 rgb
f
288.718 336.757 mo
284.596 319.537 li
297.177 316.428 li
297.319 317.525 li
298.393 330.307 li
288.718 336.757 li
.819608 .282353 .286274 rgb
f
285.494 338.906 mo
279.95 320.684 li
284.596 319.537 li
288.718 336.757 li
285.494 338.906 li
.980392 .52549 .498039 rgb
f
292.372 289.084 mo
291.841 286.484 li
291.89 286.461 li
292.372 289.084 li
.780392 .313725 .341176 rgb
f
295.728 307.354 mo
281.166 301.135 li
284.1 290.113 li
291.841 286.484 li
292.372 289.084 li
295.728 307.354 li
.921569 .4 .352941 rgb
f
275.496 298.713 mo
275.261 298.613 li
278.246 292.857 li
278.513 292.732 li
275.496 298.713 li
.972411 .82173 .810058 rgb
f
275.511 298.72 mo
275.496 298.713 li
278.513 292.732 li
278.587 292.697 li
275.511 298.72 li
.921569 .4 .352941 rgb
f
281.166 301.135 mo
275.511 298.72 li
278.587 292.697 li
284.1 290.113 li
281.166 301.135 li
.992157 .603922 .545098 rgb
f
274.068 301.472 mo
281.777 304.108 289.139 307.596 296.412 311.242 cv
296.962 311.518 297.448 310.689 296.896 310.415 cv
289.528 306.756 282.103 303.353 274.163 301.128 cv
273.94 301.065 273.852 301.398 274.068 301.472 cv
cp
1 1 1 rgb
f
296.706 311.271 mo
302.5 307.792 307.641 303.755 310.979 297.767 cv
311.338 297.122 310.334 296.539 309.991 297.19 cv
306.86 303.13 302.052 307.296 296.497 310.913 cv
296.274 311.057 296.475 311.409 296.706 311.271 cv
cp
f
296.42 310.02 mo
297.239 320.296 298.387 330.561 299.299 340.831 cv
299.345 341.345 300.139 341.361 300.114 340.831 cv
299.624 330.538 298.549 320.13 296.855 309.961 cv
296.815 309.716 296.4 309.771 296.42 310.02 cv
cp
f
277.423 364.576 mo
285.143 367.746 293.228 370.252 301.42 371.848 cv
301.97 371.955 302.203 371.108 301.652 371.007 cv
293.361 369.491 285.54 366.723 277.518 364.231 cv
277.293 364.161 277.216 364.491 277.423 364.576 cv
cp
f
301.645 371.648 mo
301.679 374.081 302.394 376.947 303.315 379.191 cv
303.517 379.683 304.225 379.396 303.994 378.904 cv
302.998 376.776 302.155 373.995 301.96 371.648 cv
301.943 371.45 301.642 371.443 301.645 371.648 cv
cp
f
304.586 362.266 mo
306.168 362.005 307.634 361.322 309.204 361.017 cv
309.634 360.934 309.455 360.251 309.022 360.355 cv
307.464 360.732 306.03 361.488 304.487 361.908 cv
304.251 361.972 304.354 362.304 304.586 362.266 cv
cp
.419608 .12549 .243137 rgb
f
298.067 343.47 mo
300.64 344.366 303.162 345.3 305.689 346.318 cv
306.115 346.49 306.418 345.772 306.003 345.573 cv
303.553 344.399 300.86 343.513 298.185 343.042 cv
297.906 342.993 297.795 343.375 298.067 343.47 cv
cp
1 1 1 rgb
f
305.538 346.186 mo
307.861 345.295 310.009 344.008 312.036 342.577 cv
312.457 342.279 312.039 341.578 311.632 341.885 cv
309.652 343.379 307.544 344.627 305.406 345.872 cv
305.243 345.967 305.351 346.258 305.538 346.186 cv
cp
f
310.344 305.859 mo
313.343 307.143 316.533 308.066 319.649 309.019 cv
320.135 309.168 320.338 308.416 319.858 308.261 cv
316.776 307.268 313.65 306.202 310.476 305.546 cv
310.298 305.509 310.155 305.779 310.344 305.859 cv
cp
f
319.389 309.251 mo
323.929 306.521 327.948 302.868 331.623 299.084 cv
332.047 298.647 331.374 297.975 330.956 298.416 cv
327.3 302.277 323.248 305.578 319.164 308.959 cv
319 309.095 319.211 309.358 319.389 309.251 cv
cp
f
319.376 308.935 mo
316.889 325.052 315.762 341.368 313.374 357.488 cv
313.291 358.049 314.093 358.164 314.146 357.592 cv
315.656 341.366 318.442 325.248 319.854 308.999 cv
319.877 308.729 319.418 308.663 319.376 308.935 cv
cp
f
326.197 328.351 mo
329.453 330.767 332.792 333.032 336.162 335.288 cv
336.659 335.62 337.132 334.812 336.631 334.485 cv
333.245 332.275 329.861 330.096 326.37 328.054 cv
326.174 327.94 326.023 328.222 326.197 328.351 cv
cp
f
336.94 335.079 mo
338.579 334.155 340.342 333.41 341.893 332.34 cv
342.374 332.009 341.956 331.267 341.432 331.55 cv
339.768 332.449 338.347 333.752 336.774 334.795 cv
336.599 334.911 336.754 335.184 336.94 335.079 cv
cp
f
328.059 360.715 mo
330.888 352.16 333.617 343.637 337.413 335.443 cv
337.759 334.695 336.643 334.042 336.302 334.794 cv
332.528 343.092 329.55 351.692 327.935 360.681 cv
328.059 360.715 li
cp
f
288.857 272.468 mo
290.523 285.308 294.092 297.963 296.043 310.792 cv
296.154 311.525 297.276 311.217 297.16 310.485 cv
295.157 297.884 293.245 284.535 289.109 272.434 cv
289.066 272.306 288.837 272.316 288.857 272.468 cv
cp
f
314.954 278.452 mo
315.866 288.56 317.774 298.576 319.037 308.644 cv
319.143 309.491 320.34 309.344 320.203 308.486 cv
318.606 298.467 317.368 288.336 315.235 278.414 cv
315.202 278.259 314.94 278.29 314.954 278.452 cv
cp
f
274.019 301.286 mo
279.598 320.451 284.856 339.697 289.627 359.08 cv
289.763 359.634 290.615 359.399 290.482 358.844 cv
285.827 339.435 280.49 320.186 274.322 301.203 cv
274.26 301.011 273.962 301.09 274.019 301.286 cv
cp
.760784 .207843 .223529 rgb
f
274.373 301.216 mo
278.76 291.416 283.771 282.021 289.15 272.733 cv
289.45 272.215 288.645 271.745 288.347 272.264 cv
283.019 281.552 277.818 291.033 274.02 301.067 cv
273.944 301.27 274.284 301.416 274.373 301.216 cv
cp
f
288.793 272.388 mo
296.773 279.616 303.635 287.754 309.737 296.618 cv
310.074 297.107 310.881 296.642 310.539 296.148 cv
304.394 287.267 297.559 278.798 288.967 272.163 cv
288.838 272.064 288.674 272.28 288.793 272.388 cv
cp
.419608 .12549 .243137 rgb
f
310.427 296.759 mo
308.958 310.612 308.799 324.736 308.376 338.654 cv
308.358 339.252 309.294 339.253 309.306 338.654 cv
309.593 324.708 310.876 310.703 310.713 296.759 cv
310.711 296.571 310.446 296.58 310.427 296.759 cv
cp
f
298.339 343.294 mo
300.73 340.95 302.819 337.885 304.162 334.826 cv
304.423 334.232 303.592 333.876 303.339 334.479 cv
302.016 337.621 299.834 340.212 298.104 343.112 cv
298.016 343.259 298.218 343.413 298.339 343.294 cv
cp
f
303.677 334.632 mo
306.707 336.79 309.502 339.578 311.787 342.509 cv
312.14 342.962 312.789 342.321 312.424 341.872 cv
310.029 338.928 307.107 336.296 303.85 334.336 cv
303.658 334.22 303.5 334.506 303.677 334.632 cv
cp
f
298.38 342.934 mo
300.146 348.998 301.804 355.08 303.772 361.085 cv
303.938 361.589 304.73 361.378 304.572 360.864 cv
302.715 354.815 300.56 348.881 298.504 342.899 cv
298.38 342.934 li
cp
f
309.399 360.716 mo
311.186 354.8 312.094 348.758 312.519 342.603 cv
312.561 341.998 311.613 341.998 311.576 342.603 cv
311.203 348.676 310.225 354.653 309.013 360.609 cv
308.962 360.86 309.324 360.965 309.399 360.716 cv
cp
f
273.116 371.368 mo
274.36 368.985 275.977 366.702 277.65 364.602 cv
277.97 364.201 277.395 363.748 277.089 364.169 cv
275.441 366.43 274.199 368.789 273.042 371.325 cv
273.116 371.368 li
cp
.760784 .207843 .223529 rgb
f
277.118 364.559 mo
281.575 363.31 285.89 361.687 290.137 359.855 cv
290.74 359.595 290.22 358.696 289.617 358.966 cv
285.465 360.83 281.25 362.543 277.035 364.256 cv
276.853 364.33 276.918 364.616 277.118 364.559 cv
cp
f
289.532 359.263 mo
294.586 360.333 299.664 361.293 304.716 362.371 cv
305.446 362.527 305.733 361.373 305.02 361.268 cv
299.887 360.514 294.77 359.639 289.638 358.876 cv
289.39 358.84 289.274 359.208 289.532 359.263 cv
cp
.419608 .12549 .243137 rgb
f
309.96 356.998 mo
315.423 359.271 321.508 360.317 327.332 361.185 cv
328.001 361.284 328.284 360.257 327.614 360.165 cv
321.67 359.341 315.922 357.795 310.032 356.736 cv
309.857 356.705 309.8 356.932 309.96 356.998 cv
cp
f
307.261 291.832 mo
310.348 287.601 313.13 283.248 315.379 278.512 cv
315.54 278.175 315.042 277.877 314.873 278.217 cv
312.556 282.875 310.056 287.452 307.113 291.746 cv
307.05 291.838 307.197 291.92 307.261 291.832 cv
cp
.760784 .207843 .223529 rgb
f
314.89 278.446 mo
320.231 285.392 325.819 292.117 331.371 298.898 cv
331.635 299.22 332.079 298.763 331.826 298.443 cv
326.398 291.591 320.713 284.976 315.081 278.299 cv
314.993 278.194 314.806 278.336 314.89 278.446 cv
cp
.419608 .12549 .243137 rgb
f
331.509 298.555 mo
326.967 318.475 322.805 338.472 318.061 358.352 cv
317.869 359.156 319.09 359.497 319.302 358.694 cv
324.505 338.942 328.548 318.777 331.688 298.605 cv
331.706 298.489 331.536 298.436 331.509 298.555 cv
cp
f
326.081 328.699 mo
328.634 326.653 331.327 324.78 333.883 322.732 cv
334.29 322.406 333.709 321.82 333.307 322.156 cv
330.805 324.237 328.449 326.489 325.95 328.567 cv
325.857 328.644 325.989 328.773 326.081 328.699 cv
cp
.760784 .207843 .223529 rgb
f
333.536 322.492 mo
336.282 325.403 338.885 328.535 341.225 331.781 cv
341.557 332.241 342.33 331.789 341.991 331.333 cv
339.519 328.008 336.802 325.068 333.658 322.37 cv
333.536 322.492 li
cp
f
341.536 331.924 mo
337.945 341.712 334.608 351.524 330.69 361.196 cv
330.491 361.687 331.34 362.049 331.553 361.559 cv
335.686 352.042 339.497 342.134 342.143 332.092 cv
342.247 331.694 341.674 331.549 341.536 331.924 cv
cp
.419608 .12549 .243137 rgb
f
272.988 371.621 mo
283.189 373.75 292.963 377.616 303.183 379.845 cv
303.811 379.982 304.079 379.016 303.449 378.88 cv
297.459 377.588 291.531 376.057 285.686 374.214 cv
282.358 373.165 276.519 370.028 272.988 371.331 cv
272.861 371.378 272.83 371.588 272.988 371.621 cv
cp
f
303.477 379.824 mo
315.897 376.971 328.082 372.85 340.069 368.558 cv
340.628 368.358 340.388 367.46 339.822 367.662 cv
327.775 371.948 315.534 375.51 303.355 379.382 cv
303.074 379.472 303.189 379.89 303.477 379.824 cv
cp
f
305.637 345.726 mo
305.306 350.999 305.41 356.309 305.105 361.593 cv
305.07 362.199 306.019 362.199 306.049 361.593 cv
306.31 356.382 306.953 350.844 305.876 345.694 cv
305.846 345.554 305.645 345.596 305.637 345.726 cv
cp
1 1 1 rgb
f
301.46 371.687 mo
311.306 370.424 319.49 364.378 328.595 360.903 cv
329.16 360.688 328.906 359.768 328.344 359.993 cv
319.252 363.639 311.145 369.388 301.416 371.364 cv
301.238 371.401 301.275 371.711 301.46 371.687 cv
cp
f
328.498 360.328 mo
332.218 363.026 335.947 365.708 339.658 368.421 cv
340.233 368.841 340.819 367.862 340.221 367.458 cv
336.459 364.913 332.726 362.096 328.715 359.957 cv
328.467 359.825 328.278 360.168 328.498 360.328 cv
cp
.898039 .341176 .298039 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.2.0%%For: ( ) ()%%Title: (1601.m10.i304.n084.S.c12.210619630 Cartoon minerals and stones vector set.eps)%%CreationDate: 28.01.16 16:16%%Canvassize: 16383%AI9_DataStream%Gb"-6k<^B9ehI$XJG0$f$6n+_(s.Z0U0ruj1dOGQ@:mjbnQu+%<`M(88E`([N1ue)BBDJPWj$NBlGDkH)SKafg+5aRJ$rU`^oFQ1%aso#E<YSV3jQ.\kpTSt;GM^/iG[<jA3@)I+fKg!=N5Ulc+dqKskScAe]nYD1B%f^?mrW#.h.V#@>d7X>drhCMiJH^.ea%A<V^ks&%$FM0u,UGW%X*$R>Zl<3#-&!1Pj.Aopb7=/qme@Zhjl]SF>-`I`$VQ,'!SDa=&@G:=NT?/hr^&8>45I?rXW#GS5<q\9&fip3[kueK%6NMN&`s3,\EP81@l<QHECB+M[]7(QT&9+2JYb=EF8MCTHr\3IVq@2Z1N;O!fpqHj^qbR!TF7Cl69U!T:E=.^iQPc&3_Gea5B.&Z,%_aPdBEdFK\f=F$)SuAY46'[#;1+.c$=V\ubR6?*;Zkm[@`:+&K1)qC!8N0f76QBrBfT7:\h$/hiIoQ*5>HU>!/*^uohakAKXo8]e%'LY?BTrf-E]&(/;<kCUj$(Fo:S.hZrf4"Z-hdg";]XFM/rhTTTX^0Mi+L+DLLTK0L.?+)d[+@ia^N>]*Q;2DMd[N8WMQDmS(bqg!%&r7[e/AWtBIlU=/)0J7ho)qJuYLprl#KNNW+DV22S.#\d=h@k?2RcdgE!6tVU1/JrXqh7?.s!=sr^0-`.CR!kop79JE:7uCVMP;r%4i^<6da*SAZ7p-i=c=4-,_$'577$:0TFl=A9V:uBP:+_jf:j[Tn'@m95ZaF7k0b](U-*)R4a;(q2L;K)ZXbW_,"3`[]<:cmf4Y7:%MlsDa.t$m!Hpf2b\[GOh!T8;H-DXXGri*d9Ec'W$+$rcoeb]=!]g5f;Adl9"ejT+b?8l&r@4C!unM56hWO6$-]g#c5q?*=&5b>fB%#cMrc*/k/Td/n?M0aPkAkYhItO(M1PXu>/H5h`SgpSZEAod<G`lTJ\iNHRj.bnr<Be%:=VkdY6js)$fu8p/l'D>-(+=3`MbrGdQ6%okA;%P?*@/9p:X*,GTB3i5kP&Z-sebIN=B)&k(JdNu-:1okM%>[49_D\:ouhhOhjfm.X<VS==.cMTblW9n:XU^b4)"F#mC;ca\8Y%iE)Gb,"\M2"kB&L7]+%5IqkX\l"](+!+p^<nj^=HBaf+&erg'1Y86DLp/e/m:UR-WA?":9#f)_m<P/)mJrN5-,>2+HU:#(uV?NCT%%k'Vof<Y:M?uW]p@N#"jHZ]=n,g^"7ZiAF\[Bt4#P!4Su!^F]*"cO)$p9/0@[U$Us)YGF>$3G)!eU4R$K8ORuD+<5rD$6S0WRcuE%]nt&qf4GA;7K48)e,=ufDCkTcL@P+GRopT4=WW=nU"+K(k\%<UX\=7[C(14IPFGr!F,<7QYEg]pfgo4a+-)$W*.H.=ric-&q*22e%rm)sng`R3(/[(\$8;S`K8J,R01^*a8a@0"QOa=(&4gQrLWYT4lK.n5SQ9$[bXkRXS+e<BaoU4pl5-kN&NVpV;1lZ=\$JoeM(**I2%ag)#r*!6+aM\0F:RJ>jNNh1(QDa!$P"3WV)ro#hV1D+Bq)J=c,p;72dm'%Rl$EDBFCta35=*NS!/N>,dA&;^..>sa2Yk?d&6SMX/%'M?[r$`_HC6>*d^#k[("KZV2leJg*2jQ<dG(dNO0*a,8i0'ENsLNUBD-iEa->p-[QLL`V*<T.jIJ-87rkMD0`-.hi7@9OpMMhGf,%0R\>c,lB#'VG^WNLpMPF<'-#&BacbhSMJGbj1e^91gA3?):Kd>>%C<bN+nD/IH?DZp]_V"'---u@g[6`2eR0<p,UBd+L-af5P091%U(rZ[s3^c^l5*!Co`r1IgkDi#DDA<oW0/s*:3$\'oS93*YP0C>Q7j)`*b`5^VlDVLPHgRs^id(Z'ckrfid>?W70b0Mp_c!COm(,n%*AU6`No$<Nk[./7cNm9Q89*r4`o0e!!]f?AZSFO6Yks2_FU+0f'C<U?C\G2aVq3P8"[-):*8rUT^!Q?->!8Ic53kp@M>rKkJ,"cI%Cp=%HHZcH]pnq[[oqhh-hY6ei]H![]1Ral;p,cpsH@2P;+4<"@D^JWdSP=lh59n9\*Nacs;e4:tigo5QT+hH>N,#\gG#V$.3s@Q+%CFW`GFRNQb,5JnlHVk-B'EA"Q$p_Nl21JqsH?PBIj(FPs@6T.hHM5c7Pn<:T(ZmK[X#[DV[EgP!%]DPt48[IZ3Arj<m(B]K[9IA/%>mHjk?c%ZuXo7#c0@k6e44=REp7'!l(H;+.--s+d<,eS@b<")>$\]aa($Jk!s6hOIELu6@NQg%oH'10J:Z;M8\Lj,l?M^05-i*1c%n7.2MO1'30hq>VUhsm?J)k-^TBj3)gHOb:7_0n9^McIFUlT8ZC?i9!5m%r&,/trI5s$:_qG9T8Hh5]D`B=#;2r'^MlK/@3FkmNuS%^[[W6gnCr+6[pK<ppp\VS\1@IY8TKL-Y33Vp1'0=rtV+'ElTE>chkXU`+NE,pNsU^4Zaeb@dcY05'Qm8hM'6:a;3pp@Ec`"mN'<6%I#E@"8J[edEd7*OZVI#POIZ,0]^V1L?%06Kbe;hhbhc*O<O?@:Y@mMh\^fQQm`N-_+-+pkm&cT27dGJ`H'GhLpCd"2VcD=U3rW*r%M:VMiY+hW+:p]o1juTgcr*#!Dh+)YPj%MSW-O6oM"ZMe%1:Ou/G3s#3I>\1Ik2':h?fRQOq"&0uS5=Z@-/ZNhDI;\KK@u+Tr%%>S%*5:IDLm#(h+f/qemc]a*rA4BM,R80:>j5fI`kV_H_a7ATE"Hn)T<\%A`%O0]3J7H^_?'A-Y0B0->gVa>r40DlBFH$Hd&E8`7`0cm%'<$uLJ$8n%Ia&WTE"H<WmECbj^e`T'B[4&b>+s;YoVNV#Yb>N]rGZT,3_<mq,?-3pnQ5&sT[S\opfF/$LK-6kXEdU`g1R-;%/riW%][j/BS-[YP3edT&YDW`;Mdm<jYk5dk3!S=ALUjSg/<3#D>-ZM4prof8Ia;L8hsXXR*8D8$AI_$@^;3)@#<9r@bP75*+_F5iF++\;%M<)nL6&;`2lO&Q&&7^i**/+)TM48iFYrE"D<sKo$ms>V_M71X1DtsSB+WTDopX\VF*e\K!q0A8'Dfu\dn-ojo35Atj(&:Ym6@>>F%*)=$+fEcj;f=p5J?;?Li/a32sl2E'ff)Ge^s*G.KUrgCNNG4O)F.?KbnbfY;qRkbTTH:PO^?"<nq.@AQqHK;#/.C$M""!mn%Ff3q%(C"V_TG@as1C[<X%1S3qlDrVd*SInU:CHddXj,<=Hs2o8Km?jhVn"TZp2,iQO55;V(Fo@Mhi@^T)d!IWEM=WIIo8XGA%g6Ns/Lg0%N(][hp5:,@iT0d#%J7P*V!n9j*gu:XH9G3YIQ`2I)e\adXDPXZ9ROPKMd07ZD&2eB[5n'Wjm35+>.W:E41RGh#5[k&9Y^Me)ls,U%k4f:A:(&_[R#/YG\AD]p#K0#0(3`%AZ$1t9KJS,G!f2mqA1i%p@pH)@s"Z5%]+(Cks0ps<lS"dts-1U^q>D*#'"<7H?b6*g=l`'p%gN<"E[r[$ugCY5$RD[a"?BLl7[rNkMS1h<>i_1<Re\Ds%+!*Z4/UgIn;\aY&Feq"\k_>)h#kRT.q!=hQg+]cb?20B:FnX6(=O>c7%(f1H:T7ib`l0KcKrV'dM\TM=a]@sADoWA9dr$>V$D`NG'iR7_F7;lPdVgY,AqsSNEr_K+:hRZnW=>"bJ5Bt6>@kTs6(L^V9=AF&!%M]L"@m#L1O\o`G,@lY-d`K'%ha3mO9LO5=,ZgB<L>O58573uVB.h7JCb/H!p@[GM<r*Oc`DZ$"rrd(tWl,*%"!O';.c&,Bn3SZ6[%nt'uITCWW`*$S=_Q:eiN*]'5r*]>$Pqn!=[n(VL0ia05"0q(HF%7AI@'q8:FBSs^ZG:$&s=d5*cjeP=*aeAT7r.a7+SFi^6=d5-4%[[cD,f`/67-(=@?QeT+.gkMb%hZf]O/K<G/W^^:_DR];u[aEZp'/s>9`MUE=EKo.A54.6BUXu(/gL>>WZN*3pe>1c"k]Q[[XOq%c%rNn%E]LpVk1g5^]3Zo$4+b&.P;I;tr_6eU-9$8E@T;+fge'\U8"L\9T.IfD4/JI$[5:m-hSQ*>[p\9F?H,k.iYNW[gZ)CqZC);f^%`M.O\W*T=09GY$o7IB)5C):KYK%;Qu63\lI/8>uB'?Me?(LuqOWa1",8bi,e9]i&@Ou7<>03ESs->tYgQ^@5lVbZb(/[g%iSb\/H%j?%V(HLXW,B.SI;?cdM2S%u\NP4/1!e,283n+JgAhn"48_ZT"<7]T:c2(s@1]U5RM0Dc0Xc`8_r_Um!/?5Bd7BCk6kk2)@TY*Jg_%f?-)9i8R?H7go*fahRh?1>i$GQ>Au?)F+7s58s&D?>H-\Hd:WYk/E7p^W2#\5FbcErS)]&k/6<$_9s^aE;S)`R9.e.><?A[8fbU'%K&5(:c>;d4;<'HagOCIArZCq1Xb-%fiPTm:;:e5XoTf"j<a`QrL%&`_ki?!4$23n#?JY\m(#@7TRm,V_@hE7jfiU4ic9<I4F0p)q%iRqj3BE+)d^jkr2eo+ClO;=+3q+W$HBI,q>\s37#94(X"js5TW12=J#"T3Jld!=TfU(Zr3(9j_?/FoJ.aC-.>eXW/kq2STSWN?oH%>5csL3]LSBHd*ac2>.8b;YZG'7m?hSj(u3Y/PIXifs<[Ab>mk'?KE..rqKu\U"Qo#jL(#>D!Q"&]if<9;iH6VHo5p;dE?.*E<ZdC%_[1hZYTL&$Z`?92Ip\-:*582m?JM),=V<shmZc)b?Q82I%c!uP$&`0GRPHP*VDrRbV7+cjT\0J5it'0`Y'l^kb2V-A5?9@Y&30["%>@0RjC?#.<PeU*Nan=B`?6.,aou^m)9-<<W]cnioq7N%HJ*/\Z7J1VIf)-!&&NR[9m`uJ*^gTu6&NNthiXF5T,8Wp7&)r9*8[#+C%mqPO?<hT(RlK@'2#0hP-,4t4X/mkI[NN2SucA=)-VFAMs+W@W,R2.g3,%m@:b[ZbkrSa%ALN99FiTYR1RD."HU[OU.c$lGeM^;*(%&R$GSMkk'L1bFlf7FLgNP:#f=,Y_$QR/<[.aF;sPajJfYM:8@J:=k4t/@RJANpAc=:#G$cn_(2Bigoc<`+&.a1[0h3EPK#1Dt1jG%DnGk,GiSd%E;KECkl6*A^dm!dlO[1GT?uB9f<mq^gI7TjQ<'r-Ir.1p$$Nnp*<"YS"oJ)4W/c<LFRF:i)&dS","WKP0;Kcke&</^%b27Rp_nq1Y*)7MpVd/S8=K/M!HW!'Y:0srCoXid72N5M&HstNuC1I^@P:0rIGRfijJ+YI,1s)p$4%Q&74+'"cZ]?k`HL6krclKE*%(j_;crmpA*rbCNLq\."7J,'N]^+;KQV\VKKs+-OK0DMf=Nr50PAfcD*5#)ji$i[O22iY$Wrd0\'pYYqKq>%W]bJH4.:WmG::'0;H%4m"GW[he3jNdoqr&[<l2QN(1-Z3XS3`#>qYAq%RPAT;,N4URf`[f3t4_>[5".#W\\o@Gj3P.rp>Ad04=&a&-21mu&L8c-g,V$ln*%F9curp).IaG1]uf"Cb_!q[#o>>Rd31-`4;Ph+C%YEoHe[E+\"g<3#Wgo*\q!WVPSkQd)EqQrdYWJElakbC2)P=ST4JEs)kPp9e/Y%f;YJsIYDQ$q!](n_&&dDhcml4@f?&3U#]GUcL#hgB&sug:&1?/+DKu_,[W6cqNA=i1c-%ap7(DiD1l%.A,[A?WS]HE8b0uSk#cTo%X>P(bC_!+RB?D*i0<"[,I>jA(MDUB_s"-R(Dg'sQp\^$>07%V'E-;@E[l4Np^[TbSJ#P9r_-!4U`9W2NUsNK:(&\)_)0<G>n6Je(%3=c;V<m.akNae:N<qh>t`Qdf-il'Wp'C4Q]9#"=nCM1iJpegBH8GaL9\2P_ISZK7aVh?`W]^0BY#CN'-_B%g.?.('5?9,+2%0:t8%ofKj!iSk5JKl8)*+kaiE^8ie*/7e!4AVpB"Ah!RZ7heKdJT$_6g01g]Ec;omr5eO!*l;4t%d#2ESEi_3MUn]EZA\"!aU<-@.T3JM%V_a4f'Ze8(]K^Nkmr(o!>JE/WNMK\=3RKDOIsD0d6u7-424>C"K%uq1Us2cM>]&1:/=j6=M*dhFl94q:N;QqtOtT]io"$@*mWC"^%'<S7!osX1f?%g0kJ**I9@p6QP/Q:PB6KS]O^'Xi5$C*?,2b?NS/%FZ0dX01?G&qn#15)EognrsDU'(IR%AEfWaZ';C+P/T+r:Ffa%jC0!]r5Cl?rB"l8Iqf"S\H(SU(,/<&a<F`Hr6Me[o?SN?S4]DAg>+;d`8"ML4Dl'%S)arZ3SuuuRg+?#&JXgNPRpPs[b>EFFUNkB%SLk;r0]AWC%2pjbR#oNHM?r8O8MVr<&pt6*M&-p%+KLGPi<P[83Dm^**%OW2q&g$ElR&no3"pH+$bdUsLKA0c#m>7=\F(FV<tUm>%/saSS`MH:L3ZF$1bt+d(O9'M\8X.WfHFKpgN&#[o6"N&B(3%6M/9/0rM,b93ZM0G1$^,>/d!'s?h)jFN.9cn^E:Gme/rd:mAI@n*%jguj@8<IQb2kk#r)6FWgk#e.t$61ZuOBI]3/0mZIE,\jC30hAcM3A)_8l4FZIc/?3A?=E9&#A%s);"7.4?MD2)09=pj[G$/P#HX2%P:A8Fb2[MRL9-B$-(#H3E#^NO\4?g9@a0H-**C43;7qruN^&2HC_oU]JJkb$3c6:ukInjohpI?=YgBN]mmN'6r%AB_?Aq"hrbCMR%3Y(c]fppf9j+P7n[Dn1mY6"H6>jH,thWIW!46S)AZU\NpI1W?jIlK1Z!Dk<Gq>3PWJak+@.Gj6%;5O$?\(^12s3TJjm9(SY^gd2B%MFr@ESY9t/PWJVT'7Wemk4)CN"X7ROmO9<sC^Sjh2a/%uVU:p%:B4MQ.+Ill[j@/:=HJ#grVoCSVZlABB1I?O@YrHgi6UKF=&S[m%+-'>A5sJM0&\UN7dkr&9CWZRI*,]mU$qAY-Ja%,'Ndk=fZ83#\IH4;?K9g[Q5NgZ<J$Ku7lIEaQ\&H"UKK+eL2_T9T4rI?J5M/TZ%d/V5=:IRlV6].i3Z`nKB'<Yj\K-,+39Y>s,.u-OfB,4s_Ngl4Ir;(5O=FjI>4?jLK=U3=<!^7VDf4NMdVP'&1\e#LMohtOc>qOC(%MN`b,mkY4:T@c<<!C2+qp5bTVYFV1(AJ,5>UYX:/?;gj>V.s;.$9TR8G3I8;E+[<m4'l3p?.QV!q-]>\PDVH<mX:]\T;aWQ%"[9V%lbugSQ>%;Z>UO'.fB(I-@CjS#Hf$%W0Fj+2g^a;ILe[&<X)4*UHDa^?iJ;D>i1Gpr1=#7@;1%VCokN)Ukg0R*F-g[L]%':C?Y?bj%)t53k&3NPTT*&-r?D4Dqqjk2>%.2D_Y%LJhjL7r)L7a)@BkBd&@3pb=(]2md0susVbg">"3i/I@]nD-seV[OSdeecZf:i0cfAS0I%qc?OWc3Cp9/d*-hm_]K-N_rbEi+:;bG.)6*>l`gd?4o8I'Em3iKd2VqM^eedIl<sI*t_TqIsQDZO\[Vu<K(HDf,(@UKp[_h+(o%c%NgP_u[8>=HUENflbsC1,C\8(KeZ3o<2kk+s:UI:j`="4'>Rb@*r%r&nCsO)_7cdcr%,Smt@8$[`YEC6\C`6TRTq1sqQ5u"f03S(Y%[%b*#_3DZc;/_L4qM*S#RFN1p8gK:rC1tPLG?RI[UaLg6K9BXgjbi]AL?h1lFS.P:lOi&GMIg(Z=Lr6AUJNam?!"RRoNG0ZWu[t<%F`gd"Y*4:BGJL5ZV7#s(X&Em-lM]>q#+CSa>.^7_[!'hs)#,9"p:Q<=RTir7Dh`j$<JrQ"Kn@APS2,(8(Zu]UE$hMX,%e^c"\]Ot%?CVGGg(l@Ue@'mqYl+a0&s"n3'@PT*O(li\=sr(&'0F.I$q/]nqhOU^l2Pj2M.3lnjf=$dFBBoqNabpZhu+^sYj4U\f([Aj,^k(a%U\?_=_,L#1Y%/P_N$\f2RC;E"Cml!1VGeY$-[M]=QVeqX[V8Dt\D]&Q]l"3'F[daP:S7C)95Ddm:Fkb6N7"r,h&"R+>rp]#WmPSe%9>D<)Ne9jJ;6<[\[BdJDWVXr>ljplSs*VQIkV9BT7D"M)Q4[d;PVrk,Q0C)M)"b2e\C0,FDEFVp[Oi2j:DN2A>d%qXqF5gR\E=Hc%Yp1Q`oHb1Q0]7Wo+p4>hMGo8>cl:MInZ5mn248(&-X'6Rdu#$(4p=67ZBoq)k)+/Dq@X'7X^5l0Y"lHCe?$GdYj%Q)XN6THR]a3L%q@C8WdS/mM$qTA0aBcka&&9GR'>Kk.Vq^t3_b(Uh,tXRE9c49QDIb"cHF`2iR!O')P#33/`lB7W"XSX/.G5iOB".%,Cc.D#5#r,4%+hJu#78h66]l*(p.<4j!Ju9[4's`/a;!UGT'^.UKW^EA=b:EFnJ?n$,`U/c\a#TANSFrG$b9jDuZ$Nh>ar.@<Bf=kBO$NL3C[Ea+%`NiWZ&]_ruLUiVUbDO>GW8a!Fnl6W:@lcuS&k>K$ZRaeRQ]-5&3&.XsUDOlN?S3%9FNVjPg-oCW!M]aW76K*Oe9d:mhOJ,rYBFG]%EgRKcYA7FqA^dr,;h2#:]oAYTZ'3r$::,U)7N$JT[C`6^'rl\Q^g:0J#=-aK[B:$0+>6-*>XL^%;'/jL6@V,08cfUe[sG<SiJWmp%S@Lh]8C:bV)(GJa-c'&[n6<TEs/D@W5P:2a?GAusAOMQU8Aob()Bg>Cf$':)``X+h_!rtIhWKGu/9t-BZQD,tp+uU9s'reME](1q%36J^eKHI,0nQlU]0``0aM!>_6%b`-0'*(r\"r3A2p]'*GB3SO?>hu(SZ),k7C3@R&^dE9RC%ZJ?1=C^npU3RFlngA*)K-`l@mH?Z%j3n/X)QiG2QsQtW2p9*e%ZE54,F0@QO#<TJ4`^(.4N)2Pg[aO)J.jkaU5ai9e'P=FjSF"emBM0T4IRP=1<5:@-Q)VXQ`U`YN]I::%)X33%`Nr#<:2A[025Tg`kWBa-3Yo"a$#gaK5+"LTYru_IKSfqlQO3p<:\tApbH`^h?u4f"]h=ij>eqKn\,pDjXfdeU;l@mgZI2M.%LYcq-\a]U(+VZOGm@mp7cTTnBWR2`4bhD@j9k,lIX4eh$QnM"YFS/$T<dThJ#qP1rUo#H;_a-)E;D;:7@'n^mGh=_tj,j<uAeO`F%LnLN9B4dO&[HAgZ,cFs4R$U6G?@X.T$/W=h*/T\pA-hgDKE8ECqEu[rS4EoJK1^7(a^el;_9Sk*0\CnP6R#3TS<:r6E.h7JKQBDf%c+sn4k,XUT[I=VfX]Z^5kT(McV:A'ua!aob<c-r,fsU'PD+J!f*SkD`F+LTX"f#BGA"H0+X?tET+C]JugF,sQ6B+,`nu66CE",^U%)>"qqc"l)a&J:Rm0U,8E>@OL7%i+>*A>L&m`fH#(-J4u[56\DoCd<SYD`V2kX#OlgH9/VJ30'-'<ndbH4=S.7PFA<R<=EkJ0k(jF%Fu3&.fT8-+d!jW.R05p`i)!]43<SUd/LOIqi:^RXW>JKGH:H,cINVKq15`7403>dqJPUWEBOUY4h<)DCTeJg?aZqWg7Y`bClTf(k%2?NT4lNE)Ed\iRcU>Dl8S$n]CS#5"eo-E(t&IG,t!7"P'Xcor3)qqq#kU>p3(Z$B@Dhf8)qUeo+K$a^%GB*4b$47'l%l!S8KgeTM%Gq='L(kQ9!,-N_0m3l?K]O/Wks#XJI*JG]bbkp5'pTp/Q;e=7-q-e?%j.XO7G1KbOiI4J@Yu>>d$bn#m,77@_G,EA6^iZW"qu5"H%r.%RcXYlRX-JXin\&s\6811h5C%`=93gd]W'3G<)c14+/VLX8KGH9Q6^4\IcX=Ze90]X)<$lb`,bKOH:H3R':D7!o*?kcNCO$*TH%D0qOmeteZQjgB8E$J,J!J>&Is5_ag$2O%gig3e]5&\=[DCRsEq2urA"_Z?iU)<5h9eEhpIp#u[@_R/#Cj'@dT'Wfd,>M@,Yj&$$m%m;IQ7N@6i]Hkk\L.?*\JRX/-&p5ei?!5e)^*;u?V2$aFNV)`t*3a3^1$kp&=L(*!$'b-mII0u5N8FL"3gP!!-#r-V1@46Dk<WAs3%)TnBOHi#$amIoa=VDnU^4:4(LcLcC7/YR1^*5KsMZK[J/`26:dRnMI3*]O2IBGICH'`uaM_JoWRlqNLD!2.eV&b5^SQP`g33MStr%1;rh+!tqBSCpu^'9"ehFMC;==1ZPp^C&Ft:W.r>gAjXa7%LNYLi8hKYAOEV94V&u&UkV=iK.hS"Q?hu3IW1L6Y6Mpb[U="n*rlN:%W+pC2#a01@[A_II2'pAP!?0e:X<a,:QXb,KQ=I.s$P!TT*IOs-*#cKAdGm]Ilk>H)OX!ms>F'(YI#*Dq?`*[\?I.j&P2>(6[>NLK%Xja]O6`jDoLcr"<;p`t>6!GjKr9D_!7Irpe#e>[bD9u$lXLQ((U_>af1;+@'XN[8Nppc+4D>%MTIGf`j"^;eg7SbMX[U#NMB[nS,%7'a's8eL*0!KR?#6atg@kc'uFkd1/0Di]rtSfOic8^6#HNFkg2Si"31l?9Y?)>C.MGS/dn$[:-9o&Sb:jm9EW8Zj,1>Q=^"YM8Go%M7_U0CWgV)mq@!gX,-#YftW1>?kt[;DP*h/por2dYITJe=K]OHmlC<PX;jXGq>jaFC'C5fiN(!X5C?R;,@;*;L"$]`h'QL(]X#53%?dC->m]NdJ?OPq16ojF7nA2SmA+)gMb\IMKq02@EDTR70(5cqDkB-o2^,YW5:3lWAEJhFCZ"bYqM-n@k`H^SjfRXQ!Q97m]o_'5Q%]u7+j`67#,%mOasO"*W09"n$6&mSC<R3XZpc]bW^j6j\1S^aYbni:;B\J+F#6@=*/SW@Xm1QgHsa.#ajf/]M3mkKr3ft*62edfC`%iu\4g84JEW06mlo!tgU+_SoIO#o?sZhdTopfSb7Z?#?^N_if+@/PEY4m2_O4#G[cR`a6I?a-%8=,qMOJ?'\1HXk2uSU[@;<)bB!l%7QLdG8L*k^js*-4mJ%!VCK1acGmh0(p'a_p(PC8\6s?>JfmSR(3"<+tdG)9ka@1)u24E1i#e1p_W;Q?'M!rl;'<B-tqEaa>HAU4]%MAtN`gM54b8qU!e5gF=R)u@P(g0:@]P^CNCAEljONXJpnlL*V3+E<QV_f,DU3KQcZ:F1Id=8;OIc.^RM40[=Rb9hq37pD,B7^s>:%QAaQFYM=BT$cVea^7;\`-)9G$e(<=9E@E$ONI1A>A2PahWQsI*,0t)t,0.0a&odD!&.PZ&p[M3;[C5.Uf#)Vo=r4kt=l/M0pdi#Y%@KSL\&_1Cer!6n0)j+s_>mWn4>j3BJ[Y'-MCb6`+Jt_:N.JU^!UF.F9UF`7Sr0PLo^M]+)%D"^\A),8H_cO</IP$)o[UX4Lr_XK`%\SUiZ^](b0p7L3S\_"=?FX#k!Y5i!GXR?b9H'1?Y@K)OpKCqL>j"DqX.#>1r??Ip)5&Rno)t?l$$5^dq]eZPSlL(&GZG3ie*4UFo%om=/4OYtq[a4hb]i-[QMhRImCEX*[!YO54Nk]^s2X1N8HOZ@Wl*EdUXT'hK*mp/P'EHUHc/T#a(gbSc^Ft;MbhQ8,Y6hf0.qoQNW%^altN];sPhHZ/B:be8M6>BYdkCqq(I>*$:*pRZ#A@^Wo/:1iA"mR(pY_4<W&H/-HV?GrDc][-#prIEdr=d;nQo6dA!cDF>>pEam%%l+ZGr0"Z%\NJ.2sH+*j]4PX2am\f[QKDQrBDRf:>(KktPVR>D9(&-/E$:Gg#g+%1-DJ\.C\W*rBJbuQgrT<NcE/2X)Ph'(4[%\qk%X&74.ZEJ:i\K$Fm1X!UppLTaQdC,Bep8"tS>o$eVNg>sZ2;duu<qBaFDb\th%_$B6Q=H2<luM[]=BJ<]VWu@hLVpI[Zf6hGHr3+H%/mie*Em(p#N:RU[0/#P&h9X:?#0^?+:3"J-9,O>\Bg")X1.hmcl)n;aT&jd8`Nq&\=$6Isrn8%08r"IR^K!DU.Ne..%B\[DH.afq%_ABD"T(qQtRHH9I,X(DXg9)gpE%ZBUYId*HXiJ3=GuS"k*\F.p4aK-Cn@We^Y=i1to-.6*FB0XJQ0#@Nd`U95XLo0j3iK,6gW-KJ%UAM7$U-:]SXm@(;gafWh]=)b$7tN6=JST8e@\^9AEZNjp=F&Q3b,f8\T)4f$a`1mgp<r3-[(6JcYC!mj]B&XfhOLIVJ_o+5QT`lf%?E"kMG]unapUjA#Pk?(sc7@b8j'BDY.u2!ugZ@j_pShJGo+k]6P5"YF-0&j-$B8&0;%m!^C;oepct]>`.`fffX'6J8IPkAipm/Rn%#L_/mlH)c&\XHaYfNl0P5KL$C9N>1Hlf.kX1O^?Jm03I?CTF#li*&t7]NGoN*^a_tkM$M_d:5OG9:]XPCRKskrO(skYI4)RX.68V%Ut`[g,Fs-eldirM@/ngOG29l/8\OXcWjLmBI9!km6ur1EG61gmQYU27I1Hil_,ia6V1&"b,Pepuj(86o<%n#*@tBSG:8djaqbNcE%s55KcnRk1rUAs@(G3sc6grKEZ?4LT;^XX'=h&ChOXG9jF4mUO+r,$l^:oLK<ngjS5q5U-jh\u@?HG6OFXOjJ5pZl,Fq**a2QQH="%@QXn(&!um=p^:"-S8Q:2Ja8MhG!K:"GQY,s8gr%l^6"\o)nor\FG!5`:,d?J`r/B$PH8Yl'fqqGgW'`;;0_%5)i]743k3theUg*U%?6CY7"XCk)l.^@M\6^qB=5j<(I!N4c$._EZQ!geCa+ONAqid,KR]hL`PnqRV3kk/jLT]&e.j=<Tnh=$-C=Y>1O8,9ji5J-6;^m%2%bujH(C%H/AbAZ6C*^+@l+GuY,RAW1-o0mg>rmF_Tp-gRT*-F%Yk,KE9B(G,ta>@=3esl6,Qb4krlJH,rZi1<$d[1^AdZ?IIcc-C%%H'l/%]Pl=+a6g#5\32'6kDj%J\(o5Sk^Y2K=daV0He*Fk4PSpC_>hBm`0X+\,=dgi7s--%^S]23Y^Cl=/9uroDCcpsm`;HGd;<8o%\632'$Ms-^8*KFm*ALApmu$D<]IY,B@UASFo?8j'Jn7E!gK9f=p%@O_Up)M-;DPhOQ#[\oB.73^eYP4tG#_ju&0tEO(R*e'%\A]!%jJtGH-5YFV]%ea/D`Khi<d"r`>KUq:.O]LfgS[[:3;fe&cGH*ol,OZ!\pDn)cP)QaogN3gI91SM[aqLgk?D04AN/8CrI_4V^!bW7%k'#cXhX-Tg]!3j*%[,T:pf_;l(Oo+s(U&nN[_!H!]u0V-i_DK,>2@;"$E5%?H1::8Q0qt%KDW-_h7`KUJ+lpC'R$+P<fVB.7j>^W%EH'^igPtA<pJ-e$;gZi7-c#\o<jf?H*t6/(qg57.a8N>F3jZ"92ra`%QDTBqcOMkN&Xcu6B74*1\Cdaf,4;AL>(kMqX-#g?[N)h1%?^Dt?CK`$q[SqO4Woq&boXMlIUJK8>:UJY)"I?^*d-3S5Mf@po=LQsIMO!`;=7MQF?84()STa!_B;&0"n[]?i[pDh8M9XSaC*K[Z%q\,;,mRX(`hRH:_?,(QGgRAp8H)fIKPPMP&kJ4dmh`VO'b0rZ!IgWM%4F.A_#B'WmqiF[9@u'SJ]68Et8aIHUf'DGI7dbLS(%M0.%;j[64=R&mLBHR%sh!*4XmKjkEF-Xe@b*B\bloViJ*:M`I>oc<+Tn9tZG1/XOI@K)Ak+YN*FET7ASuu>S^Rk4'pXRAl2&\Qu>unM"%fBB[?1a&,8V\(@tIsN\m:/;fj&+R!Q8TO\ZrkrbgpWL70ZaW>>/]1RF:F<LLd*"OqT=X4Ra&;A28K,e8B<':ij?5.",l`R:1W*Ja%o<7`(Q*RrMd5\g%b&6LFQe@#9MgY6_bhpRRQQH8h-+CXQbA@""Eoh0fJ%8mqnm"ZQO1-b1ZJkDuG&Fp8,sL_%=!s9HPH3,Hiq;"I%bmI,#lU\R.H$uT8Q`o/?]u5nPq"T/V(@Z1uP\VY#gVD!iHlIRJbhkV@F3:%XX-W1^.d?oDgr>Y"f1>\cpM?h8IXfS.TC.V5q7R%5%DSc8_o2b<$*qHGH8,$M,FijNjICb\n]KFN;+,sN2IM+KZo5s-/.m6nooulOFj^mF3j^[E8_G)?GiYPM+QWTHR]fb+p$ee3&s.Jb7%YHG:FE$hXY;OR.Sp-g<l^FEQ$o'Q,J76rs$?7gF1fa`@90TK(8;;*G5(=*@^]@aX)pZo[.,O1]Q];T%sD-rP&_m_tsm/!S\Wg1GK%RHO?Eq(0/S>_WC<?/a,!gQfupj/Q"\[G+^?_7s8=^YHE(2G_d5ID/=A6L$H*&88_bb,O3c\lpc<Y2U&(ep2+Hops%3;SVV(H=QcJ%Z.B9MA/gLU/pYrOo;QNM`#AO"/8R)R`eGJu)FoS\[8G'7mBek8bgX^FT3kbk^jWTNI8aJG`4,&s[bQ&t+h\m+4^POgfB%XFhcj"Y%hd4&m0IC.dPIKP+%UITV?Wm4@NfHW?,H[97[0K,kqhZ]fLOR[PGH7jW*Z<hIT<UC@Y3o2)f'8fDW%`Hph5Y@gRPbmf)!Mr"a5&t<%5E`Lb[&-iV2K,Y@`09=T'\kI[G9i0A$^D!3Nf:X:N'=P<=-7(EI]Ru(C<Tm<UIXs_9l#Z-=uek#5?kf3ls0"^D/2'L8,VXT0H+gN%1b)_kVY_e+hXIYdW`l@-,$c6:,gTNdnmLoSf\]:cXIY%!]n2bJE$pO0'a,&bFQ0LonclE5hL5g6LNbX[ST*bZgKa<(\'scR"a&7R%Q4M<ji>k516F+%$Lke<4j`aY"MmkC4*)CmijL^%^r:Mcog]]VZgIla@s4p:T:\+.@EFIriqH@7<?Ll*/bY`iU?n8NdP-<1"+!S6t%k\B[aG.=Zpn4kS2(uFP2)M.[<\!Q_-'MD)*6EK7ko3!_QHG#OubIcFW74[1r7D<8eaRQPS0<j]Mn.#SQF<"D'-h^Mg1>pXH)^^I1%BM`t[M.D71-=+NK<pVD`eQ6+NO=5qJ^0!gKhVO*6q:.b&FQ3N\`62[bn#c%a*I0,r(25Z(<"1*FkmEuLAMuEV?!Va/W]hF<UNQ&)%>-K#lkXEqQeMgaJ5J2DDiKq4*p=3Y4dO_IW!kTi7Rum[<<eljg/[dlQ+b%qO!j]p`\pVaY`N<lk;Zm$)-bI+NL*!J?R0LXg2XLso%;ELK9`.fa.Or7'O9:e:,Aip6?Y);sX>i,'CL>?Wk!MMYjh1I8hQ`d1V-IQT]>4YBQ;`(\8Bnh'.SA[@oS^jMtE7`*4,^f)L7NimI%?7*FW'$07O??4*aZu_ctVVn_=`![TE]B)p5\i3;jD_JB3`V7QfjuCu)457a+djN#SrdnRkZ`%Q_!^P/.rW4,G$XeCp(C6fEUePr$%j3ND.=AKL(46a-aai.Thn^?Ri>=-fi<h`LknpKUSrk'&h<=7PQAu0GZa`0F^59`>KHD"((/ogKghs6J^9'q_-51Kji.J6O7cskY0%&MI]/77'ce<q?Ri4PSJP6TFY"2t>)rY+ieX;)6pE="]3/PO!Y6+[rK@-",U+7NcHE:SX^*7bga_Mb]MA3#%%$J_cnN)6^ADk"+9Z%Ih%hq*G80j)r^0hG<(gJlLs(uEeKW7\m(-.BtLW%#BoGc</ljbWHY'$8`+:++0.pKGDSGgZQ@`Qm0s8ilumk%PT5*\U^nZq7kBe2%S`!-R2>&pC:VFmheU>S:-2Z7QNgr7$:Qi!2Oi"?Cq-l*[CtoZ`3JIbDdCQ]34W%DgVSUY%jug7#CKU/E.eL(B6-ZIJ<9H?=Nl70j%Y)W1V*JH#ZViC+1CH8SuJSj@fKHf0MN_t[64&lThAahn$q)t^p!ERtOenP:Dq8/3PFV<=i\i[2E/O+b+j5Hsr]me=V/iFp,Q_X=f%Fk;tU"-h@HV+C$m.#5!H.4prac>T#]3rp\ucmM=6Z!j/Ca]3'@#'f!''8>/pW\jfSOLdmjoBQ9X)U.70>3)F7>.;D?CPQ<secbfC%Z6"lChe&>h[LZ'Ap&$h?P?6(>l*hWoj>,:fj/'iNduY*M81'u-mKu5^Ci3/VPnN[5:JL9;o@f;(Z1VE.-[K/G2KFLWT]5c)./(nX%?uK-+a]#Os=?S;]C2O0r`K-&jK?9[;kU0.<Qh#HdK',nGhIukD#pHM?#Pol"qpfg4I&/X)Gh9T=NdZlir)8P0a)!Is598SJWpo7b%&)+Cp]o=U2Ea\3C6>C,Q@p_6.FaSm=IPjLh=M:gC8/qNJf1H,"rWR[qNDgAk``^qp_S/,8ZB%@bBuEMsYV!THj/?";S#`5U_Ss>>%A/;HbJgM?I^I$pFgW[J><b*!44\?o>amUTOmh"42/7_0+rP#E.;>4l3J1gTTTDOG8PSEmACf,38gdV?;cb$S`CQt_f+."-?9k!F-%0Of\E"ID:s3;7tm/6JhWI_TOCBo!`CDX`q6$]uF!H"[WiQTd'XEH/i.JcYg\@:_X1It_#P$-"O$\9"S8=:I[[^!,Ie'8]0B9djG4%_hKrKO!Q9<%3*TpUa=,md%l*6q>*GeYK#FcTR4F41b"FiP7kV%a['PWjsm2JN_%b-PSg;J-JbpG.Y(eq.5$:+jS<_Ug6oSbP2GU<%8I"8"5(1E]qG9%#a8RG@,Vi*$dP_,ogFo+#T*Rc>#/q9uqUfJPK)pJ`9u!SqRZWM+q&$ukj49%(Lub_!S&mA-es<rRhLfGH915C_%MbSN\hOW_K2n'jbAhrd>ip,[QEb3'%><$&L$:_?I45?!c,R-)Q!>c`[V.Qe9$-R<f>(b2JIm5ZWP.0o.aTu6X3?iaa0L>f'+=qdQ%j+rg2_2XTh5Mgl'm'B*PouKQXHPsqK;iO0f^$-Jb>#0lQDp(a&0)U@_Mb]AFcb2cm@aPV(0P5FW(a9B!TGW@l@qlB0jR'hG77;Sa%\qhH9f3cN,&.oEp;j$,+F,6%)Q!J]O#G!ZaD2*LR.10ti+k4gY6IU"2l'VWC(KTsSK?<]GUOF19SThB/e]^14AE#11j)(Al^7Uu*%9h^8,]_5lL+JFT0c*2+1B?Br7olI52.W''i)W!6f\*GTlAFDsQ08]rd/i\ZJbV1qZIiJk#P&(X%SMCRe]jD<&MjK(qI6,2)^\7e\%g=]Z2'"Ep<<qgdH9O81WBdadsJ_5a@K1$P-N1C3A6UH6hPkSSU+AHG('MdCL-7'D-HW88q$BR9L6Y8'/s+dA!gHsGZIN/HCMLjj3%o:?jb\<T^KN[Hf@3tP.VLHTkY+%DD-.Urd#g6_DUkq[4nkkSbZo+r'>"%fB4DYRZj2-`p=X0kNF,q#<+f0.5DZhM=^eV7ORIqN8&%o3ROel(dHf-4IE>2GVL"^N]"'S=aDsP&Z!!H8#nRA!N0l]mPQ++6Qj\*-npR^tmOk0<rZPHRl=EnGI)oemetF(cm].:')!\B1`8s%h82e-;maR3\d&cBK`G_cfVgSKV!KO.qef6tJ;eEjgjaW^oO?t<QKknFkCNR^mEM(B-\o0lDjMVqXLO&+5)Wq^MQag^h)6(`FK:'"%KEJj#*iGdSQ,j'3A,DNdO"a^"#GVX44D?K;Y*4*JZ2*n_j]]`+,ici>noh"!H&^l;[9K#+X3Mt4_E=p^0\Ek[UBQT&Y?F^?V+D<;%p*"LCp=]amW4fjWU,ZG.),?'j`q+eRSZ0<2KqS.*6'@H29RSu?([nlLhX0A"q[jiZq6j_\2XQL$T.>Sd^m@4KW##tM'SGIO9A`2"%Uuc,CAsNWepk#V,UDi%&fa_6Y>gkV^qU5i#ZXYWU+MMVpd-FsLh)lKjSF(kD)[\]&L$2[#^B7A@F:s.IWFYU&"1^crP#a\`8pK[u%Xh%e!ba64O2bEmCe7-n^?-P$JM9"K+\<RQGfJ_W(68CaGe%5eAhq`H\Dk3^r3$ERqJd:&?pi5_4GqcpZ<DVendI"+_Sse_N]Te>@%QFr%`j.mJ'_iaga+]J,rKM,ogZL"]E5uj95cK=@k,aT"9)QLXJMr4&YgHi4`a]rXGDH3<n&odbp*Va(ODl>bOh#rR+Y=!j2E1)+1%Y&'+nb3cl"JB;@]SoE*_&!0l+Llu\A6gWd^L=lb^L3P8YneOpq%+RT5Ls;hrggGrPJ&N_+#,Chq;Z_6Dh+;rtB=HjeQHHp3c%JHu%!2Q]d)s\/g#fp&OR"'GnEYjZjlJ5W!VG"<f0!;J,]&HR(DW@i;hE!a%'8G0kbW@6tq\-SqRsRu#pdsNj(Og]a)kKg+\pMj3D^E)c%ZnL5T`(jfDqu,_T1B!-D;_?eF;h^-'<4M)%mhl)cEJ*jjcBGu;rNpnGOR/E%YfXfp#hlPjICp1A`QOiC6/H@1@Ls#Lf*=[*W"0+`%klqLNrJlBHqi&t:PK7\![>#oE\hYS@\rocOHWIJ'?f3*to\(mY)WZ6k*cr(kkdk]S]6+bEmj#BuWd@9=p/Coudq4lf'T4e*_Ud=o%#m,/28]Ds8&0cj-2dj\c)`b011Sh'OCQV";,-)Mk<Hs?Y!6HWF&Hj,*L8g>#f\FR@_m<ViZD@G&G\=4&NQ:=Qbj(Q=oOr*DHP@34%QS/kn++uLAR$qI?cmZWT"3se;SO3180^O*5Kam[/8*#=MkV)CU']De-%'dc$maJ!32UdX*hm,]*Uq=[F`H\Y]DV4\7?tDO+nn5B$%_#@4VCqN_8S#5n'0;u\rS/SU$P'U)gkLZb@2>tt[8Oi!iAPs!YOVcq>DWP`+`\npua2^921fWM\Zb^1(/btQ6Oc*e/U";K4r4,O9%2]:;,9&>jN:MFt?48Vt&pjk>a(MHH/n`/,>%'8Qp!psgr1:P@ZdsVFl2tKW8q?@<Vlm;@&3RAcF"k7KuYmnm[qtr:]P]QDZ[<EAZ%%e%-"7+b92;N6K9GrYIBj-c*Idb>DM\6S@]0H[tA#.eK&61AS"@$*UbLn+.V,4P=\]Ft_La3K9%Ws;`XIK6#Ds'E`.[><b!?7(&j%r$**mG*H*&BB,"k!#.A:4)pR&3m.7k\ZnN+CI^feR?&R^j_WbE3DIt%,5,'W2c]AE`V4_b$\5nLi`c'6iP9g0W.;P1H8a]!3r'':%&$M'kK^;QFS1K@iih<^$N_O9_U^\QZmba*K$kg478qcM@ZZ02N$WlI+S9/jea4+FIf]SFP)p<j:rgf#$h0,i$9)=PY<'-;#XI_Y$%n3K4#c*p;%>NDUAEjW*Q]\4R+n6tY-d`R,j+gYGF4.<g1I[5h$H^EN7LEa1eWCF8tDCaFk("T5BbDB;k*!)RHm9BY1:5Wc3G]m:G%Kq]KTKgacW%*jCHX^44=[$T9_Zk6EJ3G;(*Csg<&km_UCC>63>)9et%mk@1c;L/No*j37DaIPB"4>JX`YO/`ejD(lp7tk7`1*+HC%D)jTWC%rCHTV4b:qYHWea&BtKDZ%T=9B%jCMXDEPl<8gn7Z$PJb&,CNe:VH4IIN[H(VuPKCthlV\_Dq1Y<RYp/2UJ@3Bl_NRFM2O%cA4ZO\3PRBaDIJ3ja5+9-a&"U`qMF@n*HdUX%.$h+8)/P_9:?r_)^<Gihb1k8*V.>GE^AGd,r\+eYeB^E20`lD`n90\/uD%jU:Nq%ndl?<>!uIs1K=)EGVc'6FLl^5!!9`rFqa<=DjKG(7uqS.IHP<i^b?Dm^Bibl9._h>&"D!JrbU,!DsXMkEclVoI-s0&PMnA^2nU"U%&OiB/`_$Xpi0qR"M?<Bd*$!`_\VER:(V,Qm`RX70p$*JKb@^F\1pp7/9+lmo94"n-)6;Q]]HnejE,4d8dkc_OK9GlHWYb1l9WQ.a%X.'9<LJR,j]2C-+02E4B/80DhM7uQfNnWA4&@4eRQFW3#08H%=GV;Cl--mao=:<-4c,^4dc^[4'gYN7*!QrK>AMA)V?EQ7I\3[6j%3U$9Z<:hOs_2]8>ianUe1nWqn-C%<Z>t-H*oS^*Nk-*H:Au'EgD'tn,G`4u'06)t;EL%.DI.'E;.(8lYIMC,ckSKn/H\Vj8c`J!m%,Q$a^Jb"6OR!$8O0]9dC7r"Y<mR-3E%jq/J/P;=><CaT@?Phg<8%QnY2aL@q2j.Lu#C5q:`CBdH?"3.;:uE*>?+lLI`$H\BBmFK)%looA!?[fO92rc4E0gJ?$A*_aDWK/N2*R5\t6ER0,nXX#)E$(,@X<e4ejX90VOO'p(`mJu#H/iXT"IK*I\V)]s[YMnKM3TU52;Ik*%L6gU:THtUHN47(ZT'eRr5?;\cp>,"b!SBH]Y"f2r&#I\:&HA=If+,I8_aZjBJct=a,nrQNGXVGQp$PGHOP_JG.=u>Qhe[-\Y9N#!%0j`TPWcUJJiU*ON09V78c]E8b+iE.FC(V\b-O5R)U[Z"=G'NoS1+G4]3B$k=IcMX/cdp"'emMl=1.BR)l4+q!'T+6Yb=dKJ80R`-%HM-][V.NS/;9RR.=R.-e8K25N<VQG1kY#<sn.oY;Jkb7]7<`R=Kq+g@%,q1srW"IH?BuZoDJ26d2`PMb*N0o?//KHO1Ngrg?[LoE%5H/tB7kP<+g9*Y^gCLGK'2Lg@$`!64fk/hu/;YB'7_NPB;_e!:D<JC#NIRE:%m8kL-UuQ5<8'f/NuL<QoG9gN]tQJ&^NF\.NC8#@%2p`kJ[HK4!eS24m>N=eue]%p0Xu[LYUQtM:rPjWeDnfJKeg:;j6)1m_A>_$<68.(/4,lEYo)aJ6HeJo@6]8GkgpZ.a<Ih_7Xf]4H%(#<G-PN;"2QOs.tkY5-6hBJpV?-!.5G-cjeSA!H6phXn;e[d=s6uES&Or6<VgX*1>N1R'REo]!E/tK;4/:rmbeuDGG[7Rs?Cs:dU%_6j1?9gHbL2/o(;m])EXnMF<Q,Mdh-Sc2fN?C?ZEUj%-=$Ec;;N0@Iq#%Q&+l"iVs*j"!B%9?Ep\9cD''*L9O5qO[2K7OEtC2<[Z%";WqZTN'Nhri3!uSBY_n2gs5f!,WWfrs#sc9->$.7dYD^9XH(U2UG>T:7Y]61bdhSFt/R;rj<s!$sC$>JOscU]f"#c]qC^sr&UBp%GJV)5ODE-<iH"X!NLI?k6F7T?0`j#rYhRT?CcQ0E^BR0s\D!HnA&=04bG?**`!4hN%-Eth2Om8&lFBNjO`,!b\cY$.?B:J[rER<X%.0>\ukaf'9D`%0>J\Eh%MnYA46,:G;1tjgV\4lQXfj5^])U7[RWrKF67>A2.J+HV!r7lhp'/!d7reh93q0d/\e[=;0XPGsXi\VMt%KE;qSmr*uQ&k'CITRR#L1Om8LRWb,s%_4NC<'@.KN<ukQ8J#c+Qo%QYaE=qR]OBXqo6YlK#8Bo7UI_(qjL&l/qk[Lt>]:sd@r9/+%/;Gh0.$E&s'OiitKTt3-(FSPP4'a-+aeam1enV1!h3m7fp82(.4OoH#dqMdLB.DJ7cMY\a4X1.LT$t0'C`.jbd2k=D;&\VT0Nc(D%Q!u/-P9k"mQ#NM7rO)Vhb/S7u!eD@[W.Z5;%>q9Om72\=7.VY<">S^DUSJ@R@JnNYG`jgEek[&U).J6Rn5"(`Hh6W6E7O?WQfK@`%H</'8XCuPLI<rL7M1&!E:,Im[$Z;=u06t7X6Jch%kMgOse>l0BfFmMEIi.s5s3HOr931S4N(_+/FFM>%5k1`td`j*/UFP(S^[6B9%MF5BX@@mRd-M5M<5[X6R"<..f.<P?cC'Uqp+8X6HC%-:*_#&D6ECJgSc-N4-r*`iC92%lgacC9n+]/q5Ne\-s-o3uo#coGqfYU5L%T*ufdL/fN85O^FkiC7$\9Zk/T^Ym9II!C@BT.Vg'-a*>:``9r+0:#_.B1!"RYcaWMZQWI[<*'0+`K2@]I&'aT3Rn:ME_)I+M70\9%jTbbmYRm3;Y`T5`"ATLpZH1H0:(U^G!)+(nWle_EUkT_OB3fXnQ';g^!($N*.P(gqANloWD,NoY8]`Nh)A4@%84`qIk='o#jH-%7%4LVL['j*"^Ukh8c(Aj#!LfY>JRRea\"ZaLU12W4A,,92*a9a"j;J@@t=%(KX"5X_)7M6RK]5qFPiIN`9.OZtb0H_e86ASPWM@pFM%AU'^e81<sI"i]@L<09]QO0mkOUl>CUdPcsB.AG0pilUbb<DZ,;KRj,5Ks"`])8Zb)Uo:XpJJH)f$VR91"@0q,28h#0CG6:F+dk_9%((\Ud7Cb%M'&k>HLp9Jes%X?p9-k->;;t[iKoZI.!Zib2.SjT8jV4?pb,$DE+pTgss"Lh(U,9/2"8nE`TG:--@Oc=FA<I:U8N\Vl%@7.[U&.2#ZN6W%]=?oTDBe+.,">N0QJpJi&5[dfW&Y:[W$8EY/ZrI=kM.?T("BD.#A/S!O+9[Ln_G.rc>.G3BW^pD%j9=d9+Fsa,%!/Ue@!(as[j<=Y_$B,I,Qo&f77-9UsQ5Q8,S.BTj8)t;*Qo,`heDr#f-.rn33@)e4M4c]<81%DHR48dV%`FMHka:C@N<;L%$5$;k%`3M/;Lm(.VY@9$*K`D3)_Q4YRAHcY,O\ds7ZEQSdPt]1O+D%ifOcNR@Xc\;[&?(3Lg%kg3KdFr>"HukKdMHbXb_6ask`u@Q?l=f[%lWdlUO%Q6I:`8+(8ruXZ;_Xf%KJLW).`Y11Mu^f,E*?+:YX+F\eg\HB2@YVK6s<SqXZ2#pj(U^6'TBF<J@`Z,4LHkp1rU/[m.#s"%k>st7kb'UC9>lqN61c$n'$r0b"9Y#*85!.D@nWd,QC$Q-IjIQP/!"f6=<?]6AeNgZY!?Z\,6[.3!mH5jn0T15gQ]\\Y)ub(%ik6I%MSr<!5N?T\BrjE/.=:5CLm5/X%jgL+(lOjO?-$Q5*%/Ej2i0hqLudPtM9pp20bn.:'cH)!phXL(OHF)$<ti0)0k,qD,PG@;OK+]%%K&XTh:N:6WA?P^@adGOUC5=.p%tMZO!YRVUm\Xj]'k2t!G=GW[S%LPOBSREYQ\nHB`e-Vp`/1q51fd`j?.+or1fQStPGSYp@jN])%JQRek#>?G?%WVLX;nI9GTlS-SajS\3K!q[YbZKutgC7JJ@7VdMCuAEOQ&(8#e\`^TU]aXH7P0WG&pjYJ!aeN3e8gf]-k#@\-4jaK%:^R>f;4n#7B#$sZK\=E`$nR471BJF*>ec.;S4,du8:j/s77J@oH:'Y8&Pn(bNhV]n49dC91(_*<^do6sZpJ%3Z:b>FL`rN.LhS-#%\i01i`3Tj06"tQfTnS"T&0dB:W'!VPC3G>4L(S,M`-=&cOiWPJ@P_[4^^FAK*'m*1+A`\U,Zk%iF/G6oYVsqLJ]T[<V5+Y(8ID[k%@8V(K+<W(eMmW!c^0hoV$B2'j%BUTgBEcGRb>]2R3Fq1f&&Kk(";2_4+XN2dM<)W6T%I;t*XN9CN!:qI4FsUcKT^''$=T1P.\amR%e!X>'l9X#j=YSG1G)3LK^+=&/%djLc5f?c$[`HR27+aau(`<KH;SdbmEWGPgeRT2FkqqlBH16nM)NJfr.+2,s#XaG$@OEs&'4=.k%Es>PD%#3,cE&&PEJdR#K"dN(bZs#nP//286a<bLM`7tc:Y"B6bSk9:(n9"2j+<s0P1sFH%TG:<a\l:Ad4<Zj!6tHp&TGrR#*2T,u%RA""2_jY+kKikEe<5iYg5oD5ZM_H_o-HCujfnmud#Hj^Q->a)!YsCL&rr)LTFNRJ>@MqV2.u1'/2M6I0="/k:FY.8?-*V24dmTKI%7fjTW&5A@+$8p<E"-G9s`DFK`S;=a0&3U3+8dmJ1RSD<MFFbT,)<e&Q#))abSg.\E.Ln(!U;fGqACGIIj.gc'bQ]IK8'M7*6.>6X%4CKfE\cN3Nnd*I)6nOFt#h5$A4@V3@kpBiT/n3HUj--GW"7_YT"Vds!72*tf['P@X)c,jq!mua\`i((/;"H-2$QulZiace8AIMCF%j/d?k7Y`1kO=5jI(lgs&%g9o&!_/iI%.O`;l%gVYZ2=Sm!W5I45PeX1$jT%.ASV4\H4$rL:0(d8:[gVW0MP(U1ZU'><7+giPfOg_%#O5Kl*L4J/!&&4=TM3f8BEbGOH@1O%3R0D4&n*do">i%4`aDbpAM/fO3@f!0aHB$EIV\aeSrj3A.iD#r)RPdGY`<B3,aoS0_k7Q"%&cDeo<10Y$&:*2%`4#c="ZefnROY=2g]b'(&i!rKL/b0D(BhR5l/rpbU*9gu9@SZGr(%BW&1`D*'T![5kY5X:+3^KF-NVcYBa\l!%jcBXu/:nWQ.+q"S2qQ;n]M'JW3>0;l",3UhW^:6Q6eN/VCHWp76"0'+EBsV"GTP[MK<gN8NM)4]n_?55-><$(@l/3pAX!j>Kc2BU%Bh4C]M']/*oE)2=1qdOHiYlc"`UqU:H5)Vh[Ki[,'ZhmNE.mRcUL]I5,"at4(Qh***ArKQIZV?RDn9-*=qM#\E@mQ1MQE5^MGt'R%bWlK"d2#W;5^\<[FGs+M0qB'C4ia&/$)n>O&qaUdiI49UV!*,ck"1Fs9eT0f=;<5t'aUeCQ).Ik?ogpf0g%qc*)FuA"A3?$p-gHi%,ke'm!*t-eNM=C\7)].(O=^*h!#*^'Car9TK3;/&>!-CiUlD4@j"Tt$XX;W;;ufe)A-Z(cUTL%W,oN3d6So"OB<^$Q[T$HdB`aSd%kdT!u&6h/pKj\>'`/A-24AX?*qO"W+0hjA7(DPE\*B4dj8f2)HOsshtfr9Wj*m.=dPL.)\B^LAE`Wf'Y&6r*>@g1Cn"CsTofqtuc%C("/T:Z_0g,E^$J.rK+3+K;5;#iNs$MZ\kpBdLlY6<O@,R!8ph6I?&$A!ZCFMBoc8bbo\A;Bel(TZSt,(goCtW"P@,;.KeZ+WU>I%ZW78Wa,I`WnD:Mp,HDH6nd$+9.WYs?QqAa!LPaFT-p/7o,d1At3JfUD<9Vire.>soPff)Hb&hCfpP`o@P(WFrjX#I6q$-Jr"I>fD%"63dp;4t?ei#'qq-k'Th2O1OX#"4#"Xe!=tD3Ca"n(9nTn8dc6M,]Ck99RK]GMQNAf=4tBrkEeV#T"3VaZsSN=A*AT3.o68Um7aB%%$l<,l=c;O26A4f2C'6W<eV\8JVbf$OYR,STg\5_6mNnk$>kt]b:t4S<K_W2#/R#H%6g^`Aru@)h#UR]&KEP0U*n##BI&;jV+U"e%$q<ce))5,;lsm711#ck0,bcP8-MIS$B@%sI`/m;,a$C,)NJ8tt<ahp0cC^Oq$!i`gh4f]??o-R#Bt+GQ!nPfAm'$mS81'U/iql%0%d@pf,=<d8Y*9o+o/fb!-Pp4>u+pN\1-r5Pb`<;M%7?#TmWFaIm.CArjW?f-mJ</3dOM!&tpG#hf"BnF)'iG@.)B$OcP[>o`8LA(1%alG"7f8;CF_1WKGSFrGOd"k,BALO:@4j"T[2JAM?@nGb_C_&$/CF=Zq-m\3bSH<G^7$fUuU=L9Z6'WmGTG?$nRMCkG8DHp35objs%5WD^UKL.q9(=jYK?nppmV)XSAe0nam>/k6,:1-UA#$Vt-UjC\99>mtW?,6N&<WPiA,iE0gSRAR#0Ll3+&W;oKdY]1k$&qeEH",D[%LL=)fc*TH^!8a!Zg5m+9Q9aI\9S>Eho3f#BP5Q&uiK.QMZjk$;BUp#7MaA]jJoJoa_6@MQ#G.E]Fr$ek1*Ar/9mn"\+eZoT!mU25%4VH!`UdV!\K/nK;jTp5m8&^*[-jeWG%"a:O@;*oQXlq.2TI[+Cc)bF[JFJMq'Cu:M\V[`V=DKp)+fKfj,ce4&W5M@2aum_3=YI[M%e4r=K`sB>G+bP^dEb!>0R[LB.P"6S6/Xe4uBd=:ceP2'(9IB8I]O24>,62CT6t1nT\tti2#AgZe.WD*jCC5cG0%^jFKiDmqqcPDJ%OPI*'ahU0A5kl'eel:==j;GpQ`6al1dqDUpg'J+tb&LIlO&[U&&i)&mE?l)3/O`NME=T+3Uem2l<[-e,;_4IEPYWWd)KcR\Q]((+%84sSoUF_6chJ73!cdh<rr/MQYGg&QXZbS!qS0e1t0tB'b7s+m-)*p!d.2CO["p@i?j(YR8&Kuo,S!Q[!NOUZqTKmcY`l7<Q.LI@T%N]#PoJWVCL"O)<Tg<.dd#0,U>_I=X^5]V#c#tl*dTn,%c=XM/49Rde2(j6dL-;pJQ%8r!-E.\i];k\Q@?kc"-0,3!;K0bO"o#*X?%+Hj*""Ds7!+Yq2JDVT:Ebh`C.QW_QLk_>FU.34O\$1#[,\N*:q6dg]$-0^AX9NJ\E@L4M>cmnMfDc0(J,@[X-1%Sn;#-eMi798N>%e=^;`X^30?c'WOp4>if>7OD17K4.;i+=#!BIrL?%.Eqq9nOLr3Ur:.A/Cf.d1BEXqK@YU0Y`tHD5QYm]qZ<T4esUbD29/k\`DDe"%77;7n2#bNrQ.T)1c*8g4@a=R5>9JpgdG9sDM=(m_nO4%'PF7D<m=d91,sYn[eHJQ'JL+/!<YQhmDb-NT4Gdclj&GC6EEM`][)+XH%Iq/rtd^59@/ZqD5`V#QH=csmu`(_I8qA!g9+baV6GFploMBoPQA1"Bso2H!8o8SVH6T5c+J_#ngJQ9f)C.=mVJlKq+@S/N)%qh#%%>\(2/0$uh")2j?G[9q,)\hnG/TR1756Ff`':QcU%:#Urg!W>tK8eG'8Z0l'^EeQDCB^1Ed7A<DO*De_HA3pXZgE9OM;,i6Q&Xc*7%12`fT9&HI!Atu@=mt#(BB$@q*M)s43p+,ilb#l/J+nDMD`lu"[%?Y&+WC5IE*_2NQWKp'h*/$nKM5>k`eLZP%ft]>2"]o#m=W/ZE%S<_&A1.e-80bqOK5']UQabuDf3\q=50_Ih%#L/Vb3iDP3eZ)N<_H+kU6+TMP!CYEK#:&1ngLYG&glij"*l(:=PF:SgB]VqUZIImm%E<7$iM(GMA.Wo'r>,7!$%*-"YOJt/QOhck-.PjKa6nFaf:_$AeTVtQ?]>W&Z!s-`k8="bgOBA=/bV980SO@Nt=:n-87R3@VbS6P_%I=N.D"3oXrBE^\gBkY<po?1X#QUFCHES+mbRMX60:QVZ!&Nm<bVT4=J\)52nD%NA]I5oAfBOs2h[9@8IK;Og@+;HCPid&gSO2.2a%&I=uDL7&Dc"_*o'P4N^sTb7mU7!(grFE;4+lO=K/I,Uq.D[&YG3gDQ]Is=F[X]C-V`3A[T.=G<\,t.f9++jk6[dl[oMCGO;'2(`N%9Y>YXL/A\l=s?n_MDbGn@nDKuA!M[G='7Z#@29eAL@26rgSE++o6iA#DPT"!DMWYB4K12okekU_!6<Q:<6X!*ZcXM6joH,2$_oF[%q2fmPoT+l#'nXpN=`[r3`>oGp%&TJj>NDnYK1aIkJF]bN+)-JQ/44V66(DI0=BGY<7!"PuAk47:WpH7`.;Z,A`VKs<D&\<G.A.kf%-<-^mJ2W.gJg#3]MCao:A;$q-N`np-JYH.o#rU8'RZnYgMdXa<#BCf?g3tSq.VA(5P]mE_G_Od-NYE(9PELNcqJmi[2(>N)B)I1]%'(H5u?RrA#23I)tjN,.MZfWM'k!#W#IXiaZ.c'j8GgP08^t;^CAJML"foeQc[<,KiMR1h_87oi#R%6&SJY=#f3%IItQ4@l>Bf^L-%k.nV2E?Qa'N*rN:*,h8n"ZI!L<XDkR2)d3\iQK_k?FAK\G:&b_?9HfUqDjR0$>j<A?L2=(XOUMuqd;gM3,>!_;TLHj["2.5HaCAq%D2%d>&N;7ES&Il4NJ0c;ZD*L?h"id#"A4=soW9l'rOAmu1K(U:.P:'t$:r=Y,3H<3@\B"GU9do-'fg>*K/a];[`ZRp6;gO:ksTQR%O)E7#Q7q9$`iSH`R!kH1$S8LG$O'Pqq_E`/FoV[#h(W&%7^gVB0E]';atdaX=I$3j3M'0o&K!;C_*aJg,m/*_WRh?fYWOq;m3+b-%mPYX*!Ncdd:;c]hiVMf0R0O3,$Sct3$b*/N1M=RA=n@:WYgCm,TVs;/`#`;E_UCaV8]R9s82?q?Co"[/A/gWuHt"TnZUd26"DUA0%_-..%39;jdAM%"bTckVZ1mg+/d/XHLZJ,X40r>uREUtSq7Z!:AWj%-g)JMW_,g),[W:4E5XO&^?Q?-$2bCb)JU6sn'"3[qP6<4tF%IuY<N756]_<7@^86=1RDo`1;W?rbQQ!sgn=6Va0b.MfphOZ>(`,_h7G2JkOnp*hK=g+lP4o1>-<Z7;9L'3Vd$Wc4Ki*D@tR)Z05m%Q25#l.7WB+$Yu'#"A012[uS[/A6;$ofT7ZobF[[1@Ul>KK1a]E@p;Z8G"8$4>^0\QX2HDuogq'fLQXQ8[*@HQcoRP*co,!beRkt1%V"ao8gpaCfOt9[`_>/k6)3A7kaR>I`-`Q75Shs,.57M)>%"_4\`)/o#rPZ:7B3"AuAe((-4Z$\R7I1<SE&Y8LZ=UCuf$!g*bOst/%]T9Zr0HB@U6\F,-p7NVia@KiU4WM<1Hfu:lgT`d-0J%rPn0q/`l%QZP=N7*q?C,3/(1s)GIdoIlQXlG[lB,*"b'+sMXf)d^B15dN%iRp7dZciCh4+69_9jGE5V/=T"`qXSq/q5'Uhi@MP1Cp&tG`Q*R'nKdfc_^@?eTs[RW-QD3Si1*!DGHhrg>^51Sp>]^8NXXrUuV?W%^L8GR'.C2D9GpTC-O/rfdb`5DZ1jqkORqIXD'^#K%<a&!+>#]=+O)b7H)48JQu_g[Sd,/'RgDe#1@$B`I>EOf]8@^g,L]eo(;_It%M?Lbq1^X40U.u;j7sQfl]`f[nUmGFHFC>o=1Eh"hYT@a$4Pd0`1>H$f$il&02dq82A)6:?.@9SR3C:NV3sh'SgjO$uR[ifEc9pOB%8A;Ag>$+R1Ib[YNjsOS1arA0BQWntjdq4F!R`n[/b&O9%2N2f]Pbu<^'l-C!!)f8EoIh%J!4ZV]Q\-@q,0f/[Hcog0lFWtD*m<Ph%R;,m]m@2`$h)3rM]%"8DbdHOWHat*dj)uWZJ<8=J&H`-fOt.rsd5KR9W<'(4frkjNO'd:3n@rpSpc31"cUBJ*drTeF`j/pbNaKFN%cf0IDb+!C@lI^f/68'TOh''T[6\>aH.<n>An]o;b(=Hd<Gfr4T1NG<0#1mN'4qIF.3t7]$jpX$\$`oL+WQU6p$GGS59epjJNU/UM%_S>SMcRA=NcMf.k4a;R5_?ZHe)J^fQ]7UXFZEGe"q!r;&0,Y/6;VR/-VhCSDI9Y\`p"k:NiP"b!*ZE:$*=\eZ$C\92B8eN^rdN4T%gSsZXK0@6pkr"<C413D1j)E/A87c<TEJ3o1Z$(!=R^2Z>U6FHW/,&PAS_Auj`Mq@hbec=5&f,CSE':%A5<*k(M/gdpEcjef+hmXa%kkVf",@:)j@/;u`KuY?0gtp^mUUrfVDPuJ6noI;lq=;:b]u6&96]3t>CcI?XX2mpKQ\j5;+/OUSI84i>3)$TX&2#[.@M)sBJM@Vu%Ck4GPO.tC*(V1%9RVZCd-`17pEDfTK^LRS9330[8G1`hfpt)ZH6HXp]a7HMW\!*LW697ce[R"+fFVpH\1Bi`1P^sGmDAB.G2%13U%OnD>\lnSl)8X$.OASGdN">V,`&bmY_pm\l="4[%<LhX!7iUiRpq8)C<q\f_[.`2#KMcXGH*qCbh!u%"X2[:T%8im7Kra$*2EB=o(%U6Pg0$Gbd@g1h;XZr71.0l/Za-?HP(A3.*L+C/*fLpn2u--\RlYZW^jg.BYY-PJ;5Brd8W-Nn-@a>pCNEd]&<1$KrZ32>9C*EF'0%&RKi'"'MIZ+M/UH,9%$Na6SD13h=F`E]<.$m7_a:-!43fkI+o3,JpcU^p/GEO2J:.=28@29=7`(.#W*18_?Ws.X&+mr\1Rf&(@)Z%Y&I[8-T%<(o3j-UA&&Q.*7WW`Z<micB"SN!$_?9JjAencKY&(Yc:EK*-]BonR5q&*0gBPg68R,Q##]K1JC/g$UrkcqKk-(YFibO7%Ps09n&:pJ0)K,:[bI5SoPkA&%PqqJ%8W_PSN3P83#)GI9H7CFVAOA39WZQ"6,oWHd:iusW=KH+U^1"u#PY:"F_j,Y'\I*]CDUaa%%\aUS)R0E0H3gmC3!&*&$K3YFcfrNGZd'V&$4le;32kI?"ou=0iY[4f7UFO.!EC;W4d:pF3<_U'>BI^_8=P;u<9j>nDb]NtI:1%o_%Q\8Rrq=N$A\flV)B5<BT'$;rEUt,Kod#Yf,YZV+Eb&G.4+\_U0!faGfC]h&`,o4?<i-^p@2%lZQmY,Q*__i'apgVncQB<jo),Qo]%=p`%>ZbhP:kQ'9_K]N`r>uV_lGaiJ0]:OGM`NEC#SH8q`?nX`DN$-jV6Bte@Ui[Vs/M"Tk%Jk'+'fN/(1-HKa5d+8BRCsW=HZT5(%b3@a>I#!WD)&NG/2S]&X<F@X9^nL)BMSNR30_F(;bJ4PI)iU*$`gd(pAIaqXF86bL02iZ'+AcXGq6_kU]u-eKF2q[qI,S>%:hic,%&c7%$O5$'^1XoDT"&D4Pm!?q,!g_LPO8D&Va!#hmGd>NAXEthG]MK&Fs0F4`MSsNjjK4AP=`$JJnQZDTo<;p<'=28"RQ?aCE'rrf%1?7(tL6V_=W$Q7mL3>Oc=[<0q)<2[-TC58I\=!M)N6!f75]jjIB&nT4,jO'Ba='CtLu.\-i+ZhQ=<d3V*L4MLKRR"f*5b[W:O--=%fZL:UBO(H'T^cmF'^G&T@dH7Q$:JAU^JA#7lT4p]2kS2qrfX/#e$5R%N.rq$$JqFE-H"ZL+1JT8=_]KQfCM'Db?%:0e=/)X@atl:%c>pVskd8#7$Bs(qD7!6"(sb(39lnoeEQ(9YX;E=O+E3$GJ"C/gCOHap!=c@cCA9i*1<#[o5,,4!DH3M@?G+uLj;op+>3K2>foUmZ%Q(u=SmtUeNSIGC.J.lKAV"fdRhb0YD?f&oQW:+9Ke6bEZNqt]_`.aS/*he99=a?0YF*C0iIEn>Km=!i%I.O8JCC/YWgRD9@?(]19%\=JVg=fU4p3beeTJ=]W6!Qh.)ONp)u1<joM&HWXB[ZU=BN&"%_6TVMk:9(1D9Y;:*.EBWtjDDdWkqZD(ip-pb^nd-P721b<D1PD"%ne:mgH\U#pAomKI8:Y%qp&l?Gh.dY]bt(l)S.^n>r^E]t.@NuGLFPRH8e),$9m9>P;Us4rmioh/#,o$Z0R#->_k;cX0,[^elmZ-N%*kQNUY:TZAfY7@=Q[\Wq7Q.+Md_=]K$:TN,<G'>7N4&6TQ[[_=rt>B)M;B_VWi=Y!@9#RVFQ(GP_;;,4Ee#I^ZcJ(B,CB11-MJ!J%!g>'=7<^[u8VUcfYE3U0`O?0\*\Ik#%J]UdeJh./7i;-Q0ki(oP8$C&Ro_TqPh'PcP]Htc;Gg:,en9/.khW`j\$P$r6;!]gl*OI5%ng`lN2Oraa1oFq7;3T2/O(qWt+TR@s[o!poIL-52n@_u@i5C59Am'"k?0a$/2McMW464N=BucEm*o5a19Y]L^q%'BO=gkrE_,YLa%YK!Jg2rr$H6l_9I12i_7UCg7fK(bdAj]koH:RVE_'J!RQPc^n[?oHit$W*]`"Yn51mXHdU.?'Rq/fE)Yad&Zak5cJt#cNcHU)$QW%(%ue,1?922RNq3gD%%O"<Ou,9=dC;8/D9^^[5U2#mtUeNSI@UKW.H_B6GcN<NWAN_Nn9LfL"fHa0V(17/@kq'.tHb]"oC['UF[rZ%IO3AaA?%N&1ONWRVTQ>/UVFAX=V6p?!\r,nmk$:4nA$XRi2&%0[d"&+gYlq#7QmItb`:]"h&Jc'3Fq"Xq/J>(RN=r,?<!]7[D`ET%<>N*:N"f_j/e>qPMWFFEXq4Q+iHl6B91@?iA>)]mn.)P\L`^HTQSGi6S#[`pX=0*!k7Wh.b$>*5.$'AGLTWLb.$Ee\0UsVk3.Q`0%0Y[+2h@KI&1D-3"`o7HSBaCe\JmdLTUK&4n;,i>gon@'$lPg(=,S#XU<mD2EH:cI72-Q!<3@QurR5UQ2`SJ-$%\tQ\V&+6-5X7e_%#I&.$<!cc+EItM'l,,u,%a]eX+r0.Z>4)Tu[[%@h*f=Pn&,L9-'qV-0pX^RtmdMC(*]68uV6_osU!MTn*OeAa+O$:*FVsMa8BlC1%O5$IKJ2<-^F'0rE+O:smm1D:HCOp:KZl&>HC,78!.<mY!pth<BLStH'9r8c7]&-2kNAV\@S40LQrLb6V1N=aTWdG#ud,K-XnAB<m%6Va=@JDuh4_5^5JbVS$:I9dfk(dRW3Ke8Xj$Q[3=b1MYo?8B?N3mW:m:cq1?/0VU<<3%8'8a.h?[t(e]):Ne>hVJsg?rDl'\K]n2%o"jKd5AoZ$6"lQsGeL3CAB"[`8b1KC<[kqs("bY;kETcK'$!4qf[&K/@lTh$o(km/).2:_\TapY,g+9XFdPuoHf]QIT:oY5O/VUB%:*]Id\8t]5GSsd3cm/YG0DmBNDCpV?f+E#d?+?o,L]+`R%$M@@_(uZ3,>RAJg.j%=-Hb@t<\\n+!i;HBV,5,6KD9d8Z&ZE^5-DD+%]"FiU1<Q-E8:/\GS#bPE6s<=Bgf+fFf29ZpYHrt'pq,3=`d1Y_&R/:d8rQS\CWNHISd,/'RgG_[[+lPf,BJW@&YPDEIAQZ(Ue*XM%MV;<LZZ^Bm]k5aN+hPV)JinA<?GV>qP!E_;K@$1L[jV?>k^0?QXHb)*;^'^DFF7Aos.c[=*!/:I1@V-8'N;8d)PIYfFsF%nqfk'`%a6chGF3*MY@hNrVM+d2dFA1.n8q)*iXAkgJ>(Q(b_bTU['Nk:-$'Dn$9X@@T#s_UYopE2H'+K">LS(l0C7a.Y"NMPZ?nR_pHZ*D,%+C-8tj3)b.ki8VMV;;[WEB=c(+G@HK$8-;S4?mqSq*mfH$0VOQ2ukRfdKBg&,Q\":'%Q/35:892<AdUFV0b>*nOTCO$,C4qr!#Vi%RcYf5<=F!$>?Q2J)N]fOX;B4#nH+*j+a?1%X6qL=62+pIkq=ujIb[YOAdDdT!V?uo7uY=?$B-7X>e0P^ZcodS%A.T#$s?B:fdmMQ%7KC#^laj?[3pXq)VD"6FM3gOH5JSb<='pXpXC0"H3>Q1#%Ok^RbR-U.(VS$^5-2]YBgpT5'u+mR`CSKhi30m;o&Fm;:,]11q+sIZ%92RJJYfsrIC`!4!gMdS+4XlDcbWH5KIGS=\GD.pEmtJmsYpNTXpoAI=1!Z%(a(i<K84cNKlZGBd-a]=7\\W<o,tX!VMf#l?]h./=%`h9j1c(Y4=Uo"OIrA<`Ym8S=f:d\;(^)<S(HIXF_37(3^RJj&ujJBK[GS@=tLBDA"bP&^i>6:ADAV$$j[2<4*`jDfXMe4ipRq3\s%',^Vj:(Cl5`O%+T18P"G,)N[R/DmO-<o7_PR#de#(m`8,(I^Fi(k6Su&2TCMo#/JA"u?=0duBcNj&XG*m4hU])&[n0<nf?F\IJln%&'MQJXW!<U2;Z""nGn/VGm0Mjg0&3U!Sc!AA"<&++8UlJQjqOu0bW%C-?9Ym'b/J2qf04NYVc@2T=2icaB\Z7e[l6"9hnO=E%Zbi%[YXQ*KCD4?8>Ok[-Y+M8FsqPd'V#6_k2?YtGLatTs-Us)M5P8BUdIRPnB_t&8VWD*_AXPGLnI[BV_Bhq=K`tJko,unefJnf7N'Do%QH?36Y,g7$7?^]E%@85U(<iFnI?j/+>dEf2MRBd!f@:osWm:oK2Xn'^>=)>8o1L:2nNrtbBll9JgHhW8-&;enA-?NI5?WtCcXOJi%hBQi8pG\I&D,MQeZGD-ij[1k:Fu)CZdTl90@QWF@5#g8(YX,1$A^bg5.\#K-e4kVPTVs)oR>`?,A7I1.k:lAh[,JtB.nehcEE<ip%hD)9kF<NM!#T456"RdYcBL/=>4bR?@@Fu7c)MilmF`O-/ecq(Bob)ScKL)h_90W>6T5`DY'Dj_9li6GbJ,ackqs-KGlX0YUNK]ni%i?Eo=%Gr[.rcVh:L[]s^.:mLr&k^O]&>'F@&repm:sK5df^HE"X*__h@/^])er7sUdpPaB`MEjX<qp+-8hR0IbIf;%6"Ifc^I-.6%0F?/YKk\7trUa)-`Ni)UPa/;=fu%OC=h"4A)6,;I=R%"@b4BFsrLfQ*F/+V/Hg7Q.,eIi#[I#iRYVV(j&G%c:8er:Pc$&]-K>*(:%A?:SNeU76[^AdVKJi#eU@[;>-I#$`?f+/2Ym)7%g2*UU;^YQTPD]^o>5>-P(UNMQ<pi<b-qF)X[=3kmY.fooE/X?"5o$hnjE+_2n%9umQ\bLi7?f2-%I@hh20bo\GJ,^Zh430jUT8.n!m[=Cj@Sk:aG!@^k9m7DkW]cHphI@$S%`?ot%eYlH-]D^,cr*JXdp&ju4UIi/3%B<B0^XW9u5Ze#7K%EaC^FjO,KN<s6_3'mYUaQ>,W%/;=a5t0o$@PLYWK^h;hAsFs`@MI)V20=@0%4u?aSC,7h<UMmhB4HZVnSVMo%mZVdpd6X6Ml&X#?#O<GrDp$k+o_Q,i,BbbZj.AePrfeMlH$oC#j7$;$Gb[<u#)u/$c:/uipa&?@I'R6dOpK&41/Z1cYqCbdQCYKM%R.$-2"TQG?'jEF]X3GId\:=:H"JXD?'8dJP^Bk(0C:'14dfD,*G6X8U]e0@KOKm#3MTG($^X_-4jj#LV4nu"CX2rFa:@FDUAJShf%ad1De!-/dO;,OqXN&kW*L9YXb((:u<"Ph-n8Q0?DkHFOTa)1^G-&QsDfWSI075`'RPt%+V9dU6Ble^>P.*Zp_aaanOm&AtjKM0nm%dAm$c9BkS3]`(/h_;oO/$c%N;rK*A\pFbm`_1.n0FJ'1V7:?%6"ZYF8Lp#d_f?*4CGSqH'VT=9oa>)]&,/cR#Q,H.OTJlV#6ZhIl%W2'f(d-BN%hk_GrhVACuhWgkd"jn'c"Zq7EZ_'+lms<`N)4mIf*X!CQ'ajXPbLDl`oa1;i5LN%tF7iBPnjApTdP^HKjmD=aSSB[1%b`pdTqS5)NMQh5"a@YZImbB-#+LkFEFg.X>aE7_+"JNBUJeD/O&odQVX--%^R>_KqA\1?RRH>NpQ7.KYF#kM-VWm=g/_.,/hF-H0%imI15;9I(sfVa@/D6<En,,fQ-8'/(*+eHAj8E<;E'D40bc$bo<1*RIE6o%;`@s9rMob]bR4k3*K_aNY3J,i&.013!nZ*YfM$Yj[r%aQdQOGbp^hE_',e?*U\,"uAVXe#%UK/V3W.EY%.G&E3O2gV);a5b-VoZEWOeV?Q104)Wq<gM4D"lmgD!K=u=W<M^9i`);W"W@Vsc%ot68M-S9dT\u<9K@(Bc1akS%^B`rI:W$.tDX7o+pE*WoLkAZ<*._u?V<9643$!TKU\jPTF.(n3g/&d(HW]Ca]`hj>`#ME+\SS!nL%Jj[Zg]T6[>Z^2GcYs^]1FYf>?6e/j;FJ-"*`s>4De9`hbgX.!fgG+R&_sC3%"gYidIFRD!NcR:ooe;RT't5pbAK&X&h=+;#Kb%Ta%k<edp%7D4C:ZTK*+)CtolJ\h#/'@OAPm5pNOOaMu%3qfCVg-4Wp#u1'i^!+C%r*,s2]9;qC@K??[UJKkN^Yd5-9nD\W)`/70^X09%9P6B(VJa?V3bZL:E*,OXhAArK!+@d0\D[]uI?nrg[f?pe;p^ha'&7[(<8L<OI:^ZmK75Ae3SJ0_lX(:"%R\4h8k(`H%L4jjP<lBt%7toW&mG(rJE!$gidGeb^#?f-`(`GER)1l,'4!q3(G</.$'@XmEa2tn&P#,c2kaJU,NXd"H*3UrTOB.QjE8:/ACJkZIeVr86BR-(=%G'@kP-`X?<ZK?=Eng[\iD`SBEnQoHIXDf_bqHa&!O?Zm.G`sN5Zf6dD\8.n-*#flpFK`LWWbc'tDcFi:hP+`#FtsRj/&P5c.^nsV%Xi%7(oB,iG@J2=cE:dWcKr7*L(E)k@%9ZZ=@#ubJJ3+Ur\sgNbCmV#n(-+m88e;X=2p-rC?58Rtm#E=UK7c"$[hlGX(Cl1Ap%BM&%P7N"\?[c&5N%bu!)p)qk*"iCC=ZBGA?m//lSQhGXR,hZ6^+Fgk)#/5WQ:-hAe;l+$>a%/n<Z/VLJ3D8(^snZ7W1YO'E_uhsS&sS6%^BLW!]5-5\;r5okV?hj/$@jTM.(Bk9ESIa$:p/b:WdKi&`snQcoP^!Tc7Z[9Y?.^F9P:fubB1#+iCPFfr'a]@G%#i*kZ_RKLU5AC%KcuVem`LgOlY4Sll8$mY<]5P@pG$CMl(dqb,dJ$mS&4N1d"E]7<\50q&&Ur4&d8DPN:YE>"cIDP;>o"Gk#PS1,I`c:=AACV?:%hg%NLjIpL.q)j5^5GMgAkGunU3;B>=D/g:^CSSA@R;H;eb,=!+ooi2Q7dO]-a"\"NEXoa^79\]A6(G10#LG%lQDqP")@>*Y"-cF(.7a%Cfck#/K>;G.<>U>_R4ss/11&Cr^M&Y6EpgbX#naMoT)8McZ8Q!&U?ArV+7oQ=[mj!neCXMZ)f(a;tJZQWHGPHdpr5`WHa44GS"Kt%C$Y*C^XYf)d6"&%:b(D[9W4a![kcU:WRFnfIPe<Qo=6n/$HWtrJ9?HC1dX)p*[4aXEQfY>UK%TfLFofD>hE8&4;qa0`".$Z2@4A=%9cL<%4ee6:2m3u=-]sn,W8b(=oHCIXmALeS4Ft%]la.X0W<>["(7[&/CN>#H]E8ia;TJg7NZLjFLj<KeF%E43?&*ff._Y\"<a`o]%!E4?_$t\.MHQK/d,GUd)HY\`Og,ohnTRY7R(KYHqlPXN;LJ`JjmRTo+fkcb9I2"\R"-i=83`)/oCc@nrrGJZ`=?;J)@!)kXV`*]6%2<'\Qn_mHLroU<0#A6OYBrT"Fg2T*F<L8WW)J4"^#ru+TM9U,/6.ZF$Xh!!k/Q>-f$gn@B]<PJViG(dT<UMSn?4(&G\1\UWp][M1%k1Xiu7D,5*&U-1SAkL@qiWhk6T27_]>kl)Y:KJA",<G4gP"J:p<H\L8fpj5//juhA^kJkX>$^J:Af,8lQrV<4bFEE]c)?O[k01k:%6tH88"mtGA:YTK,L8.X_e!gLQ?GP4]S9HQhR)p-+D,^$`mt.rW.Z,<()j,Ws%g##VDM/unCEAf[O78X]Ia`-TIeJq5"-.BYgs`V6%[#h_?I\gW/D)7P>0LG8_ne9=%r/b_ADd;PL.#]8&cC]FeqapM+3>F?J2"jUPa\@c''Z7l^>c6<P[R%EnP<d^0Mfn?'f6j)+4CMkr%lg9@"K,lu*7Y](g)@mrF-uN0CBO:bf',XDa.`=nm-b%j<@oWD$=_4XqbEISu4!eYg<"4#9mnLch"-GVgndh(@PEa?IdZ-VM9!.2"%!sc^OWFSW$5*nl!-DLk5Ro!.oo4ar(PWS3ia,.!NHY99USr148BkHIu_[Mt#PC0miPL;!;-g>^W%p'C@'?>39@t76n-s'A&NWM)-%Wd"#SI66(:MYG1!7T=V21.0\FckikAD-gH_GSN]cB*W16:!V#KmiH+.Sur>@,!+%8RL/OM+rdXA@a]NX$m;tA=9eT*^90Crh\eY5%-=JnG,7W`TT,#W'6Ii:P<d-d>iaR#JYF<qg9n_YZS/)bU,CUkX#k71t'c04pKX7%B@f<@1m&L$5Q$+>:@8l)srC'fMU7OPIIKJDI%P^(BF_A/#'O[p[(4<D^9gTE8A*(n[<@tr@q>I(,N,J3."j8<Lth[l&MW=ck=Jg?cZ]IoW*pK?FhcOqX1p!+[QAd&DP0(*MC6-@Za%W.o%q))kjACL=L^iU%3cOP.$LfkqMt&uJ4&?I%Ak`FrqpJkb>&hE)9@_'NP_%K%M#*m*#359!Y3%iThW,a$*GqVFU8YVr,B6>VcX%65Q3Acmc;(Ige*l;>9G9FS,co;G*t]F8,1[B[Ir,&q9P!\^PmIk%sMm;e-?^0-&D-5hLIYW&I\J>6KA["4Cu*);\@d5M5:La"cpM%LB+$)dKq#-"h'@mE.,5;m0G2G+LV8dBQW0dP9W6@<>adoG,2=B"[t*(jm_)3,\BRk+a*J>i"$7#l,`1>0`jcH(T\,!8#cnueg6^!%(TdqOqjA"1.`+Yt#%20<3pDrd.S\h3577]rbI!%/HEoHPD)m>K/ZWd)`(Gfn:4K>$,HR8?m.r<9Ib:YZXn1t`S#g@?@qj>6a7"VJ%.&8/hC1_1/K@9Cm$_[XFEo+WR[2j8*P</**J[>e>o4/8E"s4V!fE0(-Xq`]]7.WZ,])kPQVF,`@V'=;a7[40[+_IstC#_C!:J:B`%+a=`d&M\i^SPEdF'aK'jdSc*FXrP\ipTP?13!.8lr5+fThu,N!"f7i/3XM9/Xcq0$gF!Rjq]u>9d<;=7+<L$1cm(o.4qLpQ0S6mW%[`s)t2Au[=m8,qsr,*$*7GCrhn-+;4d8CLK3rkLpeWlK8G.OIni5a_kVD;Lfcf,<a2`+!4$_t*t\7f<&/T3=fa-smXAE5FHnNuFj%gPZG?AttJILjY6b%kP"nDs-NJE\0MJ-)N&nU`Q1DqlkD=)4Rl9EG++DN&Ocm[]6k;&Bs\;7_XtD**ffT#YX\iVA#hf`4ZYuF?[>J%Xn3V1h$hc:=K<"\2>/a1/*$[=ZA&RIB_,eoJ++g_$+Sg+-tP>GJR,>Yqn[G"4oCTed".J1#[pSbKAE&^OJP$<Mc6g[k2YXM&Ns@L%:+a%VDrD-+FjX+A<@cJ&j=\t?:W&KAC[O$=DC-T]bDiC@\MQ[bB7u4UNe\9A1m&<KVl,-mrZ&#X'Cg1-FUf`grI]aQ2oKm!kXs=9%\DP>7eAQ:Y-6J5Q;M"JiWs6=0b/!9YcgL3]:uA2_-WM`<+ln9oAhqHVO/ZM\[C`iscHS:l+?J:[Wtml&qukDQU9i5pT.Hglr,m!q%P/XfVr(*VmFtaV1Rgu/q`_-<ci[R%3Ce,=S!BF7AM*8oD5ZNBW?BHE"DF]]41;k"qW@5mXq:<*>>"[[4SfAn^/;a-np8.PY!"UL]%p"hQ.5.4Xi5W5qD4Jk(Y\OcZcOKSBVC[HD5q2V!DG4P]gLfUUuBY"[t/Hln;\n.]X^(79BZ_b`GFE_tueS']UB'q8d.+oU:LfM#^%'@*j'"U+EFKH8'S;:#j/o$\XN)A1C`<iR'pOA7<0p8N,E1E$^5oluTG)faQ4oC0h#&Yg#c=KD`t$<#']Jg0EL')eb:`(+4HH<"jI%>A6"Yof=#l/D3LX&4No#aW0a]+p9oWVAeN=Ed\0C@'[oQbFk2QZERlP##""[R``PCY2Z>2O:LB/aQpAO>:-atFWo#tBnpf5kb(i,%e/GWh"uYaXc@$+?G*DGWFS^A#5c^8TU?V1D,&)+F**1'2^&/]J&l7^#XT=9["Vd=mTf0^(>)kAU`WdTRN\me0))LkQW+=Q8"^W]@%2N$k-niOX<J8j_8Tg7;A`hMsH@nVrg9EYG84[n'*>mQZeAS2YK8V+XmBG#WNR[dAo8J)_/?!LEo3l?B.[&.T(]K0Tp;l\fLhb!F]%#&qiOK#4>O(E#.a:kNbO*9Ll;c`eSB!=b!'CUG>(iZ_aAKXSb*j8>tq._n[.\\>:Ljm=d!_+6d0ammS!?'0^F:uKL5,G_`&+-*K)%JPtA'aHA3HOTpE+db2_:or)kE5)H(uMdI.af0YE@#g%0)bR"phU#),uH^l-l]91a.?*=QRRGJTW)%=mOkUcjk;O\Td>=P95g!A"L%nP%>5FL/;+I^,7f$/P6p#6d^3FcB"()tgO'?FLo7k\M&c_0"(+6Bh+["5q,gHd+A/fDPoAJ=A'$aS^UhcoTXi<cr_&/Lb7'e+V"p%;JXL(=5>8!p/Y??9o:6`X?Q.OmX5:FAP[o+(6rcW*F5^aLTQ_?'SgU[I([,#OBX3H53m9gp_.>ESBnUVl<3O5A8.#FTJQO8MDf8'%<^OB@84Qh>A0'IdQ?E;OK"X":b5*5a=):&e>,"qm1<'eCZDiNs*kS6Yl439Zn>q;sBJWg+[-_ZUMjLo8.Ut1Qh3RC8--]S$0'sa"%R(U*4Ln5P\OHVbk$EoLurFTgjlH64s;J2P?%LkI2%`To[+B#9*e)RYVbm%^h%qD&]F.lKD&]Q1Q5aS7oLFC3ZZ_8';.J:YO1_hg0%l?Dh>YS5=u^Y)49mon7r&*o1,jVj#C@q7)YHT!H[IB/k+W+lh&q6g&H<DW;>BhP-KA6QNRT9&,q1E:ib_2fqP,o]ui":pmL2FH@^%lg(7`jG4QR9BE=\//@B`<nLS*&Z+&6Ns8E$4=]S#oI-W+ZE:<S'G#aC!?QQ-<rB?_nMj@re_sM]AeNcV7+nJp@45.!Adh+q%LgZR%5'o[]&,:-##pQBR/Vo#+N%[8,M`.jeR$IL\>_'IA`LA"!f0ZNB;5f+14GfX2R@bb--@o3QY3^`T:mUJr>gl[/h[MmtO_[7*:jmuZ%7T53nAJRfB4/dL1OgsSJnP$KRONJ!JPtfb<.,1+BGJemb:51-q)^#6*1JR#@GRh7B!,8<a3>p4cK?h!4rDEC)dr9:_/Gj=!@oGgB%8>8C?0cuK#7VcS%c=PVo'8`Gn\?UDR(/j-Q<(t3KY&\dSd:[itd7;E!(Q\s-_TA#jY*@<A*2i9e:P4,Oc%IGMOc-H"%KH`m!6Vh\%__E=hMH'ZX9su@l\d=/58A'7rMmBfJ2OPC2goO'L$*7<O/>c2O.P%Xt6_aUiBumXOXE[0[$/heZJ[nn$+$H8tp&[QW<c8'_]bn=r%R&>YgU?1KKaH*rY31I!!nckmP.-t<K9rouTJMCF<8A$S%Oi@.TU,HqC>DaV[=lZf)0W&8\TKAYD*`id%CFLZhBrLMIOi&Xq.5$P4%Ij$CIS_KVZ"sRYMRi>;lQ8JLFi`F*$Eq<<?jr.d^oSZLTIb`5%B*]p\+I#Q5i92an"b6W!jJ3O$BP?Lh9uFR-Np@=(+FBIAEM+6(%,_R",_GHe8]E_eUah>V4'ucf-2r!%]1HO('oN%dQS+g6h/[>GZL,\)5%.@#YrSHn"G;ng-m9F=bLf&;tTcuSi.f4(>@NJYYp49KF%-Q>G_k37Z.*N7Ja?5JcnIBP?&0&L:5OQ@4_]:78#%ah3!%fqEe*@t\NDnjO0K,3=UGnIo6<DFQJleLk2-&%.WSYZ"*5Np/D9R)/f%Bq8Y!!I$f@G*1lP-PrM-Qu?\)O0Y.B"=Z_Vk1+%LWJ<U2bDGdU5BN2G<DXop:Frl)D5s;FOmb)M:iWuLUG!OklJ\\na[5!l+\L*(%L7UjGI]aLs!*oA.%PB#\U[CVM\=F#Pd9DSRSAl:tE?LrZ%XAe?r]kboJ/>^KLuj6q=gr*&a8l+!kH"B#E5OCs\[1aA!aDF-8@Tih%,)-Up"A&`.k*,$lP)62"cohLQ`d8(A1>%B:GE^u:Uqg$AaA:b^RbRZ"DUaa%\aVXhq5d(Hi>0)Kj=>*[5>B*TQAe^Ka[TT)\VS^p%d62\QTKhcL.4l8-W6rAhV7++M)&ClqM9Y$-?`;\oam+"EgEI[#pTNE%gUG;LDqN_S@78AX-Za>%pG^E3,Om>8$m?+`^hG.Z8d@Q8%G'AoLhI\i*[aZ+s+C@,Tl=JZ5D940C@&'&/B?9e39:ZO>`jNkC40@NuMs?=`?9t.>8;KQYg]88q'UdA/]SW:'kD9"@5habEAZ9'2%6WB\"aD)7=pVVI8:<(]5UIV*R2Hu5)j"d;HU2A)YN?n@u6IO5\[nhE@b6u]+1]LOOa[mKb/BOX76FYZJ,9Q/6/.OF!'J,[3_8R+p%Et;Si\C1Z6Rq!(9>-O6'B`"OPU/12Qh]0%%n>-OnqV2PVEB=omo-M*K7H?rVd9gR;<JS0sJ_+Q`^X]u-!X1P(3?SNXHR6<$4-0nk%S>VSI";p$#2m(P-PRn0!i9"k*_Bbm?095@S:T,[OJmE$aAX;U2nCgIYM;YV=;$15XMI`upC\YcZ>T]_iM)Spngs1S4-'1+KLl=ZS%f\Ar^6deB+&nZ)<jD$+&7!lHJ$u<7kN&l[Y==TeVoY/kSmqNefll"VgWlK?UWu.#Ceq0!#?)*+t'(kmDmALUg-=:+KV:C`HXt!]=%oK#g(%/rDNpi/A+a4q^;N?eFVZ7ML";jfeMf!9-dXq;[bLtn484_;h="VV%(Lm)OC'c1[!7P8dAC7/i,h<#%o+D][mbfM1>MPg$Q%6.j-9NubX*9l=V;$:DPJ/Zgeb(sbjhd\/Kco41udO8EoY)t#UOdSq/+WO@Fi.dG'6qN*&F+o4\dHfV"BT!SV:"4opt`@9f%P+@tm%Ppj+?Dit2?ATBCcq)V]$G6Y!_>+,Kr<L/ND;>@$R6tD^PUBYMSZ]Pr^DL5"@6_lssJ$9drqJOZ@gSsZV+Wsp)%!N9.Ru!uO28cfd%DHX>n9\W<9cXi9\\u77cm3dfc7M'Ns"rk';FUs40[o?T;s!Z`<DE%&Pq\h'3:5ct+^L:5FMFKE*-<X<6H%@]?'JCn-=5[mgoU\f\%hp\MG[r^Mo1ZW#P?EU0-`I9e+j0B_+&H6TKOHhCR$F68'eo)ZQ2,t7Sd^Q#!^k>B,^::_Q<=]e_E[%Icodn;q8*9;SoiVC)M,I).%4@h;ipK$l6P./`cmC0':#?%rP/*uri"(80)okDp:];[bQS'C\fhNKp^gpFW"aGm#sh54kNi>Un-U@!,d*Pf++l)eZD9u1,>Wk1oi%&[]+Hct4B@_1rR@[2b\c=u<;?*]O.g6gc4-<i_eNO1:oK,"A?YThO@+=V$7B$"[5OiMOlg7fBif$h#p:f;dVRi#nCa.D;_`@\lKa%TXdiSQG]TNB:tuBSu4$8_Lne.*&3dcS?A6=[U&g&'dFl7?9+R3l3P[j]rE#3FYU-GS"$d7JAeRM`75J0^.,n#RsF%:V>J[@HbBL$%qu*H8[rZOMne<C3M!f">Y]a$rc`j(]CkqQnjXX^Yf';*rq7o:B9;addF!^mHm;f.Pl'T;aeQ1?ljSa]Y^UOVR$deS1Z)<MOqhWkG%.<#XV^PD!:pLu<[PDE%Ck6*]d%-tF""uPZC;*Ss]_FOY"Op.!l-hH+mE0iRX2]S(d?B[Pf_FTS7JTWHs<A*t:(ER=3Qs%^M,0>,1%^NNLJk8G"j=ipV!Q^R,kJ1!!ogfp\Kph8-AKh6h4FPRfE4g7,SQ&pl$Bq_e`7%N.oT83?SRg4<?-s:F?i'`2l49&7HLcV"hdKPE/%kmm,dk.?7-adhuo]t8tR_A(,MJuW'k;V)hXVCPosWNl[I4^4,.Vkb;pWZocTTnqcEs3'jd'O\*-"lL[ld[OC1fFeu(A@>*,j[:ou%Bul@IH1:H"\B$cTdHA[IP,T3%I%a!u5@-I1Aqo,Bl)_1'9#SI?&q;g8b<7=9ekab[6eLhPSsGu;Ss@n.ql&=S6:dF$+A#T])+8+t%cSZ`DWGW[V$A<`np'sG@-P,+j<;ZmPGe"^aj)-2+5lbUZ5E_[(?POi*,m6Dg6Y%kqQP%#E)>C@*E*0;\k8Drj/U`4o)#lo$3norN%.f*Z5.g<,a>IkGf+het!=?U+4iZU\O$:SEOlTU2/"j%k\crdk0Tn*\QC(j<%QZGceAB<),Ib[YN?2gZM78@(,_<SO$1JSt7I;Hn0%J:tK=P!"8aDJ%GH))gk!$keg\$8BOe0:OCYgP28!1X&dt8Kkl+24qD";STY87()WNfq<J0b>`G@['Rb"V;*:@PC%hGEg_q=e1Ar[%P.r5PhiIVR3u<)\ak)<!"V#n7S*:gD7P1lj?hk`O<j$4EfMW3:PI]Mg,NTgeMi[$,?b"Q!;Jeu`JKYTB]QBhl@M*n;@REFd$f=Z9%bDZ%hhhZa5Kq"oDhd2,g?f@8ED'm!ra]U\h#ffUn'c`)Ha)Hl0?hNpXE]kp#Z)dXo$Tr9s&dXB\(W]VcA]"OJ[;SCr)d7]?U;IIH%p:IKon1?%?G,!m?'_l*$"FC%=$EoU>ihFup<YTg=-T=1nEF#r=R8"qGnXq+p09^6o/FB46OJ8QL'>^/Zq,agA273]ZA9!ptX\.SK%!cOP(Q%dQ%`SVCFSA,C&3<\[Qp)4K]^)5#E$D.O1',5`Ym"!1]7l=JZS*mD8b9%KbC?A6%%:sf4X]\A4pp?PZV("0UdGIT"?dl_l%2Bko"Wkq/>EYC=*p4,+Vg)XB-!/Q?=ACujN%WT.U/9YlYRk`SlS_($dqgn$<U7`4%#KA=g:N%.'mI84L![pI@`3QHZC':fBVK5+)%OfWJ/FKY$HMtu2/q2O_1Vb'*khBHX"Gikc1bT9^L4Vj.p;lUTC-qek\rHPjlmT4\oP<]@AWgfl?`MP%1!9.hsjo(sRq*,rd97*T:%reaePCVJ*=_bNI;&6bf1TK43HjFI?-:P9O7p=JU'He%uITC14-V415_icNGnVh\t1Ii_tpXG1&2U]^&X`=I(6]cOc:=nh4K:(uK!%9e,dNbB!M*FYG(MNKm0?<DTE>L7YA8^14D[j37(D/:)3,b2j;ud`[m2\#Sd"C@C>`kP6,P\pls5Ol_`<NV=>@2&K("9`$#B<EB9%%X)9"&cTgnF\gMFW.c3.p"#\:ROmtie5/_/kJ/`7c']e_AMick?WO,ZqGH5N&<Ah92(g/V=F,V[N--<m-<3jE<SJW#[/<GnRi_3Z_%]j^)II/nluZnARKdUpNRoH@kJ-q<W/EKl9N+Ycul**0jM(D'GX''`>+]*MdMEmfA[Col^G7Z<iC3F5gRH2XlJ,^tiRI)W0t]l^Yu%MAZJ-plc7RXH"o,lkI-WGC0`3j\eWC&0+_99Zne3S#m>7D1rf9,/Hu$'4s*hKr<O-Lm/ZNmtB`r76fH[WO*[SkrWk&:6kU54d3\`%,`GkeQK73`(R]MO#ZG',=hib(WR[00QpSXR(FN"\/fH8$k,D[&;^J^tZ`\[4gnJ\(c?BZhZd+`+7S6to4qA+:$YT(2jN!pni[S:1%eCc+%i\46r=62K2NP\VnB<2,,R7`T`<nDd%=3Jp6rB_J&!1>H^p$\V+cdI]a6><WAFiMQMitF=3ip8Qs/l=0M<nR)#Hj4.sosEdp%I8K$hO\B]$*L"duB=+q!..n/hRQejYF?L\Of6qFo=)oo-?u>`8Q^`$]o<W"nTM)-$64l;E8=[=W(3q'K1p/OiehQ'.(U4d%&a8;5%+GUp?MKUqL*/h']&4\L+"FDhYP1\lUMNSH@Ti+/>F"Hp4\Ea<E::YF!C-7YY;PV@@FD=tOJEgK9@*.PqU\@XZAQ'#6lmeh&"1VD5%U"RCTV.RU;qoU7Q$2p7T?IW0MF];5P]Cg5g7+\9hZ?:VRmSI%tZ\_X5kMBCm!#^6)NsA`"_d=nMXd!!aI`+?mmM8JrC.??`6oo'd%YV0D&eKkTKc84CS3krV9QS7X^UdQfON<F7+"&\WZehVXrOGH5qKQN\joKfr/OGV+S?XDPNnVu9K>7+RkBR)2C5(Bhp=QC.=k#Bk@%5";[6c#-lW$aHs/:s`3<5Nt=?'lWc".;W,>Zj/2c2GuD?%H7TG_0CQ^HA^a>`LX%#Q]6l4XGa<7e6cXX*[4S7Uek+9+q39`MZ)R7%gQ=,NF=:FmS8Taf3O0W%+U_LV#Q%Q&pFfEoS`NpLImA=-\^cp"+u9&+qSh(mj]0`(_uP6q!^UT"f3+'S@g.'Z.bq,LoPL]9Cl&[b%V.:oO=N+<)UPDf@95ate_<o4WW5;m+F9chF(!P%(4^eU)PL\a4M4T6/m5*34qJJejMotLIn]U=@^I4g,P<0FR+'f<O$H;=6bkG]!%6On.3e+;i7Dp60j9djG:-#E):'`2ot\fgG;,_Ht`IZi9'8/\G#[(8kJ!J4?$,i+:hX*_oN!^\dV'W_;rK%NLC]Q?H&C_:@BCc4F3%!&3>/"bEMjR:"h19qUM_2'S.d.isF71p:M)TE$#,.:7uYdjmu[B%78@GO+C__K!E.oXoc8D[ou!X>9[S\`d0t68uJ,B=TCTUf!Nf%]hI=,2Aq8o\mdH>ftGKZ\IoPUp_4t96fb(=<4$RK>[#X<?Ct+H3fI`,P_(Pp>DW^>0uN-[C;bkFdU&6a\t%#p\$A2Q+ofhlIuW5.%D$B88gS?78?acc_N_bLHp2)0[__t.#ZbW$*,`oJL=ODq,(iJK3_*Tlp=Z<S+T4Op2ep<2h@YtWqA5/#G'CCKk3L3FK+/:Z\3WQO;%Z32NA]-)t#&j]6PciD-b(@S:YCC,k92/?%1I#^<R\cqX@P>3,ra3eDtKWI*'7K_%;/KHX7gi3gJ7mG!KZ[$.b\EWC%23fo+?"oM/%NnqqC0Le3&F,`_kCI1%,kAuUEJRAE.iJ>VHA+5W!1PZK7npZ&3.P(I3.;4P\*D4IBY'FD-NIGROrBMf$3cq:P8I]L<+IN<.MLQFR%?mGGOVA(seqF^Xj&C.SIK+4]G$]"$1:j,W"'0Z^Z-6Ad3"+hmd$AI8rQ;e3Hb_g,f5%isP='`:U[@`j-CZUtJi\9,mbWodk_nJVt%n<`q6gT(:ZJ.,CK?<eoBV85i;SM[Hseu6DeZduDrAqoHGZJRM$Cl[YboU=4h5lLCD9\>0ficjni4FOJA,PY6=]Jui$].@n6B*j?'%GOs=l*3tR2a=iSRe+cgS9(97N=pjKEd^*_"ciqZPN/O+_h/X6dFEL^W2J!c'HF5MkPnZX%?S/3_QfuXB*NJs&3C6C4(,jt,?QC5(%c1fPkrLD\cAe5pGd1A9H%qLPOFg98f7&`*]DDd%CplEO=)M!_@Kih(8@q_-BIqZ:P.\>(P'.GrfISN<Y-99I(%^pR'kLYoqDqPej%E]TGulBT/!b)tQ+MS?o`XWAd=$!a^A7c3EO:CIin):)R>X$W8LGKgbMR-n$fPcVRJ.,0_"r1rDW^/!A$e'%b0+;U/?Li;89PcgSa%-qE,[):O6g!!Pcg^Qj?DcRrd8.uqJKoooNkB8VT5haA^A0gf.2%(U0FS(,a0W,GBe"RLjJ1V4T?MD1>k82AM'<NSCS%'[o>$e6qs%*CJD(1.Z^c?;Rs?a12chiH!ReV-JUaP9H#`iq5tk64$e7jip&@H!Y^DpXjB8Bd<qugCd'^IhO\s['T76B#Mr+pkPs$5irl4on@Lm%l+*"!kBOHjb%Z+M`j3(lURBFG6XeUnUkmqKX[T7nS$oc#DT@e3Wm&3)]om29^#OYf["E0!d5\07RYBlLUQjiXPR`lX^opfE;D@9V%Q8[`b>@b*D]iMHaf0eH#k?nHjdQq6Q9h*9';V7BFUQL>!e=:rq=BG4p8D)T_]$jf!/>S<V<^KuT=2uf9CRg[#cH8OWjbo)4VY!(S%^UZaF8AY2P:cA5h[s^HPd-S6/agJJ`=U\+NaBZR`al5*H>[XMVh9?IXq4P7/GSs5&h%3)_K#fDm624t*PP)&'i[61EeoqBuNPIgj%!^C)2C/?Z&eVRiLK?_(k!_2l,`@$8?[o=HVEekGR*nY]L8^@_bJDrdMM`hqI>&-N0`\R?a9d9.*=Cm^A?!ViWf[i"s.iUk<O=jmu%mN`D0fn4`*@%UpsYbjmS,H5Da1,HBq$bH%grt*"?n7.=d/Sbs&^mRP*UgN?"DUJuU]1")bf6]e1'JcCBlGPt0bS(tC]<I1%p:DD_%"J:,Bkglj#^O+)"Fn"3p\eb9h_sXr]^RLk0(m=`-*`36F#4ZUf:4gn8M2#IhH5uj#BN3[>g8lDC\X?JEK9l6ZTsg9<O[>M3`>7[$%isdp>'A4B0<8m-n(kFC?lL?01BnJ@JH#]u1hVI]rQn:3h$Ub[rDuIo^/Kmh=3npmcf3q7Z5^D4N*u%CMmnTj+Ye^e1B&VNWg:$39%Z:/ZTg8lnEP3p$J6?^YIl-cl@CNDN*4&I:"X.Q`^@mI'>Stp@kq9HU1DkC1+hlc5\5A(U'U_YELTQdRl]+#4ZC\8&8*YQ_FC%"o&%c&.:/5`oj#eib:#bUD".Y3&^>CQtRM9o52Dh4r5dh1nnsmG9bGFu=(pO>VMXTV.8=_$ET!gW\+5c8f\fY.)-2oWPuJG!?oQrl).B%')>UF.1QOcP0#@6VI!r'OH,s-.tg?,TS>!-?];UDcK8Ls+YaDd2_p@TVD7s'#+^-^2u/>UTtG6C^&'Xl8o[t;?',[WUBEV*4,LJ#%Kp6C(;ZU?llh>nVQ),qo#Kj"4W16D8R95.)psjrH)+gE5RAdgB77UsFU"`*2F%?_tkHHR>]e6bF`k,=Pon-"KjQT&n!sigb@kQu-%.+-mu7d7]pOXn_p`6jJ#;2.kZT62n06sBCk8!)uuC8UiT2K;g3#%S(E!u<3&@`mI<"#f0F7f-]uM0ZR-91X](&V9WA)Yflg$L+tX%g^516+lP15?TI[@>^/'od/>f9!2JWc(ttpdWQ*Z7)-kee;d#a"nBnO"4K;_C<D_#<K\&j2"f9*H!'F2Ld1ns=,p/CONIidjm'<P%%F1?k5fC1nhZ[bS`kfPF\7]3WT16W6bY5Z^n7mL+W2rr5%dn6hIT>#I6VPsj9*q?7U-nUcB.cP4!U"?jYE@YL(OE3EpUf<Z74`R<B%98e(a"9tJ6cKI=j>?rTZm+rZ)+t^I);O=utR=QWGs"Dr#F,"A'q!_+-[QFt.#C0lOa!%O&God3mW+lXRi(S(fZNrU2Jk#<_M`WQP%%eLgpdA%m3>P(k=c.KMB;+bZ+eRGpe`sGW1T.HNbn6"M"?9f^E"6T>^qP0'j1>H(?&WgQ\R93CETMqKpjUb$59k9HC,/f+e.EjcY%;e2-a%UbM'd?ou/>Xi"mHe'7`;2m\A'K?\,TZkq=^0@Eu%+hT>ljs2/8n@DYnu/@i-:P@TEQEI0PF_$m%1-*?#&l+.+u6U_P64ig%c66S<93]A`1\;7'"K&9FGof]3&dpXt!%\<K!uES@<o-XHj6dkrC^@X/3S'L)DS/Tapk]&Y]DCPIs,U?!<gLPu)p26uj4WTeULibN%V4<uW0.=t\;?/Q5n7<@'i!F.MDlk1?1qenB1O_$WS;&k`Nmb2gdmNSpSL"H=96bJ5P,UH0n&G:8SV]-i6f/ZJ_8IgNq\lJW-eH8d%/H^jC=I2AC9@sn#&or@-kf1Ce<$P:;MTZ8^ol>6(G9A8"g#^<L=T$.jkTm`J/[e55$T3>@duYT'?"VqJb`TL>G=+kW)dUNc7GlVV%NXbH3rOADW;d%Wb!a8a_)pKD:QVu5PSd]8*Y!$9Z<Fm%1F]D]lA9gR;.G6j8Q+9Ik^9WLYPkrY<=]W@+\^<jdMeA6D?$=&C$equ[%gIJLWa_Y$J2>3odBt)9C!j!7n.5`u3*qJ?7+p@C']W5[8^(Sk>YEH1A(!i]'e4U;&K,-cYcf]=VE<KIAFh];3R22*c%U)D_(#-<6%.-68:T5'"i:"QEjKVen=Af7;Z?=PM@La,Gf8`i/U"AHMk.*B\)4@(IR<"-!I?^])Z+RS!X+1G0W$nVC]=L!m'<dC54!f93c//&Mm%^7FCUcL-WIC5rjREW$&!87#>#=d;M,PJmdL;GS@B1M\mVfJqM0@-S$"pj_h?PL?bdo[?iE:-B)^i#l38Ju,hB$Thr2,b&7lH5cJ:%FtUFdH6Bh=,U"f*`gi$Y*9>s#"GPFjgK%2/0@49@A,((!+.c:ZL6,\B7SCV0S2mdRN0#pSSWYMh+XORgH2"apGHTIEGeuQXctt;Y%;O9dEg-SCmZH_6fcAXU1dQNZfEB=u.,;`L7FD$K[qGku/2:o9_0r!u-MX\,L<&>sA@@4C=o"uXF\g%bn\g,O,)-o_'F$uebQ8&Y`%XuVpA&^0Uq%F[]t,UcN1HcN3-,i0L.\N`k&$j"eP[[BmZpr_[+>44rZ\=JPe9%]OObFDr\2PMIR$ja!]8IIt8)ZdsKP'cDQeK"'5%9*3@/2.]8N_nJ'6^cO7)"Or-LF;bs1TCPeicS-?i'hsTbNE<2m7O`,6Lt'ZAkhOVG'kbX.Tq6k+RuHR/0gBPgilAten4%TlroF?(%ENH6W!eQn7<3mcJ!:$-sTd?>b.H%KQ]"+[<9<RJu-7GSYL"^ns#V-+rYef']n$@3\J%%IV5c1l>O,e+W.u,b"_k^4QFM_E4Dk!mT%&<S_Fs$)S@EB=unI78!X.&T-KF4>VX?eb2""k'-Y*i6Q^Km$2F*%/rlDVsiq_mhCU+'P%2A6j/^51jqJ$#ZNl1bWqH0dJGS5\5Z(%f?<_4)lNVD.'7"8Stb94%P9kcbkeqK5AoZD9oJaBH_Z6KJ6s6mRoX[5?!9mQe<^ojOt$O;WjK+W%2ND0BpnI?Fk(q?@l`WG%U[hS%$]m:Xf'n))--",5L.9Xu98M#fOle;es!L*M+WSXs&K0[fc0bs`6[mfcKI7%5*9A6JOtL'/=j)&r"+bN`@mn[Z[H(0lX1(Xdd`rsM%bZKI8kW3-P&G5Ind=83[nN?CMlpY<0G(T2r<.c36Qqkqp[Lt1m\_\D4JdE1tWCXODAIAI2-PKLo)ti67/j)Wh8M'aPFk'E+ZTP#(%'/(;J`CQ"4BXs'bKi8ak5a52a^QQ:68KqE:Wjg6LmZd)O9LT.frPg=71T[#l"APkq"-mRi>.a4h(GEfY6mbu]b7k2EX_K5eM50H`%fT4e/n2Z9"MKR,Gh!S0Fe$NT]ZdAqfioZMX%Cf\^_u#M%0FpV1Vh/Yo'l#8%%")kh!ud?1=^s7ho$F/PXuj']1MU<YI[$GP)9@Ff%CFplk_W%aLLJ>>7gp>Wn-<b,ugl2)L2\jA:)I9U0!6]-P-*i+<R@X#7;ok`Q'Sm]#NZIBoL#S\q260N<1jXudVaimso?BE'dWk.%%Mb"1rb2hF&/$SL'[rFnB`n3*]W6d!6PjQ=S697IC%\JM\m2U&ar4&5Ph]cD`Ejt$.bl6-aS>,$K1Y&5CW\%XmQiMf(19HFK0B7G:%*n<GhOGO@!_kc1_:.[^7'L*j=q\>Tb9tmofa#MPq=e7J"jtFnK5N/*&4X+nr3l,uN4]iqr?Z*m]\=3cmY]f:^^]?RBWIjJR0dsc!%7tM%@"_UY=d?\3'`d_n"?1nDP^P09;7nIW:QJ:Iclt37O-<8Z<Id^HJU9.j-2B:peopdYQVqsq%'"Jb]_P*D<FC;8J`+U>pZds/)%5,W;JmCQ4[DWelX`8W-\LD4^C4$#-?!,P2oW('n_!&?VjEe`<?>]eF?F#F`*A,#cX)+qME-Duh'OBJ,(*?`Vuh,B(j8i'K>Ok:>_%*n"fZ[XV*<Un6(#_o@"@d?qA*B9N)(C.ZQ6A+TYd+1F&b)$7T&f`<4Gp%;,S1U;E4LCFh0:\HR/S.6X+)9jdiS?P4U`f;O2ZK((j%r/C$4>@&*4dctga$isg)8[G+%YrT.?DN2`fn2#)ZkN4,"$oWW3OX'U",#uds-?qj3]'G0U-dCB>OZ)+P7poJGReFRD1n!g[#TMAI%5M0[`mb2R+<$7,Q4hmC<hb<`R"(mF)OQIG&+;.<54PA1;!k<dlG\V6=(6BIB/C77KL-L1Oa6i%SbG(6[>g+ZDa0MWq3N#p/R:#\.%.8"\op[aD;X#//Sl%U_i]$l)h:+^47C6!;"=;Vpl7c-@@oP#<jmVX8J-<'u`2X$rEUg_Y?h!DG,bYhgr9&uH;oF/DPoAb!@IL?k`%<;YS6>Xig6*Ts2U?S;`cXNB,b.GYhnqeNmYAWDhC8+D`kC'hq7:nI(rZf[(t<[X$d('7ei_>mLg)Q'^8rU*oYc`5qDgf4g9neCaG%,7nVfq)%HYm:728H*.-1pAS*YhW=&ij!f!P^7TomQ:B##Wo=<`&0Vl6TpCWaABnLNkiqf3e<Y^Re#VqDGoU=\r+([?a\J7[WOUk;%Ia/\#N$dZXi)P^(/TpnrPt%F2Ul(]N7eUkAX,M3g;=t'tlC8o&RG/s#3s&Q]U^2T!G9=cZ.^%l,/=Yj?%a3(fNhND]<_1Ddb+(K/%D08U+?EXn":U#%.3k)?0YX7r,n\%=-6CK:JcS@V+M>Qf190[=/s).r)kirfd-rc[:0;t6EAFGsZ'VOF*0]]6i_%YbR^hNKWq_TN`%IaDNPf+$c$fmJOD?2VqIF#p3*LS4l@[+YK3l9ClOb1QC0D]RS,k:Uo7"4OYP`R[giM^;#?j*f_._GS%,EI,>Y^aKCom/Y':-Qq&5%4"oG!G[5G/ZWGCJXYO#9>ZQ^'aT:(iU3q1V10#&21BM=&a\/I"Ij&P_Pk!L4"-jEfnd<InT%uH=`CJQlO/JJj32b4el&S/aAn5Xm%!=1(_$Pa>'OX`r5Cst?:+.,]LXn'ICKS4UaINJAQTMc\eD1Y$[8_C(OedW=*jG=^U5e%+un:$L?D#bcm))Sk!j3L>_YmIJ6XL&kL%2\:YueQ8JCSpi/Y`3$"SX$P+-Z:'s?'+L6%Cd]s,..r>O$]LC>[Q.0P@cD)I3ag%#UmmbCDh$9Gs/srtbO6_tir6MqWkf[FH@/5I%k3I.9]>;m^XY>ci?4-&qN;D'SfKFndbu+EZ^^!D^;s*Wp:p*0:rN7Xi%>'_OdDJ\<KCJGJ7=D<0YIC,r*$TMQ<)%n/.s2H$1jD7#%<HS9t%LH3GEF:D;UafUOB3mV<L?R!!BOZU<kf=_sch2e7f*6>aZ]-`J?1\::Z8YqDAZNYnO$5J%_g,.217[j]<le%U07X8+9s`(s%.Qhl1N_fjc+JYMI/ET[&$Yj&pVq6u)G>fTk,3=O-Y;6Gj^0=NKmXEbX!R74E+"L#NFjgREP)oYnhs_b>)2VodLF_VMG379%n8]In%HYK/fiX]'oYDe9Kp2I\Zj3<3E2HE\jLUD0Y!)ET,*C1i6#Z0C^\ImJSp(0?AoLFD8X=>r79i@KJ?n01$OWd&<\Y<q$%8cDL7K(jT%BJE;d[4bR%Os$fVEuFl;e"upQFS62TS`JAu?"+hf(=AsZC\)`jk^rN_%sHOs$O-@1.;A$N;KNX"q'39)>^cV!^:;oacdQ>U/Yr(G%M[ZG2X_,@LfK0aq`.:@oTk0>c5USSNTHOk5-bD_GpG#T`fUZ]H1t)<,ecJR=iYe$[LsIJ%S(5)P,-Y(O*>8,/p,%B3?M.Bm3C%MI%5>ofq1K%?%;t<]H><V^,oo+,;@TYQmjQl4&BjERB<q=lEkID^D2nS+Z+)\4r>_$'"UO.-Fl,_:*R+(Z5bSt`9n2uW`[Gn-H&N_es%D,+qrO]qi;N-"iT!/mKC8OpJn=N0,Giu;k/oTOUQbNS.n=dT$(US=oW\`hJs1,=fuHe\N(ji+ZH7,_U'f.LCS7ac8.Yh7uo-to]V%`+HK?A\_i+dDkWKD.DT._8_%hpl>6Ck:5*!@KA2oH)[qY#IiF?ouYQ1*ck%HTeuoi>JOMD2oRmT=b:qg=hD2m0SUq-RB*WWr,Z'H%ON+K<P4dJ;s4Xna^U[L*";sQ7^Z]_QDA>\iaRK"kRHIQt+\)$khCQP*(oO%r(cgCYbXJX)Na[BKiM45a`4<[,ABP$(:p?"/es(Af%5WZNT[InS7E<n\I-64Sg"`q6/2)k$2X.1*0i]JcCLK$kYm7(gHii&\.:(>[X)Lb%G!rE"mSP&jO8WJ>!i-D7YV6!I`e+q=m<e=.B%_Ji2r/sf6o.2a52KoFk(fniTe2iHDl<RkCJqiE_d;h/%iM+"-Sk#K%%cs#]7NU9%n'C,@W"gG]T0-&"U.H>K`G-HZt7m7o,YV4i9%KPkt=;S6;I[2,-*h]np[`JIKU&AOCV92@\CcF&Xb3OHWQ\<plJB=<un8\Y>mFJuW's8>['=%q9]8I2/e@H&Y$g'$:dZORNgX/"J]%AW(Qc6MJ4Z6YC4AIR/XSk0PmB/R0WYa^ZnK&\;EebZ4^XB:BjA0KRceMQ'3)h"g)EGmZ8'oDT7qV\Li'2MkH:?'J5[4NXg?$Y0.$%FK$a1bN4gC?A>]Up77*Fgl:*#h1m$H&A:5>M^K0UL(c,E^G8R"9.<`XlL$VHo<=fRbE:e0@r(I);e>]CJZN[&:,%9t*@JE+cl2eH%G9-YjkRj7@SaCQ6&?q3s)c1r/r1.[N3<7*aOT7$?8qCinMLSH:U$KT=E0DkX.c@/V0uE?l$k'I/f'4-Y`\Ml<k1naqGTh[Xpd2%V%d9H;*Gk8alAf32AL1,U$"ZrZjPBnQ9])7D^^=f"`ecn%53;R@QXuj"66"iNE%/kgd`@=VU'f3`Kh6BjVQ>02$fFQ*,,r)7$a'/KA%$,(c^r;km)A#<?G\@lNj@4SUn#Zo=\qe:7SoO=@#g@:g<,J/k7,P;^s8rOdk[S)jr#Yqn@7i5SPZ+IVrTS)5!pj8:"fTp@+!ZX_]%+t-,,Fl`O1b0gQ&Rg7Ch_5Q4]:'eR%#FnWVO*"0MC)"788d&2$F;;\^4r]$e'Y,2<=K8NYZjD?.3n,Fg2?=oXY.aI2RNX7:np(Xp%Ffe1??8'=sY_<r*DW"M,(93NFs+Lh_c"!s\/'<saXHDPm#!hQlf$FX:2*1Q+Ul<XeJo;C.;J`>J$,jU)`3(+8!<Uf`A9ne,M:7?t%W$g[n)XJd_qLIscN!F4)jJ_<"W2Y(i'6?L1aeei:9"S]@leaE/J5g2.O@Oie&m-5m4J^d=c"JNP+WR-WN`!c!eC[r?kgT+O1RPP;%RdR,G@uguB%P\f&(k$X+UQ\*rWOZ^nCKVsXa?)*rp#lEIqO?U@]MQ@jN'0hkD9$r)3p]kQZqI^J\-VfF/?s_+9+^]l-=reCSZMY'%0!i"(CF"Mp,cQS+_,`tWd"r&T[pK&VM/EJ)0Zf&YW@T6t:ru'U8-mNsgXnQC(utp$BRAE%]o+=1+.$7Q0$X?-iL(>u*>b\?F/u,g%e=[>Cg#XQ5s2)2HUnUQus+U1,V(`4?V=-Lb+p=TSL?+PV/ZFlRO.R*%Fa41MohXh81o(?o4EfY5=Kg'.HOF-,)7t[C^R.S-8Hhja%]Iq&jXk!]\>kSQuDr,oJ]-sK/'_(SE_\X8"G?%X/lIo<i<a=I9q/"cL#gouk)tUeNb;%+;7kXb_lu)o8]T:[<;BU?G[ckXgc`4H"%C#d?B*K3N";A4r:'HV)8Z*`/i7n]mWYF&!5+"/-br@56a+s8F1P3Plt&euH%:Q(LkQl5(m<o#@WaUir>j).ON2TjgK:3Q'a4]hJ@%KX-ip;X@q8Zcu#QJN7$]HdT5HIP?"H6`D"I%'[<Q.C-W2^;nqR517%b+OqL0C+Efs/h!sFieP?g-*.<HLe?>cg%O\YEEFo5C1!8a%o0p)"_(A391mMITi(bIl$ga.TlG*h#DV-4MC5$q)8RuGbZcME#F(+4Q1%8GTJ^G=W"s)D3Z&K-hA(oLh<7G`@*FQRFM*^D*L$R'p%[Q;J1BXsuMhPV@*#V^X'S0^`7!!C_t#cl#T0ld?7+WKB[D,Bq(A-<h2O3QDjE>L*'E*Oqt1Q<B&9tj)*Ir38=MdmNR5i5gHcGV'f%[\F^CeX;jPktIW=\T-K5Upc/&OV/$YjDbjPPtA&1;/?U?;HaCYgm)Jb7ZH\*:Y@;Lf3WB:B"*RYQf#hf"5f82.],>3'#HJlV/3OR%T1=S`7+A:UleRcMid1G/kRH_2%_P$A\BmcPjN6c!D-bOteE[CpiXOg$*0#b/eo,U(3&AX$Ju+mH%l%UI"q*AWLEA@XR5#bGYtQ4>%?+m!<)u#1&&uol.U_e\61pt-+.T[\1D-NoAY/?ur<Q0kJ<anFIhM`4:9sNr!L(D^&Aq.cRQ`uTPeX29'Zo<C,h3cDJbog#np,D7K%J05a3$VW0I7T:be+`s<$rI>hsmV.ec5[Q#-!$J%pe0*1.$o``/<RliV?2?Fi[l3I@o\,j!RWG_'U7Hbss/c8Hi$CnG'\+`9^"Wgq%!l/GHDWm`AI5u7e3BgXP77iphdW"W!Ga:jh6+`=sZjP01DS:ZTf-OU!+!3b@\CK:D5[)n;,`^@UlT!.E^-PXW(tp3XmlC.VU+PDl%=ZOKgB=BK?"m$O`8;rCnbtE.-ibbFI!01lRnu/6o0SNE$@Esp4<A6gQ+\!(\Zh3+oA,F2V%sZb3cm"DaJFH9N!m0fn]fn"iXf=+N%&-s$]'\KIPGou">Z^csiS`h@L93dqZlP)-+)Vu7A'\Ml39uEYMX\NBLY@a2+[5*W$3Ci;6>MG#Pl4tgfbtqG=C^oJNb7U:O*%>[%%:l%),?$h=U"h0SZ]#2ft-RMf9Xs'?&?:-d636A1^O`[\6C\*Kl(j9#+D*-?ET,pr15=Lm:eqKj-P@k41")6@i_0b4%<^^SeE^>f+%4<kq:p*I:uJG[I`*7WI\hq@2\1k"1RU3#JQc<?sjF1fb\kX+banC.8:E?,?Q"=NIrMZXl_UlW[$2+NaSEMObY?S5h$Cb(O=6I$0Q%;oB/9>9n,bp^?#H@XE;'.5j%ql+o99&6E2q7h:\unlEfU^%j%F+p)G++@'TdYMP24U(LU\I1kM$Xg2U5D8p_&m^UNH>2M)$1.FfG%jW+ZlRDLq8@=Uf)RVa]lG19WU\Ob/XQ5qsfNeK2f%Dl5kp2V'ERtRE`0/KHZ.P7:a1/m9uPdV?#XK<_Rf.po$;`;tX/(aB_]Zsp)%gOc`uJJ>tcJq21t7Vp(,@mSDsO0l+U[p%pEi[3R+fC%cDH0[5G1f"C5I>JMGnhq@QKI&H>BK[MB4rLk3Vn)'\2Q$/5#bRoPm$o7\%2LDC)Ag]%Nc!a+\)C0r_JQ@FM4.8Hp\K/Lso2V4[F0s;r@lW9=:>adQ5Y<4P7A'jJ8?YpGV8u"DC5JY[+MW,5EEJK>_Zj#3$\n;k%[Tnjrn040WnQaWYd((E>Mp=(4^plI;5umGgoh3)1<b?<`JUF"kE>0#;;T@)EC*Qf[Y(2[I#LqB?Os;Ns&o>Fs5sK7b6CH==*!;:8%KYCf925AE\Q:5;VZ.FQ!eZFD=S&7c,C0U;21!2&IqaB!Uc=Sl+,HjcLU>nTPF3\uuC=^Ye,jR(T9cA&n(dg_sMN(g3i]ud$AiL^)%1FYAAmR8rn)n@c6LF?BfH.\24aj;;!I>XdXq89l!Bi5Z[,!eli$s#$*&C=aQEM1>F'K54/CA8D/DR7ZTdCYXKl0L'hK%/bpEGW+/%'\2753@iiP>mf9&opNq<V*Tu3^A1epU4NqM$OP8(4X:__e^:_466)s!j3i;rpZ$ET1eWP!l;"`?#Lu@HQgK,O<eV\k'&h]Lrk6S^%2u>QRWp*r1:3m,T49eR-H`_-HYiMaZgIBEos3*&sR@PD-$MTF1b5=W"66:5^OicBXR^jo'ps;i`VL=Ju,ed\1WN1fp7QJd>Ib[YM%+Udc[\%TjGVEkTkrj,2->B4\\LrYr)k7h1gfKNVW/?+*N*aUY:34\s3AW9eQi=*$Z7F7:UC=*kd&qh.0B``)nA1eE"r0Ku"'lT\]%='f*"%Zk9?22RI7i[aEI@+$:XrbgMPgY)'k6_2nPQ?ZeK^<5/$,Z')J0j&&;GeOu@(l^(1PV"s6FfU+c_VOQCjdg3</[<Db`_%8n%npGpG=]2gQZ`C9GKn][*hc'UgOc8?F,R>X'$<*0a_Qp5LA8`Zol).BCDWen6$mdf8LeYj*Sg1P(a\1.GBD%,[ae=)-;HWWr[m3''%e51p?`=8(0W?Bd6hIsMUEf["u?/E,gX"Fu"l5&\l-@f6+69?0c)q5Gh[AV_iA4@S^D]tn!nmDeVIE3DG!V$fKf]PObDPt?Me=u@;%fl[GtQi\V7H%[oh81I_^e>0!C0tC1_=<^'^I"kArJfm-(\Obbt]DE("=!9bHnXM`06u:tYB+sX*4D3'#;un-jbN*i^Rh)s>_)m\:%di6`c_pb+)HB>OFe#LeUIie=DFtu0O5`#$=!Qs_%d4WCE(7P<orgb5pXAr4:WULbVZ9g"=+g[qaN=-]-JA*d#(V:E2/jiK2-+`.'%/L[o_\(kMqa-/;PQfMK$_$-,iq,G"LMoeuf[mFVn^W\;d#$6*<]H?Y'AeI3`.,`2'HE7SJ(7QN[^pS1d+>6O?&Rh,nhln:IW8Gh'%KPKkYXbmNXV:M%sAlOTq>Jh#PV*GH"@'B*?<nT0tcR&l'hWHrP*!+kaPIlZ9P:T>4+jFa75cId+B]2RBE<m!D2"&EOCfji$+N5\:%=S%B1e2MLQepNe'gnFj]R[!bN(unU=#oLZ6_?IJq3T)<&gK&AT%c4*X8,?e_nW&B0lE88CF?u?VoRRq,%R_\VV^!<6J9(*u5*/qs%;OTrXQ@OAK4F8.Aj)un77EC4E82B9lcLh1PR:q@"UXtU9@ZMX$"6cY5irV5N5D_PX!E^,.)=FV<YE8F=J[4_"bm4@dHS94l2A.(B%?:G-!2m(2ICYrCH.jC,Eb-0Vr<\Z&cpcR]Zm7_bZR[\Tm(Ks!9UfqR[GZp/V;3Z;o0K6tk<Vek@O5q.V>GjQ_ES+_0ObRYWS?3a"%4rRr\79[@LEu+23r'GH3&e5u/mJJ%aSp#R`WguBl4GMO`:EK(,MpYkP;C#D%@(mNPj)-Ju$TGL^gi<#V@<:23s0k>f#kH4o)eE^c%kA(`L*Zb>/.7A]B32gk?8iKc+]enc/rMV8WAG)YC!@-0QKU6HBY,KAW$0JjJfIA3W]QYCl3%eYc,&oP?_iX*sBB==Jff*Di4AWjt%5449LPg,`'IRNO`lqRjTqTe=JCUF.=o"QCgf@Pf^0XEPcfDbAq:;"IR);^mYdbo_YN#o$IpFr%*S),B$lkBEng?C]3P;:Ti43hC_%[f#bYl(["npn[YV`r*?;M;*dR57=[\k`*[m+qTe;:tBF%Tk,,W>#Qfhh]P;EYWE%UW`2Li*_=/3^dX_];Ki*"[:iVp6oH%/U_5oM%5*nP!SSW;f-Y]Pt@Z8W:l/WQ:ij,AJ>aRE_1)NQ-D2YiLYiRqadP@LhC>4]$JYl]m"fTQg*m`jO;E/Ri^^4!rcj,/iMYA]bbsU1s%$uN.0ME]0'&LW:3d?&ONnu-cZ?A,[e:ZR2f>+F*t=jVVJ@e+Q0AEd(-q`7g_s5eb1h;A7e?iJ)15Q:6"s8"DKoP\)DrnAaqRm_pQ%hLGFnGQ77fs7Xe=npb$GjraT]miRU?J,RE;rQ@Fad_C5+YLeL.rV@%CN9&eI3bDPqB8;L2Pls$f<a;pP1h_.g%PC4ET3;\6bY%Pm%0"?jo=[tX]'t7hhZ;"QPHC35uV[W*bHgOdl).c7TFCC_C":D>@Ls[+bAa]nBf48uLb5TfOEIHW,0aY@s+9o,9R'N;.Uk;T,APWf*%;L(tL`!%SEcHJcm0gnr"JoVN23[kad]0t4I/L<;RLU<&V&LTPe\Uu4tgp2`?+[*_@1rQDL(!R`$c%8O67_!VASDkOp,(f+Eijeu`%1CnA:Bi2oa$?m(9(&\r[7tj*Dfht*<^3EBb!hM2pFZdq,#CW*Q.,hs8mOd)F:b.sc5MaSf^Y-6fo>An$^Ch)IbZm$PDe*a>/<sdG%6pjfLGAf:2f'(qSQb,ucorm(E+P>DcATC`'q.BCDp2,8e!"rL!0nB`j3Lk\T[$'+GMZ^Ef:]^KF@a"Yu#`[2=X`pC"'CgS`;Xi-Q%#XL<+[66&=hfTR=in/_!1G;U[cfT;Aj#!P_bL"REH[bmL6Enm7fK_?E]d&,^a\^muLC/s9-Pqhfk50RcFd(!s_@P1cNhUq\q]E7%%IMVkWA?!6@cr*0u9I`90moUB9$EQnI@Ln`[6=RBGk/Ukh;[88PnOUl+JbS]H<^:4`0V$[-,B.][Mgm_Hn%R(cJ%GHa5IM+7kF0RE%A,0ec[bj:4#^d]IlOOcPO3ZqcZi'i1-)$;VkWi5g"s:VU'J868An`+I#]dSpg]Xnnp2TS.:;Au&IC"Oh*PY"]C?,nUX=!BXmYHpl%bF<Lef`AE&afUY(/8P(B^,sYjE&R[pce<lI.EN:615nanH,$a-XV]n)Uj6R_c)@IJD!>1DaO\!j^VcgP/e5C7>`#YnQF&PnCcd"C%7MFZpm<]<"OJ3:Gop]4p[)X$/kU(Cs]K9PNf9OnNkp>nf]D;=";4iI.NE-Ps/QFBVSX'ChabJAC8H>@!!_p&Lf_uT2^[P+djMn*E%rLm$-r.4AO>HH;aM8WG4hGbBh?r,G6#Vo?IPSJmgZcY)=ioqRJ9npS4>74PO>K/>M_s[HSqP53T%fUimq6Pg#rNX>&b*_V0i2S\_%O@HA$JC-2j5GC'@0ht:3DCQaf#\;M[3\no1I9>$/-d?6.U!1H(R=+io4<[-#o+97)SOrhR7k4(1SUQeYHr;1O+U^>N]%HFS\i#^F%dQ4M3K95^1%cr[rqOgo=em,CCo]-r!UUn+#HnEH)erifepIEm[:F[?f4BS'$1nX,Cj[5^%IVSR;%;IRD7r9?(lY(N%i;FWM;NH^)%GgY+b`KkreLUtq\d/7]p/ZkAAP"1M'Eo^Sp,6fjH">JUnqW;>ch:A5[jC#;:hfq([+*?3Z!-uiZU+/LS6\i5SP`;+_-+9%)gjC4X%$oMCR,6CDfQFuij&`r=+3(W2LKFu^1(]I!4'<?-"^o>M+L*#4<\(B7jJ6"g:('llbdcXA8P/J`(d?93)Fnpp$C_ta/B8)1:/k(TC%1/@Jplk/U#i_'om3?s_fef`4(]G!@d+NrW0&_J^o.U?9^\?][Q\5Y9id+)*D-3b$6_8*'L5D9MJNI>o48HOd24QND?g'F0ES8=0I%h8R#8.C7`RZ`Um^%@/3j4P(l`%!I*NN'"p6krj%3hLCu$5O>oWl*rV(Jb>:9"cAG$6*#$@bn@:K*@dY_B/opMpNIGpm.LV9A91V<%J"%<oIaG+k[Hf!uUP-#7I,sOg-A5(5Yo"%W+83[LX8j5j]9+'[fa#8JBQ,UB#u#48/[F8VjNG6(^g\qc1Sii"Oo>s/gQ50RWo<nL%ALWH71r@9n8d(4=CZVG#+cEuaRnbU\@5e%TbOFVr*oH"3Z@ZmBM`l-;H;P"=(?_0**c8M='_i//->dkc#Kgd]Z;k]$7!CfgXsl"I%$.Vc'B)+N!/5D=$6NI70X;lG&Z$^@X81rRr#rcF\[-*YgV.d3f/9j+B_\EtP03Em7r'mG@L(]3_OK)G3r9Q1o8#aMmOA-:[C3l5`%D*WZNB,m^A]Hq66J?fH/S0EHs\`+/BEKTi*ZL2%iOG_5E=0CLnJ.F).-a:2:ZUAO.Aq)lk3''W\G*X4N]?5YNIB2hUHN9QA;lu86%^T0`C$ge_HTQu,6$N+$R*>(N#?HsND9VJ`Eq4r8d)f$INL#)-DZT<m?_Gmoh!"Xn[Aq_b1R7n0%Gf*PSOJ\H4SZm4bCVQ,!CJ.8i%g5.<CCamNs?n/XcfR\K3ha'A(aK_i<_0QAC'![nph7SOjka/\IL<)ec"u0SCRCp&#/\'Af-'ZcZ6e>(KVo#gKQQ*!4q4uhI/G>n8%R%^&N<JHe*pKY(B#ZaEH<puFk&jkOnK8!lOfhn'N<oCTj2BSpI[<7&X&1J&*7*i/<'eZj\.HanL!`n5dp-]on=CneXkueB*e25;/%i7)DjD09YfV^mIo02%MS@:<3C[UjYrr[*2feCC[hb@%:=16jmL5Ubt[Obm#CLt!eXNI0^[RMo7N@P4(S7(H-,('__L$qi"3d`0Jd%_=RIe9e[8\?"F/`:_HU-,Mc(I50s,&*o`NcKY"CDc?3-ThYb6W&+_R':T=+H]%HTd,eEp/XJf)Gdf`na'j/?rk=#4l(Lp/WHBk0)%7T:&sYn>%B^r+WHZ3Hi#*7@/D]bR77W3ja9@<%gS2#Ru%9f/ld5VboLJ;!DA>#r=oC5UG2-jB`Rm(*<3WC&'`dc][dn?RXf.R"8F%PS7eGon+m_c9GHI5;Mo6An4SHqGZ;*&cEF\ZC_q$]uHP&-3b,S$!rm]!$TJh[1EX%!:HL2,+kfQn\)7;^GssV8B/ANODWG);O1u(%Yp+/]oAmm@L"T`D(@NM<?oip*.E^!b8[:<"(_e'XZMP)"V&^0&9686da<l&gFY'eTaGeR.QRnq\PH9'a@)MJAP,M/)<R@1%/=tY@%hMW@_M@%W-$le$libg2&Pt*`>\btHT($9laBg`1%7FOXR)\,\*ilb:K*AEQ15M/jCfj*FYfo5*Ql.KpZhf3)M0kp#kL-3%;;tkN_%MNfQ#rU%4[IbH`]MnPFZ?bGII@s14-JgTn1J%n-:Cos$%gqejjCt2[WT=\3sLJ>I(![(lX<G7?Y?g=k;'>R286IFS=FJ1PU',l)E%-d\X$)k(D"*'OY=HIbn7kO8=bGd!<PTa+n=3&f[3"i_*J@F*"IU2&;$-a]t.)G*eR9AN+tC5EM9.$d`^MJt<"=!D>%dD%t*cjoQ5%)RBD]N0kf[g`ElOYWmI-]@>\r_5*ptMkZ8R`7"s:b94E?GEb?GXosDieL3Vfc`k,EcfF=_RnK+FS?AS6^g!I&o[g](qllh(lm`&E%,1?8r;W.R0pZ4H!*QaUS^jdbX!&f3ZhrG]\J<?]`/]Zd@9^r_QhbTc]DDF"d&ap/rBScn&7)jAa^=[JmSDudsFEKPq"-dfU,l$Bp%%9GofcTnJ)iK"X8eGoWc1j\4GrCd!SjR)NgNE9p/.U5]>JYObFJ7J11)=cr?s(sk5,[e5EN$,X?"Na-K'eOc2-8DJ*X`cES08A$h%dM:6%=V(XT>%?)o?Hiba@"I@ZA/sMb1R/1kd^l]KNOLi&5sebAThCES1W5U]S9$Eu'kmJ>juSDY'_!KllEW[&iOmKX4W"KNRd3Y$%F$93^A8C,\D!!39o1kfL#Bf&6OkV3u1?nQIYB`N.7Lf66VD_'@F%-LC,K[-,6L[(Ej1_V'$(F>K7j:t63S*5$'"UG7p5:U@HLoSa%I1Af\l6o8f1:aRl[?15Z%Lbt3"PX,RcVZe`a?R)/Mu#Oi>AR'PTi@$N70)sb]Dp=Lp%7Z7gY4/\E7^H=ikna52UuuKIV0.sNDdfu%qM?%9IspmSc0>Zj;(-`t>p(:b&MEgVDN(bhgCJsF@@!8*Xpld1P`%Q(R5's^(t/mL;Zrq1h%emW:$".5l8m086ErW@h'T8S.OO$p%^O5fi,PB:l/Vl30;Z4I"9<5YJa[ID"M%e"V%1X(L)'5jRnF[eVr?7W%g$2ZZ>eiDEY=/n5s#`ghOsbpB6+3r(h>^WcURQKO=:pTc%/l(JpWZ"4OW_iX]c)>O2P!q;tX\'=J!QdS*p2%XgMhSk1Dm'r=gFe+H.b+Djm^><ebOHU^,g?5d<CMV7=RH);CE5qs;pIq[Vn<Rg%Wb,!BI!J[Iq)6)/@6<hniu\tX.7FsH(\,D!NguH='M$XdjsOr:OX":E/QGYpNZ!^`rp@&h7=jX\=WNq49'g?1.l\o[ST1eGcqXaE%kJWmAb!]cYh-`#?^s:AlX@59">,H%b7C+&l^)(]fg$!,jUX`V_?%kq#p0;B:67ssPI=63n6kScHE8c9@PS7\U,nj,3B1!2[;FC&)%1cYs5L#)Ap'Pk8CRF(&u,_qm\CiK#ag`6POF!k;P*^_N]RM'^1ZU_I*Y/_`oSB?h;OaI"fb5S:h"OaVgqon&=O+>@omVp^lR^B:N%(C6J@inZ$'bV29g]pKJA*i5sr/`ci[3M!JXeR6Wt"qu4rmr"L?p5m("<;0F++6'fQ$Wlp?oidrqG#9_3TN$pbe=XkB9:ASQi)WcD%?:Su`9*TOlj(*UA);?(<9mk7>o:]b>;E(9(KIlUKS52o4`fLVRI^T#nF#`V!p'D=;nopI-k[:_lQJ+2:=R_Mo=o!+-2p4rm!HcWd%q29_cH"n-ToCS7oT>_Y:Wu+!_Z@Xo7:57?)PG\%e/s2UHL<!%I/'OiJ`5lS%)$<W5[Y\nb4f]i&okK33VM%K<WPC[Z)F1knq>410%,atDRX"]Ic?:!O732,fVD^.#>Bk/?E-!>"9HsD8,]5#UPAuH1n5U'6GmB'sBFJQ?;0AEojF+<lM_?BS!bM\JQf?s,"-bdZm@2coe%>5$Ab3?q3+]&q<Ii=?#'`1?t-<Y`.ZX>,Go90K*n8k]`ff_6g=:;6KJge;W#$g-fJYoF+;Qre.%,kK/b9N<7n3`fRiPE7F'4DJS^%h*h0MYdS\Znq<rp0[.OgN=Uo4ek^pJ;)nH)C+N4]P0jG!)!K&tKSS3'b7O\MUm^%To#Tc7+Mghp]K-N!l!6/&VD!%OiB/C]a-?SX%OA3+%!..-[fILa#Yg01Z2HsD/K%;Fq;49+FE^bZL720p^J+^&,_7Pk-*W]q$>fTFnrC`j6$h9#\ZUJ(0j@V7<;!,;D55dri82Vb)%NLDgH?;7eXYkC4X5!oa2"E;WHpGuT&8NNq'$'<P9l]3s397p*_"C_31;?=gAm4tF-5E\Ztiin]d-Gm<edK^(=dbkJHKKh%!#nBp-%b,p9RqM/DROQY)47>J!4\RC(d=R`_@[>PP%,_,e$AL/I\jkVCgW,J\6-tQ\AoVQb;GGhPRFWl.*'s8*K33P^;k_;8P5FD`R1eAn,%g-e++X!mjQ,g]+P\BD72jtIrDF"lL/!*NT<;eaCs_O<G0a\2&]^Mt6Hn!\<";?17$Y%3;80g/qf4n#r<?!]qX8U:O#N9?0+0Qkph%AMV$c[o;^K^4jU0%2@_6;*tqJkp%j?,D[&ri^-"0c(!V1o+k+kCKao;?E28*IT(^oY\DBa@O3H>)2&.i,=d>E!CYcY4Eo4b@g<`m%^h@^Zn=J'P_al*U+22M&9i8E0&KQRYYZ>ZNPZ>\]8dqAWYIOtQs4L,9C,KiMXtK@VQc*o94Io6Z9rmWG#E:\s_(B\Nc`OXAGM;X\%](Y$[/(\p3QaNc?=+=W?O`X"M7O!IBhiFt0%giQWedug$i#1U3+Tf(YoEC,mD,b<`)b^@@YPSGh;c2UA7rgd?MN8[<E8]#YS&U,V%1Nj8B8CEY-hR25O)O%)WT&a^niL]6+KT[!ErHe":/D"hg[@K`/M1+'<:7jD,"h$>S;LcB"?5AOum;=5sAa[V`36Dj&;cGM.'^5@]%YXdgVI*7&D6)5D[;E>[?VuRKW9k0o>cE\IeG_hfUi8#&'N8,''e?d;mJT/+m,>T_T'c/bXDYBtm6/]=aor0\SWOc4;K_g)++pJQJ%nN47_Z_"VVbT[MPquM,ehH_e)/$ct>a\Bb52g\e\,a5=&DOG4?<PJVeT#"0mE[X<+=lLo0c`paCXA'S)5uiVJCYL&h@h6Y&EO/_d%m]e^)XJrK@q,k:#B$L0j.&(Ecf;r0gOO0r9m3:0hQ\c;uQ0h>>+C,.5qpW$t;$G?'rQ+9=aGqL?$,IanY3mFY$,g>cPgdEL[%6T$%UY'b.*K&&KQ*o9";(^hD>Zl5$/bSgiY>#Qgcq%#dJd!$(Zr%s($nI'X3]QY=K#`,ecB;B49+/d'Qqq:5IIQYIG\=Wb9HGNjNf$s2%0^6/o&=&CP)1,dHgr.AN?4u"&H5XTBFIoT,HB46pOK@Q\2O+,ghf7TqGfe<iDBrG==q%Y/;KF.eOmdM_E\6"rO6`Za)q9MCTu*@N%%\m\^XXY1*LnpQ#glZ>*Z=a;bDX=DfbXdB1c,4>r*7[tHVSYdGJTM%((DXgchH@="mogUG(-p)ufECIMFQ_S>$*jSuY",B#cs(a_%',2+Ea<K^ula@pIjtCXfY5(1@,jsa0eOsnG@YnYi-!g)RU[[0<#"@p1dYu5(0&\f2c5.U##m1T@TKWDs=g/"8\7fDTH1HuW$_>.)%DImP3[T=,]fdWGO\$_8>;%Rf2+,'6YW`>D\,qb8/7H&,LQ2$HO-"f/AZOcJ5XAu"uR2b1)(ISVu)_KU.Rg&2W0YXi_Hr6H>)ZF1Z%QBA`]4Zb"<jciQo&pdPn^Rhc=i\GZ"28KVF$:<G#]kh8m2e63)GiEi\K%Y&3'34:uKh"-t>&+t^-[mn,lN$;>lJ-Oc1I#5Rmu*JQ%s)bFjJYQf+Ccbp<(_59IL.`>qNO5g)Y?^EM$m?$!_(.>7-Nlb\GoVBT'(n7*@$&]:n42`aiD0\/#kZdtY@IKuU1WngLkreB%Kf!A%Oh[XU0M!u4#Bnb>@?BWiB!RmJ,k<+tkKsgBMt7ML!gZ2N@dD4E0ZV:[=BQPB6OD/]#RI04A2I]b=_p+9Fan5u$kc)\.`1t[DrY3R%`,qKSWdK[V_FC&s.\0Dc6VW4&X?j[#V3/&W+;kHLpcQGFpMd,&\T]PVjE6P9doLWina+P/NTJlWA`X%4Zh`!:S95EY!MFm;nt\UX%2g4J@d(kb;3@eI^&3u!K$hHORgqk8i'B'k.<K&Fq[lIM_):Q+S4e22Ae<$ofc`%c1CU2/P2]lcWhCS5!mN6G/E^:cZZ8!aS,F*f2%CgOr_+\#Z/]cWZ")0Qlb?8:u=OW$^M#q(gUCJMtKf48ZF))Y-s>CX6oUPee$WX3%9-hfkNU1LsmLBStZT$]I>EasT9mMjg<m3_WB%Y<Y6\=XImS_7Vs-qIY[O'X_uN]\UInY>b*14C\](<ZUa+8UMn8GtNQZ]al%T7_@$p!P&B+A+'\%rP76hdW\%"/q85MC)2Z^4V\ZA%pT1JZa"]k2E>$gIl8mhJnV+m9nD2iJfg5bdC`RsFJQ=gqfLWfF!-<#]KFtV;GmrZBl-O":5i#%I_)eVX6alQq`/:t]Xr_?9Y_T]@%qMF2RH'SX[)lC5,ei).omCmZ;UGK5KdB77!j\DS)Js++`#\V'j)XS_=%B2tZOO7/]'I^VXPFhAH#dk7Gq/.@Xg8+sS'*!kF]TCkB%CdpZLc":.+HJ)4`7j:Nl`!:lJbrmcN%i'Dn_D.m2>1Rum$!T=ld"X;:p(aNbTfB(uXEs->B(`#3l&APld=!:8g811jkeO'TDL?d+%;esKrp%srhW\se6F%[J"I<mf1S/(;N9ERT&`ErN$lgQ_tK>bhPRl9IiTkH<Qhej(^%i1HT[BLts<1*aAT%g5B+1_uX]!B'0j9p&#%_$6A($@.E'[:+H4?`3-;)3jL2H7AJ]991bV;Uit+YVX""<c;bWl$Xm!`E^@DJV@=#k_RST0(g[&JRVu(Ag!(Wc\6-0dfJmHRM!K[%$4Xd.Fl`D@cjN"Xf.nISgRqrlZ,9XB.L]jXZZW0M=I+N-h?@="Hp8/X;G/(MmHC/FbK5#aSpB`$,"J15K[%P,0CERhMoaeZB?n7h%*?=tJF;HLOEf"W(5"u[EEpR'*3aH-0LL"S$n!I8RgZ`[pM(co7-Se1k,S.IWJrp]WI@I&);`-0kP(SbCX#k/i?c]Ii=rE,RBUT4F%GrHom5E^M+k]p][apSZ-bn?JGeVmYcn=O1lfYQsCq;j2H!`F^RcdBb1VBT,8)k%'-m4*lWJ(*Ye,9^.B#,il:1>="Im*)O[.UQ(p%<j@_"+Tu(>?qtiX%N3bN7DAkdeTj"\KXeB<]ZsUmI0j@Lj_P<*hGU?konP;nDo9:;:ALO!dK$)I:UjlIlS_N7H(u6Dq@"\3"pMR@%S#`-5n0E0e=S2_dDH;RG[$\!W[:[/U6s$cBd8aPf]?"2o8mW-Lg:G3rN3f!B1]1.7jp;3jO)5Mh<#JF<[s1Yj<O/Hi!jJm<hM905%f3h&L%/_L.36bK1J,;7!r8_8W"hsAE+(6cl[T4"n1V>CA-FXmOC[b=7)<)K%3u7.PCtE=+(YeVL4-Z>ShG[Mq`3/(CdPN$TMh#;K%_:UUdPRs_Kfo_Y17kT6q+F%Z&iQBj,!u"fT3t.&"m]s,J5;+_j=t,M*9I^inb[UC7EV0!eWD@]UP.6iue@)4@^5m>2f@ld:H@N=8%hZ%Bd%:U]2h]NTU+Cq49210jhWi?QoK.R&D8e6,@d0[moY."_VgZ%*&nGdd2F=YiliDRB?%puJpm*p2kYE50edFue.?L0sBhI,R`%+DX$D(t]5>I`UYV#U!#3ngGM&)t"uYYF3#tF?I;HPKjg<2E[[;eH/d/p6(M4R$L>[=`,:(/D2:k6;jJg#81E"kqTY^#&r;mEER^s%"?*BbP.m0io?1-3AJZJd@`P:K,)'%l0eIf'pGl)EHI.ku"5UM#[^R2P\Z/&83:)fCHJ9AGBU(/P7)Y-U:_XTIH:#7RSO6J+R"ohp%Mtt1M]7JkAmd%3WVl#1UVmNF^>UVd3X:3k39I8JbF2L5-r&nj@^[h8!MBf(KfI%+IR9pgue\meMAb+72RCsKb&1Yst3^En;@PtL/%kEZ(%^4[BlMJ#]n^Pu9k1\6fH+!uEPF<`_E[q4mMSYN7>^F`,2A?LiKLhW@=cK>j(s'Qqo6B/7rqbJ_fK(2L`<RshhPu^RrH&SGO%F$VE@&l&ttmp#QP.4*Lm;(\mH=pVfpiO1=f$03h/\uARf,L)24]gU%*3FAcNBIh,6lSp>e;-1O3lC,7sH]NC2E;'EFPg_*J3Y[IZ%M9'#0]jLUm$)iA#AAb[5MauJmr][p%oTTQaaQSoc`IN&s;\\1YI_1J1)4SAOJ$N_u1n4Zuqsr3Mo']L`"\:nCGmak7.>nc_pZ'9>%D);U[KTYB6J<\o/[t!@J=K9,?Q/FZ%;IsYEVIM#S^"@fQJChqcY%Fu,*LYAUE.YZN?UdR#;JbrqZ^dj#mCI!0B*(!68P+Ol14Qj-%rR,3s`uBX2FReja=%\kjb#VM0qtnf?K)2r%,n8oo#k"?2Mr=S/V`p_Y;$m:(OJ/gLO:I0mbeoSpg'[\\YI:;=fYdT]qh\dhl\X\@%TorHIEb8a<dkQTS%Fr[r=Y&MQhGg>sMsgDsKLG#O@2Xd$^c*q5he&ocWn$Bb8-IG.N,-(W">:ub&ZP/G&tfu(/u!YcQ!_/2r4\'m%m6j_#1WgZREi>gk!_g#F2#?jE,I`NE4@Cb3$FQ(RY:W0_=l#@:Y.o%'-"6_DA?D:hKa#8+gPbKQne2^hQDug]*nCsWKnOVQb"*?U%.^t)fCC"j)@Lo)>e'Re:4V:!+i6pu)$TB)C7;Z]IXgYcZ5aSd)aOV%'6J?^HW9%+@@R<=E?jE*,i1"+b7S]70/hl??So>;]#*VXH%E$VO[Q7k,s;X<CF;u3c[mfIUlVF7q;dD+M>Po$R_GLH?^J%_M&Mf?c$(XPK>Y6=Al&4K*0S3F-Bii_oPSF"$tC>T6A!=7a-^F1:u%bPBUfRerc(&_dd\kLogk8WHO)i?BuZ636pOjf4j.5jm5gZW*tFmZCO*oi-F/cD_3::\WltE.<098Y!VG+,kNli`u,;3Z=";9%e"p%>lLCbEEJhmrpls9He_BW?dZ5HJ8VRj@ShYEcU`r8M&'DBTq9;ZM-3.sa^@'ka`R"0++Sr!9qr?ZZ$e$ojC2bE',9+/eC)X2l*N%&%'8-hQqhJZGK%S0(_u/F<CLgHMB(:)'9=/Xb-20q\I=2i.R>&[XB$)4^Q::ODK7;TN`QMk=YUdWf.MZcBDi3u%Gsjf[;Np<1E-:)u%.(q#5j5E2d$5-Z`Koj52H=&,."5>jS(=c#.e3JWJR%s<gko4WkbS2OseD\iQOdH>X0nr;QW$g3(.V_Q385$f-$:pZf'0$aSEVXu&%p>^<O?8p2td@SH.\4U]96.$\4>]4DH845EK\.7#'1=lOKN*KDqkMoIn?)RJ#L=2V`S812IL7Yi;f>:ZN=R_+d]-pC1>s.3_@HYFo%o$(tsD<HQ?SR8OrV_q$fS04Z-?FCB>Ib`5fbGKQ:G:6ZPCKsA!5F2(c%MO@TfCX'Vo#LrmjeroS$%$MP\.:*PVM_[1='<SP7SG9$%0'_&kUkr9#hH7K%W*(3BMN-!F23aFS;GE3Wd%U4'5VgJ<Q,pnelP@huK6=NHj*f_,_941723ki\iRl[.1*tNbf-0V`9Im3N)AGae%Euj!G.HW[ef1,'cra]eLY-8dSJ;W)>n""`on@@CfI_2tON=BIt.!0Fe9Z0&K?q9ij8*.797^EP1!D$]=O*I&WUhqAHn^FEY[r_)F%BkDN^8I?Gab/J5T!%RXlo>\)50dEB6.jB1[F>4MMj<--jd@BDMmdiaGhBqO0.?C^FD7/U;+n?7JRW;5@eZ1*n*Zt:*YH[7"%0Oe/%q'_DCA^?h(.WBDQgC\5$do)h/bE*f)e*ssESV"O(0a$A0S&X.%-3)+7FH5rLB.S\h\pUU<XD"[3jKhT]V3'AS$Ql\?a#964BsUcR%,EheiUtV/bVB=2RiXN-*Kd>3lI=8FL/&RLtSJ"Q4e.kWY*uJEJc=--UL>u'^Ib[];b@[0mVWP+X9ii"]&mWZQ;GB90HJilf;p4YK%$--uBRuqY6+jiBj")GF(FfQUJD0NmuW@Ng_O?>Z.HtDc*4]T4/o?hOMAX2Bn][Ik1@_k5jQutNY5'hZQq03<eS[<ebo](*E?8fuG%OehW'e#Y$=c\A@cbi`luREr9>2E4/^EsPu,jc^k3H'h.rrMYit2@a2q;hAL)..PK6c11<kQJfe:8K;6B[l3IS^h6U31K%)@B+8h?%QSRH\ngB"TlC<O4SckF],8*?p8ooJ'p#Bp>??bimd<$!$<-2NTBf,t^:.A,Lek#0`N>167d$\+R>qSSp=W@fiPa4Fi0tJePNl!d.%Wk``rClQ/VVGl6&p5S4,mV<c[B4fA]Pb#^U*Ou^S4DAY;[uE4GaY?CIj3=ME[r_)NEuE[h,I*Ck#(?*"G<g!1hVZjtEUkmS[#cgf%88KR.Vu*6Vm&A0rXiP[m,e^3/L?#J.X5L>N7,_CU`$M'01TuF(r,42nAm7]74`pF%KXH^urWq[V>@/_,LooJ0QOuH"kM_[I>a(7+%Fph'P2d*b5HKq$,f+V`+@)Y0_Chl'5,^ZXVToc94<&l;c6J1AX(G^'m+3\b!g$Rje-!71%;"9(EJ!g-:E<Ob6i/8D5J@-ArdF,$i%=[n:j?m$(Yb0BV@Vti17a6d-EDOQ^Qh6,`lC\/rhb[G9C#;!A$KfVO%d[$*BlHD?u1i@WG=$,b[#D,9lQNU[ljZQ+[j(mbcqrK1I%^Q3%&2t\_EYlN+'@mZ)&KAu?#Kqj>NlD-/%b9NEtjY)*'oAb!@??n"R+.)2IFg))eU0$BE\%OD%H&EPlcfsjQ3]3srF[tMt>XU^\%&A*:R^cu';i&eBZ\=R#[R<-NlZOtnf.HYsq0tQjH\oD/See$0p(B+_1rTuXJg!E1RC*pk6i<+Z%7JlZ!W#rKin]FdUS"U*)r>g/o%0TJtg2S'us0M;m?NnH1FmhKBl/2TgkODW]\$rA?G*m?05$eC$si?$:q'l]^j7I:B<F4DjP8BtjefSWJZFj?U`$[f<6bNcr*dt92$%m6`,.T5Sq+Ib[];.o2*k\goM>4!m6IdD?#U;^iG2oa0^fM76p>U"W/<E]_^i36dYZ">:S&'<074P4Nro!sJ=XEVUI&'0s7W<6f7I%>#Mok"1Fck":K%!l"SIRl]=:R?<^D?l4B`Dh4Pk!;t2ne))\V[NjA*(JO8$E\"6IO=@IBnD*Z2NH/(ab7f"kG90CdKdH(&4^$".=%.1dVb?&l\F[(Q_,9:^?m&eH'.MNQ__q]bMQ>>$Sc#^l&Kgql\DMBikjlf8>45p7=?rOA>SQVDLn("#S2"bJ=I2+R*^m@'aW!]F,e%>H!42^&2SS>7#.t/g==6E7$<`Q2;-$cp/,q9$=uZHfCQrP=0t^[H4#pZPWc!#s7,g'FcD3rO][D6TWYNTE.QOkch'"K&8*Xi,6Nd%kDt7Egs*e'k*W4b>b=HB#&h6n6lG,e4,\kLD!lj<RC.f>pL[QCZ+"%T1#PeH)2Z>_QY5uXUC-,-5%f@_+R.*'".\cIDL*K-;759O%7i8#:<n'nS&r&UA]CRkgU6j.7Lqd#GD9phH^YK@qEB=o=S)m5#gTM61*%HpNZ3'<.L'th'#C/crfIn?m];p/%e]mVOY33L8J6i27%%G\"a51)![D1oc7gXG-SkNGmTct@3G'dCJX%-cJ;SEG0hC;K(sj%j`j"u)WdjR3n,[Ar<mR)@;#Iie:CDCSt:oAQ!5!XHpbbJ#`n%.S@4Tm'`.[Bd->aGh(RN?<)SI.Vh(jhRa_)@;YS$62n0Uab*QM"^A-mPCPPC04j3t,kZm1]##=mjH^,B=K'Z=]+[-2NpF4!C/%oV%MPdbH+$>^Jq)[`[m8U`9QI/s-R%%5V=U`gd+bRl$C!*j*IV"K<1q&sL4,4%F$6Grq\T'kIB,/AO#+\BH1Fj^+9eJfhD"nu8Tq:?W%&N"kj6.J&:Ndg0V._n)!k)@eGRO>V8BcO`h0;RhI[43N$]0SZ!VrDhZc[jqP!qAO-;6>`d[t<;h8>:,[jW#LMRg@Wn+JD1>\>%Ed%+@-RTj_-iK:,7jdh2aVIM9r0ATU!23Nr(k!pC%I0d/]!^7?A=1VW=5NM*ma<I>t/fQeS?S=SqS86bJ^]4;;YiQSC^BBB"&tI+6fl%dTABJ%9B`F:_Q`I7:6;HINl<L1I.TDnXde;1@gSM,KYeOYcI!Z3N8?/\*h-aI?2^*8)iL"<Xtl?<F>B[P(#b?E\uN=SkfVdGPVHU%GcpYg`R"c?Lr.R@<hiEIYCh;Z:;uO2R=$W)Ipc^'5fomh$C"GD\eS&1><.A6[LomV-,k&PEa9N=U/Jt=)L3d"\a*_A@XgoAHEYaL%+0\\WLGLDM4.Nq(,0;e:^J.EX8n"mR_-3;.ZfK3Y#_fsU11&ZuNr!`W(U&Gp5SpAf)6)S6+=mMe=B`oroh(>*ffk_2P/@s_H>0/D%0?_+$[&BS/`S7%]??Aa_NIRCsQl;U*I3B`'`&--[^H@%Y@ks+!Q0I/%eZ/*$>.P3EZ#h&/WX:UJGta^ZPSX$TlGr9s]FG_(UgBlV%BI<#$5/1fAmEEUFauCuD>:7o-K#Y_SQsKbS4S3L!a,!.KnEuf@X<0bD#_#SGP[^H)!0k:VQJr,KVOGuM^EaXBIs_(%CKRY0r=(\r%:$g$0_]&bdNoDo71C9U9Nr!`S'sF*;..6;*!Xu2UQB;mI7O&n(e)s3GaBZ`Y('%aAe8W;]fKfhJ)p[e+T/lSd/[AB.-'(a;/G;Vl%1jsY4?D?c,3!'(UGeDdQha0]i_2Ss3*=`U>VUsj$YqLMCj/W)(H+WN7rOADVf1e%&&4+E/S17SMTT>N>pm%NpkGd,mF?Dn,`j0@C%_lG.tq)EF#:s^m/D>.knhZhUsL-F94HFo7gF#Q&V\'B*Pga7t+#Yl]%$#Z&m3c1#JLr/dERR/h25,h)CM8Yt`=<C'3\=JNo:%Jbf%mn(I#9]b:,@p&gD)CcCu"GS60pG)pdDe6NOAkPs4,EZi8)i/__0?A#SQ``0oFd#e@3M3<`5UWdFWO.TIAS0gV46KH.D++_*^gs;k%oqtptW%lfoD6inR8+\)b6JL3($u9quMD7S07(PWPn^))C12K[/r/&,$=@_NcqL(/6O5$X]d<g=4(&oX=C&^)^D(nt>26;GFmS.e<%+bD#?BuZC%1e<d/a(9+!VfgNh$92]Mb0R)_JB_o:aU18E-*?NuGVZ*g,Z0Qh"4h*UkVfKr8'a;s"`%l&-8(jESosF1HL2h?LS*A>%/VsjC.ZIC[2r]d`n*kldZD$e>[pjJoaFhc:</##)g>196bkOC*?)ZmM"sk>.oKn.,F'l)f*Y`"@\oHuhd1/DM`Vc5L*h"iPLnm<Y%]%</m''9h4'@,,Cf'A=,4:8)r'C(,d>rq[u;]S#ac6C"cC:9"Y?EA5_Na.,h<f\4=_6X)Ufnln3#a;;O5cFA1089U((FNFf23lM6%=[igDoi'n^='khRBCNP4k,urhoFS*aQQ),Y)_^0\^o2752#f7QSB;AWh(I]Z2`^gD-0OH&2u]i],ofY0%G34]]uf!?0WGNF7uP5/%K$3<L+uBVU=QDMc;?2JAbZ%%EO)OkZXdXouNG+%2eH??,+suHH?43)tX(0rf#.!-WgTN'EY\/@h.iAFS(1@,9XuJEV?'eZiihlnG%%5)]c->HT(0!VuV#f2i6q74T?IrDW4BH<U:kj1<hqUksCQIT&:jh6DDCpL_]#oHu_WK[6oMl'J(cM%8LSGMP5q;^Z,'T&@A(9EB9%i\t_J]hJ]86d'FF\gSNV$i7;\]7$cQ?O$Pdq>0ug2a:U)Wt36DV]DN\]4EmnfKBjMfe_C3&k%SJjmM3T&4[[7+6aNU>t2'ja"MY;%o.LT;+h/Zb>@bf"q>]lF*]%+)(+l[4*DsoSW"\:9;>/&tfO+Ab3]Nnel2s`s0'T[HqN)@TC](`nkP7fMo<8h-UrF'-+MrH4#H]_1%EA)f%rdOat;0d5aHBIrc'rub^)a'1W0$c3/>Q6=:DVDKYda=pn27D^bO\^FTk;g.?AkZ3-VA-`6XO'/mbtKLb0fB"/m'4hWlY)F$%H<$^WID%?\.X!U(077Q]:"88];.c[:g,*fte6i<_&C49`JN'DGedtmG]mUnChA]ku]WULW,4CSTO9YEg>H=OVSCWsa&#9c'X[m)1%^%\Yoqe0WAdkTa1E!EEE$8hp2&'f9#a[MgYlj2&8G7fpTlS"bcB>+haY>B_B[;2%UoUgSRI,LO^;74I5B[<JB(i9)`nIpE(-c\bo%G,L"-Lel8j!dR\FARs*1M<!*7p3+=l6?FY4I9AC/N%>SOqt#HQk;TU0pQmJ-^TAFLoo6_#`U(Z>6na#Lkj33C8`H'%#gr)pZKukZ%[X@&F%+/os]I3/Kf8JF^S(I3(ZP*^d^a^jAkB"Q=<Rc#02Z2=bW\K;ID"=eHUd*]mc^!i2L^a,dIO,PD]AtYCrqnA0]M_A#TY&it%0dJr5AEc;@MQ3N[n0@pY]:.A=)nqo4X(%2gP<'$>nnq3Wht=)J@U^N$roRVa6PH]Y\^9JgI5HA?XB3*XQ\<HL8'3FgI<OediOYuQ%!I;dsZ?ET:bOm#!LRAW`^$%4(RoL/``0mZKighM\(](;6CSk:mjL\^r=a^cZYquR&FArQ8R;q![YEg"*B1lLeY,Wa(EO*qjK__fG%>>rTi8bPDY_6P57'hMF>EC)Gm1Q#iVVS[B-MD]+V&j"nbbOh+M;lpUg!hcZ/BH)5*_i^&W\,e"M-Dt_!j@,pP9Gg?!##Y+GZ%`3S%I+@AHH%c]i2IK]uRkeeSF3MLI;M8`6ZLTYJV(2<Uf=kC(QDtZF'/LL/\Q`*LI@p\od9om_>:6%=c+g;SBE">)JUkZL2MEU%5mZEV%/+No?\DDjG,;S:&-Bt=SP-u<r<>\4T<E<=Tel\O7[RfD2hR%^TLf(#0eBm+21<c.uZltW2EK7e,I0CbO3Lshia/86HdS]>B<mOYA%XL:OM^c')YJmE]D=H;D7?pC?l)2E6%<Y'S(@g8<$(R6EHm6+AoE/Qk89d%bF;d0#>hD.5G6J"";;$)6j*V!3X5:tn0YGNu9_Q/h0%0453=1UcoK0,I%m'/Hp=KOb%"Fa"E<YaOKd>P&2W+bj\b\_fp<M'q41b,W@="&k^dW1.$^;_aW/?K9C*VV2u+<?9JMJ6@oV7G`c^%<"_ehh]l..cW%UrndNJriQtGRiiQV_5\-5mS(<e?/L?)]&.m,tJ2*LRoipMtiH$DO%IiR:?cNFn$^G;j&[SEhi['on(Wu=ZTr'Z4%O:X+J)Yt(^D0]ObS"aW7?P@=:#sS1mptaA&rbe'EG,#DQZZNHJ@SW3o1/Bm`4\9Z`lbsnHYcK3]Q":3Wd[u/1R.3DF9BQ'P!D%AB%Mjfm8I$Pkje"V%le5Id2LI`gC0oB9*^T#Zf[u[hc`'?/_'I7[2[Zf':a3q;S'=qEE8qsa:MfeX%.&3(i^Q;#$4k,W=RoXs>DN"G"%5CUlXo&"V9E<)nA(/[7*h=jHcX!<&D#tThmglu%?VnBQSXs8TG'!;F>?#1muCm?0)'M3(?&s2"ANE8IRL:AErEols-FV`M:\iX'S%gNcl8IBHhiVK%IMMS9]pThD`dl.>_R/h:O_H&@mn]D2>g.co]@5dQts(Q[D:j8G=F>FctGI7%WO3qhM,bN9p&`-UGs2`%1.OV-&3%R:Z%pcV+.9'Qf"Tq69s,1E-Q^Ad9,,1W:IoCkfN$&73.<S[s>\6*c#>Q:rW^$_a[4>OJ-_@$#@<NJo,rU<Nbo5S@kT,)LJ884i?`%^Kkk4VNc&8PE>(bJLf<[m"moCe6E]#(B]C=)t7N6jT,sAdj-\M*6li"nX&u@+l:,#QE/6hKT-,q2GN?9gQ%J)VPKOi!G-u672@+u%Jt6Xl=Pubm7Br!D%LCVD%H"D"##r4(Db9*OS6-D([<d[BRm[>T%7nXRNVRY/cMrqbGB^*.1_;IXaZ+JOVlWcIX?Ba.EhbIVVQ*`b%)#+;%EA,OZe?+80kiPZE?j/']=K9)-pk5.qe,'F_JqWE5ad.Q!Z!9EZ_d=a(<9;V1o7r08A9?,(aq%]hAuj'lQSjN_YopOg(E)gi%9djY[!b(#VFZO$.T-4YuZS-JFjMdQUs+269P'E]@2*M=7pT-!H:'qITJ[6rU7--@%gEPIT51l3N\lkg2J$:KL"sq$^n\o-tcT!iT%V:SE=3UR4_Ak=&$-1F$PWmnICJCN_(LkSDH6$](hkWkA)f7rQ:4g!^A1G.(fFds^'YL<*<F^B!ca(8N\lskO;V<?R=\/U''F<saY%P.nD.Y&,cHFVa>5GBNYl>h>QU`k`Dfdk7Kf\Vh2Eioi]pYV7UTE2`f2K2=JQ&Bnp8IG?;*/(QF6Cb6H6Cg5@H6oK'F@m&/1.jVoE%R:9\R"(Xi0,D@,So8_*PW9eJ$We"Q?[cg:2qXi-O,NU^uj=0dW,S:te>$09J)X;.+dHWpblV>WN=SG3,pm"A_Z_UnO-p?ZUHobSr%+m><6qs[:iJ[jC:/=V/=\3Bb8\#!^Sjna72UZl0i86`TA<p.R<Un+*kr>9,/\\\o:i2LS8"?.q8TerhPd;/=1U1>1F7kEGVp-2,$%:$Z+r4iTimFpU9Bdt=(E>tQ5#jBt=L=)EL:m`KH0S$Z)dS8o&jhh,X$aeUcNgR68B)^cTC$6`[8bq72jPnWNtR'.f)%elKZU5rK%%N_nIE#b%9h#o;:a_BQ@X#;fGGr4^e*ob-W##g0el*G@q44kOQAh(TF&Gkm*TU6%@46lJ5/;pD0Y,9;P846L_r0i$n4h=Im;m`1d;%F'QCh-O@$_34jNU:<AQ0,Y65fa):>MhPgB%.#lc)p,<uZX>h5CBJ!gLFXU1[/H9=Sg;%Y@QiH'`'34"FoJs5)msHKUrJPo,Xh&-<%5hm?\F:u-h7i$>E5?G?QG.?4<*(IX"7[+0"^e-5Sij-l#fA:+97hrf9%W0V+Xet2J8G(CHK1@BIW-)f+&Z.:P2,b8\a9Z+1.r)@h%Me\M$+'/jSrQS;).o^V&olVXnCTZ[GXkU;g&^Cm%>,8#h9Rea^Sa"/[PLM;,.=D8t^FMBCeNQSI.:]hq\u#ZdX"N/8b8jL0riW8B%8:L/l\_VoBm&='am9r<rGi[]92SMsZ5f+=9++@/`5uUSUJ3\GY?i$1#jf=\T5>"?SCD.`HeGf9%fm&C(][u:A?4p>P9#Oeq9RAqq%>VHo1aMfou&SJ(k&mhCQI4F&T[isASXr+YWn*WBc`Ho7H@?35Co#Hss6=0MP0;"V0>"dD8*[:?QhOSNhjSA.a%O=SG0"TK/oi"VM%N:QYMi&41rJ39C%n4Hf>dl`o^VJJNa2;q3INK7)X'P&khp*4)9pO+Ll]sX(HQ#A^ikdLj?`"B8DO,2JbM5A+#jfq04.M!P3`,ucb%4Io6==A<LDSR^."`=BML'CTLp`aB(m:oOuuJ\5P,403eW0:5CJe]>6Y]AZ:XNY-'Gd/r8t,('PZc"nJY]p13kfX=L3]-Z%lK;oVO%A>YeGA.s)WlTX-5CIthh`eaP5PEZ9MpJK`DE<-[\Y!4^C>,e)elRl4uX_cBB6>@SmnW9c#).@E7;^aTF(!9.SMa`tt-(ECb#=</O%b?^+l/o0U@p_S^SrqV&-B:$b**"rqoR7pCjTZTO9`[Fm3_Sa^d^`2lM"5P:^"DP($I:984[(K<e:GmKTa[RRR<D8V)1D#Wdm@*6Q%qHmVAPZVG%Z#rac55pIKM$G`Pm`W^f@^lJu8h`*7j'Adq1=c'=Xh>BDBd`ahc+Xmb2oeOjj,eINJ6%9a9T[QTU&./gbsE$=*iH?^%#>srNgV<Qq(hG=a@!s[r<sL0)qp)!ISM6jk</5WCA\iMm!)'VpXt%)(Soj2A/`!LC6i"P5i[#C=F"Tu',QPqM1!5!](/b,V0^cIT%roHr,ls#i*XRU5?k6!OD=GqPN8E+bj&e3rc<c]3AjTn2f;^IClX2O8'c;-8aP\KCjjdInoACiPA+Yu!"1\\J<bMOrd5K@(sH$tc/%L$9L&;K(]1>E.5V.fc:b"i5sJa%0[#r:[9NCB[YM*hYij&qu^PgPL<E-mQR,\;V$&aN*ho6R[(qG\?`*L"$D`hMR>\8iJlCWop@c%,O!5"MtO=^J\!1Y?RM[5OS7&gJ[O/dC`2Ma78IUaO]DgXl?K6`NH6Hc'/"Na4g(!c=Y0RO`;#k>>Nf!dgg98W)rD8a@K[>^*?>H.%/+LEC;C*`iDmrbNCNI?@>!>',KgEB+c3G8faC(>GLM(HR\dhPgQGO8\?Q&eHgJ3e/iq')0[@j(d:OfZo-;s"0@`lI7"uFjEHZ=<n%etn;XPFs@cg8>C+RDZH!d2?bp_f"ZK12uq_,KY+6$h'm7`EsTB-+/JZ.f;-8BNW5+>$H6m=aF8V#;hhGl&"uE&T2sWa!CZ.q.\A*%n3J@*c=?>=i$;RdN(<lgYUgOHNBjDKG.Vm6^42<F;SMNT*GI?N@It7hRWEfVK#B-gSFn,/[!/SOQ*.VDFbOM*[S5.$CG2CKi*>TW%f1\*+,#ros3^fUNf_W!W6jtRp1J8;>,+u.a[M9H&5FgSDhNoIN5D-`sDr;NYX^ME*^e%]jcR1d_[Nnjl,YT9n'3ZPCH(sZLWZN`I%ip>&U")Bn\\La;)MF7&V,[_i-Z`oW"lWJN"c!^k7qJiaiRC8.]l)R\oYCLe)2lZ-JM7Fc>b8C-&\.C^J:TjeWEod+-r%Wp9G<+AG%3o_r^OL\JtH.@LUIi^Pf9]5YuT,P]91R*@f/lYj,a(bu4Zd/?I:sbkH.an<I[9F5RfNk;4bebng,6LPB6s/iM30Q[h&EC.;O=Vc<%HYuo&7Usj`LotITI8o?E0V$tcIDt_J!;^bZJKiXdj:lmRZN1eX!4$GR!a!M_prd=tigYH;95;E_+OF56DoUjH%ZNg?I_n79;*F*c%$r<,/C+PUDOa1baq/&,^O@&<YFR7&2Mm*]]&en!qrfAutk>BNg^c8GPMgQ6"rLn@5g+qlTFEg%2ifm`TCl'Y=&#2&K8NOP+I8\T=%j>M1l5'c:pM_q;L>mSI#8<u7q>I<e+STpgs$r?A1)<`PtL`Ni;c)Ke;If>%bVDuEA\!,8T%S3SU%Ti1Ur^)k7'GYuDD-];_6jI!=%rX5K-JeLcn.cC-G&V%Ksf]3P--UVl/a1K$g"#e2XV6aWi`5$'AR0qG<MR/)T=FP:-V\!HZ7BA2ULo%&PVs+ag]r6_Q=6&;Bc:Y14%RMC,r;OdAVD(;KD0V,mq`fjd[`7`0\S7_oCWtr'X>k?fJer<3gPh)/.+D;)D?YF#>54*XKGidjWhJSsfA.XAFWcb*Jd4d6h8_G.o%HSj"S#Z53Ap2I\UMeR+9V&sBUffDiA$H\?S/b.4D!>e;pfr?5KaW(IO_&hjtc)?r9QI[@UUr'_"]WBX*-&g3jl$0$*<miYea?MAI%7/*o[=20!o6O,5c;L'uAefr`U[N_Lf!_TMQnZWPqWZG'qi@Gm)8b)O[H2aumeDK@m-WuZ)U\=P`1QR>so(\7q93p!J;6*5H(.[Rc%k-B9:ZqYP1P$M\SQC(:G)emF1RW\A?>1$$:^:S1q+WP>V;JMo2%i@gO<OA]_(jSd@EI>`aie%Pf?n3o^pM=>)a#)k5DYh_U<A>E-%^Zfpr#-NaLS4"t$PFq=&Pi9?V+_]!LbP?:`_r$4@0:"!@<5h&I2\ej""@f%tP2cpjjPp&SO9l-K<]^f1U6(%Tk\hg:/Y':hi,>'L%6</ObS%0YuYS6C5^2:.`d-qTKLYo7/aBdRT@HZG5*-h$'p/+u)XUJMn`nc(9;\e\3fT4e/!9fmUp`XSf\9>-IhddHg(HFenXi\8[%8Tm<9"p[d2e#;<<`BQZS4s#hC@UZ<#=e<]57$G+Ga"NdBAG=L^^sfBc-*T4dEcZq<_5hMEB$dR9W=^%FrCOW;J-.@W5)oDY3u=K`%SVkoFHGD7CPoK+a`=+1ok8/YB(@+5?i4)V@9\%HI@J<&TgAI>`l*QYi!NVcsCM\GUCn\H'BF_HJ&VC_PYYFD#&iMJH4cC@OG>+lu%115eZ^)BbOH&n&<jZ5`1>r^W^GA>m1@6\WW_ik4r:s[jVfKEUN-1tE+e_DB:E*SYOpBb\,eT<iGdIVdNQE'1:(FQWF=5)_gZ6lVM%'HIXt9p"l^'K-;<5BoYkD[o7AVCN?]:B`.LrSFdHb:d]&d5RoVm1o?/r88YerOA>SCTE_#o$W;p)Q*j]-Xkki<kXAo&M%i#7m2S;%Sm@Nn(BUmK7/^XZMXjpW5'6U=7l(4.XJ#JrO)EMO*8[^fKg:MD=dS2)f&;A[A(U?,1K/@JX#(?@U1&A'jdgOCH09Vpo&Fm;Y'joQ%16aKPRNH6WD(nEh"09EU"Y+?CD.oIG>1R'.2XGk_I#\-d<0e?^]Tlg[:5i;?P=<fBf5#h-pJ4k]6jO$TJK(/;+!7,dm)WJ<<C\?K%AGZL8BDV)A3TfKXYB^*<#G\.$Y$anf5;ih_fbJ>JMut8K[***3,f[&?,&tZ*Ga$LSRr;pWO-,J!M.'o>O#A"p+2;)c$?ub9/sJur%q)h&fjtk^[3T8KrX)q(gSTOdHMdV\LDg]/9p>^<OY"9P>)N*@5L3f$k^?We*R6tL0.KDVp*A$uC&.BS5\.gdLDh/WN\hEhW28p=2%Os?V%PM*F-I=XCK&8PtY)'TZ+CEs345Ze:N394fTa+K/S6"lO(0uA0D#Ua,+j2qT5Z>YKr\=F%(da`jRdS.$FE0?=!3,Y&rc/%tr%!.F'n,<,n`88oi6mT-l!nneGR[F9Ho<9->h7VtXR](M1gRUlhPr!lUnq:iP15Xj3k.T47>UaM5fB<5nDgEddN-m3U/ale)Y4@Ytc%m`,48SINmX)R@og"*(@.f&As-EFbVM)&tHnYE<d'kAV/*:ugp21cHTF'j,6\[SmXLMYHYi[je3!K)tf-m;I3KrpY3A4nTlHe".)1%%S(k)R/!5UP)pR9f#](a],UD&Ft,=;pi0`8E2jte]eG74,(]Ji-TsA>pjH$!=)eVAN`CG_qP/;EJMpt>,c/Sk6+uY*F5hg4fmcl_%!8JdlEe2*TbmC<Xe+%D'Kr"h4C7UoZ-6Y%nDKgR,SDd+am[;PY]=HCi"F2rka6d,V)8R=/Uh378i6;Q2+YAL:@l1S3UgSS&18%L%%A`ir<B"Q&S7L76Ykq$6n1SkQ7;"b!8TbQ(Ws.X(Xgkeo(--.L=P"8%,!q\tPgu\;;]*HHACYK]nA.hN<?V'@"f"R1?EB=i$TfW]b%@ZjA]f#!]22d*V7dgF5CPUSq&B"DXpS-^=5a0[hJc3&rkcGUO$HG"5b'Q?j;b;\Jd)#cGl;go\`<5h)NoPOr(.;k0mM+89'EgCd6%p6Sg"b-:&e>7\/fomq,&^Q/,03tq=R#_;lN!d6`kDlXPgMV%R2q^>4<''3ef\KlbVdV4:,XCf+sSANi)LXa-J_eoFm;8\hE]=#iJ%D-(XE<Vm&lCXiTNMBsicOPp/kG08ob&,@"q;RV)X/CS>BjW$Vt57IC.1D,t_h641emq8LV=bWup&mQV+.uBhYJQ(rSY;e_KU:$<d%G+%Tq-e]MnpYtPrN9(_d3I8JXiGdq``pM$\W#c"An*kehI[\`ZD7,f]m^72oS`]($e$^%gb,DGHe7+dAe$pL/Zb]dR7p/JC:iM<)%)'c4.#9--I;Y]TiVrRTk;ms6"jJ=go+D.TI>AH'FE_BMeE54._C5Mop[aD9s7q="&&nhJ[U!4ZaOf6QBR`^VKRoKh]-(g=egg["'%g.&(;#HM\`8,]re$I'-t4gA9`BfuV9Yp(t_(fGqdo$1nrejA/^\P@`a#SMIIgSVnPWP?KF!IltmJUFA#'qAiED"RbG8@I%qS8%kU%Gc]DHQ7/SlDl];3)++uH)3sdJ-TJ:?f!Q1:oPqg1gNi;dCf)5=8-XtD:&*"7o:W7$1?PYHgNokd*X`8bad#'n"tMijkD#q38]Go.%B\8"B"/(5ldm?V^%h^RcSNf5r/9Q"pDiJIAW79[DFJkQX\T:]0P#6g!>uJ.pm9b')Ib[\O-3uT/Ptuk#(K2gE[$-YulG[U^Hq\@h%V':_KE,"`nhD$Z`&M%D_KtFa=b\X)(*`(Ii*Aohj/qk:d1[@G9/sDG4J-Xh&:+c1FQPFsT/(NTtCO()))[?-*SV=bZ-1l?(O5$)l%&djl$9s6J$\hm-nTRKGfX7%&FDDn-!rL'_n)4\*_/rc8OBjLAmmE!<AFZ!.eD2fE)1D!qo]ZGsR4K`cEnj<J?k"7rVX0,:0:;]6n%cC'W>o0a($&m1&fRS4Qg#<QcEL]+`R%%l%hhp;O6aJBeu2bd$I<"=1!W.[)=!iZfk!1S7*g;VIAV2[0/7:MoGWmKVHH5Q'IQSnlk%c=+@T[G"%%lGHHd^D][/W`NY=99$krPq:F/:G;tt)/@Y6p@9U(d/?#:^C9pX3t]'nW</@H].f^(GC[;D`0H@SOVZWHZ_\n^cCNps%(inX-Q]TQ#2q8JN:>>'_I42pj&o>sm^O:h(m"<Os:u;WQ:j@#P.ElI_k.b>VeLm_8[0`u=D"m08MGgd1/WtJF_iPs!dr7bRc]u<<%5Fh^o7JnC9)DsPp;kB-HmQ4Dqg<>N&(?5ZW6(LMXVIqkg?X%Shi4.Wu978n]hpl'drR;8N7nFi,EEl1&1q0*cC+PX8k0\[9AarU]%n6D-\kNGu46',n/Fjdnu3pOcQ>^28q^""UC%@9C.>D#W+_:Bd`k%M1<2188laT`-6jg^^-h'QW*@4aeD;Z4G/m,^Y50PpoP5BA$'%b+_J0qNomukVpL]0N!sS)QhO`rEsJ<;ucL4G\*$``[7OF^'sgW3t\'WOlnY\(`ee`2mB?&en&AIX!skG&'&/_O*kuggRVd#4*Y&;%RP=]VEO$?WkF.h19"-L/rUEGdLoa/S#`Cg0(mc.N0uNgq3GTPY[%8p`ksWR2<\aI=Zt!;^gY_uem)SL(3$m"ld_[q2\MU3PjBM2G%1ZSb`Fa2Vr_Gi++:Hs2sc5A5-1n%l]Q#Mk([?^PidAt*98iL^W8Y4TG.G<`ZgVWqu*J@@u241+DBZ\o`Hg@1P(K3aTdWbg7IBrV4%:ECh/^CL*[3u&jtr>.1<6hBWRGB$Tc9&sCDCq;iPWKGC[9Roo$BD2qmJYe9i%Lk]Jl=2c*apFkdZ^#"K3._1d>g7`LAL_()s8Bju%J9Mj]jX[FI56$uuDt)e<U+Mum(hnhQ1TF^4B-?\K,8A+]j:`1<".4hl6mN(<Q$UY%JM)8oJ0G0?1OsF?F/YgqT^h$:rg1ajQon$q%8ku"(b9Hi0b2+b6I%"]ppCSEu7!M!(ST!b<IK2o?aA>4IhcLO[.:@$U_,>`0Ur3aTDoY-2[jR2_%*]UdlCs^B3fAG=UK5,4;F(3Y%'iMut?0K*C%/UF-rlJ^-brs"WR30)0JNoAs-mO,uNb[Q4G2LW(J[/V;h6jI8R8<[qL8;`Daj^$&D,Z&AT-rn7]n!jfI<m^"$)CW7%;q_7!/d4kQC/17A[.35+bb]1QXaor>L]i7Ie<t]_XU>JjJ5V?+FNpp?f-/-)f6d#LAbTX8*EWgj2>u2>k&*L`BDp@)U5.%/4&F!4%[8L)?iSF4>6L^h#c1b"_S\m\QPlB:dG2MRTq@u&/AW&hEp+6"8=+>S=::tiTb0;&7bRHlQk4FTW;:0g5`EDT3cD.uRm;BQR`Ui2B%-fIj&_s@h`I"<7Rb4gDhm3!%?!AdE2d*o=;?I8/!J`%GX,Z++E?N;&XbgXn1(Gtc!?O+,1Y89@iVsVg\"T$d<qdWC)h(Oh^Z2JN5%'6W?Cp8TlUVY>JXh:P]:-&sC4O=Ogl@A$3QH#<OZ5m`JE^Hu\>pIM=_c9MPh2_ehDkf<:E5_1Ar;*#oln.dd+1@5J)31/2P^cbdD%_t<XdY25U"W9bWeZm35iGfl&K^\og6P4$u+ef3%`@@B;Cq[>'BIU+P["2,7^""qBbo&'Y,NW(sLIIUr4+&WRC38iE<T4=A*H[(Fq%#(s+h.:+"D1;]98Xd&@!g'j0lZE<e]SAMJ'c1%/"l%T(oiB1[A3U+BJpQLJ]6.%gi"/HVenJuCKfI&'d]4:8&rE\LLR8BRA!@p6a%)pZ3*fRUc6!?]feg=:_3c.rhZ"f6r]b6,$E9UZQ3)pku/_at448HtaDU`Mi3.?A9E3l"'fRfh<@ReRt7M_FcHi07>D_T,iI"_LCR%GL8Em#g<]=Is?1tdYWS7<6Qi[$c^jg)ZjtCQEl2qdZE(:Q$aaleA40W\Rp>I(cGdHG/aN$Y\V5hl(@_db-nE6JV(NcZNbuGZa=qj%^@*.)mJ_8NgfV_"n-GN1DrIBQYqNR5V+K=)$[qeU*g%tG'k2-)_>@nX#oRh"\#rY]%Hr<Tq#)_mM]-S>QlZR3%<bF5^+fmOJ.\n`%P03qOSnBF^Q53$u@Mjqn.3`.B4]/OZ])q?$Tu,MEbO++/ou<"7FdU>8%.OYO=p5]diA0:qB6/G=Ru-o$02,S1Ek2Il+1(uq8VXfL%qiWk?lgN-:S!jM+qIO\3Wd7jJVe!sT)5F'upC#Ca["@/S+0@_jR'ec,W@8^G\mo?-cFA+)lOc3;6Z1B06AR3%M=7QP_\B)L"E:tq%3/b1N;1N$nE^t\pH9T76X$b]#GnFq:-$=fogsf]><;?O"&.K=fP)`kQqV`m=<Qq9Y@+%*ILJQlpM.<eib(2;'3nUb+e[Ekmpg$24%F"MT=$\;$`aGM!)_&;LiM.f9QC0oFua=#gEl^s8(mM!$_E1[892S\[Ymk;5bae@?4``nZMH'@Do`DB#g=8\%'g!8&Bk6bHrB`n8*%ITP&,*EBDr/fMq;FG$H]'ZS\_!]%/HhAaE*asWA0DXT5J'Zf"bX_u\iTP9COej;9?]%sF4CkOlR++WiO]G7gT]f>e.WP5^!%Vbi4%Z]`+M\HJ[tO[%?_FF]X0$9o6::XPWkY4m+WHldGGnaN_G"MeIjm\2E=q-ZKt%J^>6KU@F:G4taI)qraTcBQV['@<Se%].h&WIHPD%EOI`W>;T^'$ac\a7:<JNGtf7j]HR(-&n)&&?CIMe18#e'g$O?4Q-1<3`;njZ8Pme2W!(-@;74N5TZS`fNe-M"3l\\HR:1gXZD;Ap%gi0TDfU',l^`?bC<.KY+C6fh8#fAIhoGNk7GBV<fg6N^=8oB\SOctr=@bEssA""_KZR=K;'d=e<bA^p`VqjEM%)kpC8'*(c\p`bI%fb_h4fJ>[*D"ILP\e&1)Vd'W*1gP@!\'IBncp`o$]D5hB<?\lXUWk&$.\\KkYR:_seE2WN,R]l_]<&]ZpN)@cqs_hqOe,Y!bT3#\%MI;@B%-V8//T69p*Il+)p>A`%b'-k95^2St"A/SOL$r4SB>=N7/-547@#(/`aRXX:W#<CHHh=pm8+^RD&X1+EEkWOF8;;5b^^\cP%@er^AnRI8,p^+(ceKf&P&Rs0G[Ihn/_U\tJ<[=lPB6e(=oFKW/VMfW1dlKt(M=I=Rmc:/aMf.f5*3@2)Eg-8>+M[mM:6%4AX#K'A%PE)5_=Ag0^:H65PUW^d^glfUNqn!hP&h*9Upl)/pbZ3!6gqVMkcDb3d[.#8T\;)_pW(+jq\<<#T'pZ>P`@==5;Y-tR#A$N:A_mJ`%KuF$ZSVQX\5$bl.\uC]_B8*HWoFY&iB2EisrtmV-h5DQh'Oi]a/blbAbJs`[+t>TVBQ_(RT.G8Gkktn_3$T6GZuE.Tom)+(fqTso%`#BI,:-1uG>o93AZZ+`Wq_?'d08+E6,qq<Hi2Iqcd;:1r!"Wfq[e,/nGE@hn3gJ>ciR:.>4DJ1:&&HLXrlBjRg(/n/^"sL@BCf9E%DGkf!D5Z,P8G<4sB6H"$`3im%a,K:K^eTB$ObqFS+;gZWWLcrkHG6p$_Q<$LHNaq+KY`lHet`RpaCQ888V+"29`p`&;7sa%1/8eV%$S#(0jOa2h!8LJb27_rd6\m^:d&$KsO>4U<*;KT6#@5lRJ;9DA/-a?@L9hau6\kpbH7.I:R'?]X8fjosh04cPcT[kdMWC)@D(Go.%h0q>NIqXXR*oA=.*MO.g?$h&>pHj)>8Z1"Nar$kmdJPI94h=m!g5a5o&^YaTWi07qRJO2[g8j)t;I:>ZK7+a[&Nc^q6RJ++L25]6%V2=1Ko<qV/`Y)aC)9ZcO->ntt<=9YC%W7Na`&,eO\k&9@AQhSn'qZ96FZI^lGJX:4C=EgV:7OYLD45OJQY'Hccn+sbNd?XMTJMac%D%f77]29su`#@lDcRR(aoRiuW[:J>b;cNOC"J9+jP4*Qkk4F$,m[lD;e2eYGCW#'X_J[gfP21n\f_(mXWOND8h,upq\q6*aWiZ4E%p>,;u;NL\&@1C$jd*=T-X^-U5WX@%pC;*uD`HFL-;b23]-8oRATh5JTDk8R([\*8!k&I=cH7Ho'TZCY9Tp$7a2SV?LS$!`]7(Z_p%?5J7_"Hd,8*4i'=3K"rG%dK3AI;nS$f3,^PYn-D*`t(c<'+Et?7h,u>OQrIYGF5?@8Mte>S71kkI+HJPTRbki:nR:Y(>0sR.X+[.%g-B`K%jc\bBF,2ja[dF>Mj77uZo-5OaM0dmI3``-fb+&i`u):/<\>V6.O$D;2=c0t<\pQ2SZUnZIcS.OBhf78_OG<>2D<MI$AFA;%N_j_]FuAIn'dR0g'Usgq\o>R\G&9#K:1EZDZQ72J,E,lXcS,0"qnA0]a:;lBKE1i$B0>KUcc&,+FB`JT3sOCmqdWEKVO09sDeY3I%s.1h,SW:u9_Vr_%dRH4#?$PB?V=giDJGAg]o3>]>4eqJSS0b@]\o?3X2`rpgikcEC+Cr,9]F".ff]%JX1@E3MC`)IAIZ<<-4V5e`%QKDMfGJ!Y>$8_Cg-BD'F8sCtuODLg:,@OM^EH-PP6`e+GhM[#hF##4pH7?S#>A?h58DfbL5\5_)V<Q@J%k**#_TBP64;(e$+V!Dr%-WV]no3])+\mEaM@6\WWj0r8c/\7tc38^f$\gb&)FH35nrlHbGedTPIPBir6(rnuW9[+V^7t,Ecjg-N#[Va700:-`OD[SQlO0!Xi%D694m[N[5V(gBd!NKg)9m)H8!/t(k5_\%%>c'TSs'B/b$U:]OG=onVLdpl"WR#0IO>b#saO8:#!..UZTVZB@76Rc?oV9FjaH.\pY%)45SRYQt'Q:H@%JE)unfPUgDG#-B'ISaEo^:*;UFY9q?8`50[W?/!7I18te5^>07pEB=ni$m&@e4J7DB%9M#G-c-Iu`Z49fGK2\>%'pn=NR<Ip5]Q/3%$q:-99"1B<'F!,.'A^p,<[*aZeR5=3"T-a2duWfR6[Z:t`*7J<48Vbi%$bn5\+b"[f%KnNn]bRuZsq"@0gBPg%ibHR]"2C&Wg1BWmPlN67i&0=Z&S3st*b2_cY-*sr8RS'I:_^'lYf`D?b=-\4`oAS]Q>:*R8%BQ%\sR?o:P'!Z]c'GQY67Kj:m[9f%\Z^27eV_*^7@a1`g\f\=.LR.em7o6tE*jNZ8JKrgcm";"jAp:JTI<,3a>$pd+JneLo=3<I$^0;/NPd-]qrClS1u")GGAt6b(rLTi%Id5H:]iK:2?3teQ$DCH,]!)_10JoOY3uW0`>A<5?(Hifs59jn#GP76H]!;qi#)f$OL*KWW5_#`lSK)/XbMsWi6fL;4$"@hEN'.gs%d;t6=3W.u7K7;TNL!N"\Dl49(d2D^kl`'U5g=F4H8[X[,aN>bUW8Akl^47G'G@@Xa\$;7a]'HH/`j'cHh3Xgu1MlBYr:WrTN,Obr%"^Qs\eipQ]ofge_mDTM=Yh%nhG7g(+ODokO'?uU:C!_pqWOR>8cn,_h>6!r)*+]Be;lEZI^Mo;d(Lt_+T/SRPEtUGA0#&)-+^;@e%0,5a81hs!;:bGt1GtjG?$5X?t6g)$[`K`NBF<O+C:3F-,U(F/`<h;[c.AtJePX"nRglL4Cn4eJpG4SE3@3D>g[kkDTI1,3k:DrKh%+afVoQ-`ZC]h[?--QF6pFgiAV`U]3i1.aN,p*#gM#ME!&TPCakE5g:fB*;#jHmn1jZIH=q=/aE\E/6e]95,W3NMPH=a8<B9"O@Nl%%`S0]5t0,r>>$qtQKg;mD7Uje(Fg(]kZhV9!PHKZhjqJUqI@'-a-js+]$;(XPI=dPd\QPZ/bQ5"!VM/08.gq-ak#!n<k;hpoXUPf%AGmUi=[Eg4q\f.dktU77nKlsicq!M8)K'nX[qpNF,0NC?XmU\O/Fb0^0k'UP-fWd[,O?mZArXIfh,";"I6"oSYPgNBO5'EuZhE,Q%'_E0$-m;tqX$M;f9H.0!UTo[oJlNtK@i5s%MLha>4VQL+FoWN5/(N@4>ZF4'$R8k'Pqo.JI8Fb\l-f#mINA"S_oa6FATDVWbLZFk%9QhRtNC`]7RkM;B.Qmsb;IF<7Y+tU"U/q3!!AH.=*lU4FDGFX/c*ti51\PQ(6jFibI/XOc-%XtOFedjp$4QnBdM5m*)dFd>6dXPP%<;CY]/%1ao@k?'g<Pr"XG[<f+XG:Zr&TC!Cjj$;N\re'I7!Gk<DSR%/!8'p#Bm^OWb$ij778-;Z_cGVAZkL6]!D7#TAttWeo7IDe%)`,"C*"8;thJU"p2NbWs)a4[A5?PcmS_uLS!,Y`LNrY(d?RM<%C*/9nrj3RP9ABX94:#rXVRCh:aqq+Y[\]6JTC]>X^F8a2&CPTQ%2.A/05EA"%.`r_<(U+YE\S"q=r(['3Jq<:?9dH1d^7\!:M7O:A]HbO_`7sKEDG-&:<j146r._M+,#cT>ZE`ADhp^CXQ$Pk(%p'j@%`K7;6!pNH40"e)iYnQ^^)27l<d4ffC@ZjpH9I"lb)jPrBhVB?8$1F)5+FNbl?%[pAiRpil&U^.&Tjor69C^%uQWV%u$SH)9s.5)%%XR'rZW%k&c_<Atjpf)g6g(W#Q</.^e0;XM@K[V;^0OEZU9PJp#Vn^[m5o,pVNs@spLu*l<--/nGXZ1t[@K#*;WF,\nD[DmS!gE>;%U,FOnN@<KNI#V[4>m\#-Zf0=.r;!o,7k`\ih5N*>raHN/-iEu*gmo,eUV[1k1Sr/iq:YRr=u3j%4M_oco)e(^i.haa!`2I9NUUKN%_>pt:b^LFI6?N[a5%*fTp^L-$#Lp29ZsSHL8t\3D$W>l#,c8MGb7!C[61X`52b*+Bnf1`KM"U@,kPg#.O5&4'2>6js^n5#:ZS1,Q%A-1i/qf6]SHo^%8h>\TF1-:!=LOUdd00men_AY=mK&2CB9UJ"-6GTqsqHo79G?gb=Hm(oPiX[dtqoREXT!U.`c-I_r-dX,g&LP#A%_0hm;gkQfqEO>/E;ptU(l1p*4a;$b*:FiRs"0(`ajo;jH.;rD=SJ9iui1&gDQhrZ=?f-G7nLD#H:q7H"0rqhR\?ii@5gUT*2unGR%\sAbiZCOll:%*Z28ZGdWX_["n9!0@8V%=%.#mm\0Pb?Y\f4W1B"s5`%1=oqn'gCS;KKA,C<(hk-J7e%P@QFTKM*[IK94],R\^B2(%LZAkDi`'Y8XoAUKm4,)EKj)/rFJN4Uq??(q+SSd25s9pLR@?=&/E1-r<S_cH6!>)1JE^HFqmdQsqp\mV_LB[c0JJj^K<FKuXU?p>%gaCCA'A2]11<#Li#7ro/2pQn3O?K.5*lNj.7qNoiQP8`6B7aEV(OK?EdiV'lLZ-ll5U3d<0MimeHP.^@>b%FZ[CN<]cdj<k"*c%c%3u]#U&)a/[QsB#+lahn$85-[!9m?CM'9);D7e7Khr$[2'G_uY#B_:K?8[*?D+(W+]AU#gjADI6ts,_A!?%Ig'Q:moGWFk!/0hWe-%WDNA%G;)YUQ.G68!3VW26*)E@2rSi-17_;#g&cRWS;/9,4%Is4Na[,iQTsW-9m%kW^L?p2A/SH)8TIAI3oHrcOX,h6X<[X:S1cB2%Ga6lA?tk^([hstle+DA(2CRhN#<FCA@UXu'F9p15,@h]J;EBuZV*#<ilYco-U<WaS!/0H:$gk<<&nhl5&2OWJG$idAMYD*\&i&<r%i80t`A@62G(d#>UZ(I)KW3HMSkV-]#dKSPfVU3bWJ7d9Hh^OGkeLEl/+L=O9-P#I_r&-AQG\pi<<1X;R34bl;XU%To^,I'sBT7)d%^(Ym"F]LEo&*$3O/=GKgD$iNO!^asO%c=](&H$iN$^BPAo@hkt7+ma?P/O/3fNIYIE0QA78Sj(*T:L!2\cQiq=.b3P!cW(hLj%;d%l&6?c(_mK*\tROKJ1d/N.ZYE1G$>4b",'EPRcfRfrP*IAC;WB9'W_6mID)jE_$ciFqh2_G3t&KSKBf(TUd\H1\Lp4uI!PL:j\6`U%-/IX1T$!p"bMNBDZLQc^.T^];!VFp%a]U[j!:g_G'AF]Z=Fr-:Ka%ll=XMs)A:1t*7@3[\;QDLGB7]I=Bn\KH[5e?#GMD"n4_Ip0%(k"Q!l38I-:)gt_C'l=<B'PR.5;?.T>obgCiN-9\3/37Z_-Br)pV,P1&/NcFlL,dER<]-6Yu0J@N6pOCFd2)7*DB#C5JpmC,W'R!%?3jgLj]oEQ3Zrd4;p75t(m@H,Qlg`S;d4i($oMd-m$'\I49rZ$NAf"1l'%BtoM#JhScc6o]^kui)s=Jm%IOOoki?e1?3":XV&F?P%8so`*m%#L.0L=6n?EAG%n=EYnm<Ns]Tj=1HVR?AJdP.0jj$+8,%<Af8IP('%hJC`%JhpNE"uJ<E6B<k'Y*ZW:aiZ?GZ(1h:$J8i,%_AEJ6$CFe[i-OAX_H4L4`mf_kq7+*dif,\_QNLW)\eW;&:3p$L1!'FMBK_\VA`j9!e&kN)r6i;?;AT/',uY2LNm3sgh71nC[0:QF%<%l5D[W;k;g_jRXmX_%B4`YZSAr(u!,M`u5f:_WFct8^SaAn/KN7`@&5@Ar`3R0ac%0l90Np5]$9c',(;m2LG:[aE2aD_+-]6g&Q%&SMGtoBp3n*:mDIF_T;ooA#t(YeX,KOXRm7csaJb(*3t<0OV%B/I'@?D[g'dFVsE8]%'1XE)=r%ST%L%8bB"O2I=lobXO%CkA`sP%U0ruq"NC!p$.ELu&Y$eKQJn7fPMEUT!J#RBV\8Plg.&.U&#Y^U&KTi!&!&o/j8[trQY*a4\)2O;K'cK0PA>\$c8bq42F3l3>+D3k%"*``(roJY0;SJE7s6'F]17_Gucdu43rNDPmTFD]eZc@=G_[Dn_iZ4GB+R]YaTbd4lbV1&ECPZl,F0s=,<^uXEl#["jd3d"l^#6R&%3Z?X_[R$j/*-n'OrWK_QG#l't<CEcNe]<a<Vc%]H?n<T'kX+_bN1H01:E+Yqq/)q5'rsqeb@o^EX@F'BSK?8Ca<hu9DE7!;r6#m8%4#jZl@*Nr2'=a+LL*.jl]:EZB1!b9R*IKoP/\ma5<8K\9\9FBOdBsfWa\fPJd?AEUnBn(DK1W+B3?j-c8O.HREe6Xu.GpC(ge((Z%'OAiD#?!<lYJ=0X[fXZCQD93%n;g3b]EG*C7R+'k\LSf:gr5Cba%*Ch-sai0ZT.@I"2GO'ah<q.rl4kbSTJVE"H)a0+EEVQ7B-QG%0aft0kt>b"\f9R5<M5/44Bjc,:>ZR'9Q;27L6!Qp<E/J*<jle[b+/8<,rZa-HLNNghN4iAN(gV(@kG$DCb$0M9Ra4(#\TnP[4!IG%$KP7JK16HQNG$dbAJO[#83%G/-@)V!$Qcp!fp$UHXMA'GS]Iq<;l7&5R2P1ue<`RoF98_`!4Hd-4YBAr@?>(7+IbE+bDRTWU+1eW%6+lhJhD6@>SNL.HU_1RQ4?DAlIkc7Fmk&d<A$KY3=g3-PogBu,ij$`H05M=mX(iEnqEm*3)Q5\.Pg"-J3sP\YecnHR8g7cfUP1X&%T`4^lg!*R*.A"AEJD`E=.4g(;dm\WjdNW.RR,OL"dmgm01/P1rbR56'ZuQWm5o;55ka"%0=BqV-`^U+N(jhBEj,j0e:Qpn&*gcbo%nhi[86WE\)A_YYIW0SGL]pds9BniE*[Sd`i)_8>fe9R5OW:6_CKN4<N414\,r48f@^FErQOo`j^%nSkN^[@n0/%W-^3p<STe"]YF%B";_<L;W:J.CUdB4Ug?6=t5_[Ut`f/00CQl2.C^J63[69DjDQ=OPlg?(lKVjWrs=[A]dst-An*:aCR0]4jBnVTpOgW\-p3"-n=]>%kZg6_5kiKd$8M3W%W+IDLZ0bb,k7hkP+?Fh5/`5nmf\./@ZM+;Uc812$oo$0oL*XG#!^f@Tt$`5">%`J#,Z6K01V--(<(Mi#B>P,%&:U+C;0%MT9csl[ro0UO3J-3U(4"Q$*9P-u.J,PBh`s+.;7EC-,Y5e)#,inYrs!I@]GpnO'2TWIa6]21.c_7aL72*:n3J6nq$6Ya%::EVW846MCcGNq>+!Vk@;%/$,.7Gmn\bm;8Y8fM4C<#d0nT<Cfq]qS]@D"ak%@\?sVP*d0eM#)-i=&rti_/!O4[U*SM.?U'"3H#;%q&2'[gJiuM?:N)Dr;NWIf)UPE4f6g=$9,#"k\A/Rg0dg2SBXSfdW@%(794.]h&YL\\4c=[)."?o644fbgi8;XqDN^3aRJi$FWNl5%PK#pb^3%_&Bsa-XgOaYG?!bFAX*-mManH88lKJ`rMmenVZ.d:5c4>M3n+bb0/VFOalGAfK&%i&G40Pf!/Wk-MP+!:8;,2JQ='2PZ%FV,M3A*J):@/=>'s7HBhrh<p=6%c0eJdTS!\m=-o^k8.L9l(3mkqsIg'N!SGdZ'`$''>@>R$E<LUPK,eFFslqK!"9.2.^`?3n55k%aIfM`1atM`_f8QHe(0.:c.5]#!2",rZ:60/=-LTS._s3f119/X!iR7p,=Z`Q`:'4<g4DgIikT1@J7g6t!BhEUGA8g"R!d>:MT9om%"p3;B@VPI(-G,V8:$uPZiB9D*<p3-cpmu,P$nPNq-,M](CdNno0=p-WdqDKF1M-/`/tiPN@-n:1^mLcS(H*QbJWaA&,"RM;a]&>M%:,oWo@[Y5N&.X=N-4,4b=2@b+Z[Y:oiA=;T6'KMH2"C@=1J24,g8<mZci>K0!s8<QXTZ;faZl/LStW#FV@lA)5=kmkl;,];7NJcu%*!9bCbFM[6&*a&]1q'!q!,RA?/ce+HiP@J89G9R/#aS>>?2aW;[B::J]cdk)Wj>]JZj>p$I8at4h@T@lHj5).?V0Q%gK.Hmm]dnJ%6fr`>EA$0cV>>2*-T;F0G+:rae".btY7hSp.77-:K84C34bn*=bW$R`q.Jg\6kdKBJj*<\*^DCB**gs<Q6I+Fp#0(,T=ZjML=:"P%J+ChBDi6'%O/$/Fc</+*8D2PYb5FfS7d7!$#6Y_I7cA#X*`>r4'F@eI>u[(##.(LDQK;E)`(gr5blVI7#>JY#/K7m=S;,dVJMuXK%lZVVt<?[(%3aNSmc(K/g8QJK]/OOc%NTTM]o-9bA?Gj=BBLN#]<P>8T#Z08S7XOZ4kA%LQd0rg,3HA+)M$.5Q70Ggo]L#oEcs@Tk%4?X,-eil:8!8-!`MD"ul>S.6YD"#/BTN)<QEcX1OE/r,7l^0I2WCOBEl*H=%B:)R5[Q1A62M]:?^j&4tI$`*33)rI[!d%ULS>YgR%Z3V=33a%AXf@PQn3m4'(_"llPK\m-9X.Z^iIVoGuqnAs5a*WKXC:m&G'W4\TOB9t]O]PK+F95YuZ?BH46QoQ/DNf5>^gYuEG9WJ-%.(5_7H&F:hIhE]"ccE`KYlik^i&W!-.Bd>WO`K#Y:+*720q*/'//[nSOZ?;W'\OgNEY:2seg`ZQYF^@"rm8-'L3N8J"[6BapuD"R%3dX'?iaj3-6E4k_\q5l=hJX+MN3O@)-.:";=MkUu_iPsDY+gCj:1EjeT+rjiXR/WM5WWb.ZhGfS>g=?CX+S!\4UZLlP?&e<Q6Wc6%@LT#^??h]$auI7H7167QgoXkt*7WVgSh8C2Cn9U&hlUXI*j4uaF_nnKR*3;VgJ,<gG1F\>E)H?=5FJ8l@&Z*R9;QiWZmS'[G3ajn%,#PFSBrtu+IYZMf8fU8cB9VW<A^.uJf59PNH1m\:Srpc3#*NAbD`:<W.gMK2R_B3*jL:1NZEkee^h):!X)5D@k+d&+4+M'=Ui/]K%a=#a>\,U9hhtaT1TBG%m-i`gU6ic>t;ps5]gYT^D`VNfa;N+!LJj8p&=8`uS9X'#[qBk"g`$PeG]<51lg?B/a#13ZIHFdDCQ>*ua%8.6#1Q$&dp96YBe;r';Wl,M\+e.'FW"G,NRLU0Mt*@kG`mV\[T[bjk/f8^H/r8\FJ`KsFdm\W<,":?HH!J"X`H0%cbEj?OuA_\Oi%A>QeK%<7@q6*$Z;hd.':Jc!fZZ@ZS2losdIr8V?!QUSqo3=)U?ENLGT,0BlH*>>5b=aHSQ>R.'R@Ld?Ss%C*9CQgD9<@.8bFXtAY%>"K_,ER^'(\ZeuR6%Qtn!u;&r>BAerjb('Hr2"Lko"ig*mR&RT:E((i;!eQlgeH-^YT7BBPJE]9A"c1TWW[0Xio!3FG61X?NlN+Z%]craUo_7i)"`'D8F,e96W<]VD=X=4[[9T-DBf:H=`u1)5OeaY&LAeWQ%#^B9Ei%qL`o8iOZB@'R0;P)0#,nD.[+Llt7J#;V9CCT'%Yu7p*QGfS!.[S$gID">4(SA0(I/UL'qThA><Q/!&NjX&AOF6l^q.5h.^dHJ(8M2J-@VhOkmY:\MSID\I^e,99GMG*6_N.e,&2Xh4%ja`s9p'rGgpAt'Toq])lf=6K^7Vh^YL[]@1^HX_%2&R&sjCFRMr^&l:Nm`VtrB(jFkt67(@(#78i5sXbO!(S*DY*@B'Lbo`GT4pr%\<=ik[(O,3qf+\:?:n%sCO2dbV#[aOD.0P$+e+KGBM>?mM]jg?jL60JXJ1X(P;HKIM_62)#0f3U]%&TAa^rU4maEs#!5riK8JB_W%O$i"1fFErf4>pECptX-mKs6kY1u//=aaPt56ko9)b`BAmnGGOSJj(h;n(i45a?&tTc/,HM6n+uu+OEXjR@bJPZ>B$rIkHhc0%.Is%a^B)P=tJn9gI3hDh^#M3gOHPe3(]S"l^Q;@!mcGq9h3\;m*E!W.Q,+)_\=&`jrA@;*hM%l8,]rg$fCl49e:Lj%.q<I\X5Ya$b#V^%.lf"8kPTF9JcS0<m21">2YMo`*n$!tFm<igc9^p?:&r%'S0VsH7/@?f!$M_ZT4>uiVS7..r89`=:8r<lh.r(YMEqOB6"F&[Z,U,U%rOAC*:!lYc*9OPf$$+-\et(dVA[psY?+[&Gc]koDNN?=Y/SG?kk.fTg1/1t4G>Q8>o;?LO'4a"Rh8PjPX,&*I:*4u=H5.MCHn839%+AOMN72!"BZ$^cH28oLigDoqIFu%hj5mgY)Mr;Tl[IU"R`.\30+iVQ#jUe1#H^E6QMb]$['IFTnQ)lkm]Su1c@2Lr8?5&qPbB"q@%/D+_1JISm8WR;$S[GblN1\c1O<)`1HN<RM0`]egFO<T6^!j!rcn<;q4i=L.TINA.BFu$^n^bheh$gLB^e3Nk2-oGs$<E8pIKj/HU%=lMmoe2X!dZ9(4>Q5,\eM;CR3#["WI'Dj"RcsO\@]j@P07+UIpS!pa\:l_<T0boc0.Q2>fI$)XmGAU@,Au$BU<cqeQaOibIdZ@g+%rOAC+bn4?Ij9ME#[uIuW&NoG#mZ=b;;*Zi7>UkrRc'5,Dl>Y-D:B4(l@6gcEBE>$hcCsV27#b14?5L86bd9KV>G]LJ#_m)-31Sc$%#o!Gr*k^'G']Q?l,DEWo<6$8lYI8T4k.crQEB=tC8&L:c>=?DIHNH%`31mLA,sX+eA;3Xh*HD;[A4a_6IZ*DW-C?47A.V?l!mj(@%r7iQQ(G\0jOlNnO!NS[HZ4B;/Y>L8o*"kt6JjIuldK80f#T-8Q?+*3qPer,6gS,hi3p=WO<1&sOYbVX3QQcp@r,(KbG"Xlfbrj9`%?"TSRAk->+B=*S7.9^`#`H)BI5?Ym,_QfCuN*6qUJU6lT!GA:5<q?i\$cT]N7)C#M#A3T!=mM$bQ`>2DlB[WF)&&%6'Q_QK)Y<!4%-L>4Eo?iL<X9`=njD0p\en@PGn,U\#fuGiH+*6nZC.WG_$%@I)+^Q(eTTs*_9D)4`p1$4-K4mD*KgQX]@TUD)S:ph;p2QM7A$=uU%89HJkUdQ>.qV#h!DO5VdEsrceD9sst)ORNrN!`M=-'fZlGrSkS)mI^IoKj['!24Em>X4t&HV.(G<7eTFY^P/)K*[>1SUu3fE5`6H%Alh4-P92?M<-fVXEB=oe'WiDWk_(WOVeF0kjL6ZY&.i[pp=I6"'fbdF.;Ht:*8s@'U3W`L!,b\U.Wc!n"6<^*NiaXDc&6[M86%?M%M"V9>9mtn\c^:HgE;&/[)We'>Jb.BCLO%ujpFW:.h*$_n\=F!47_7MV!eQ_TVgl!gq[6j%6dao)/K-pV^6p:Rk]dAJ>:*k_LiJ3(%5#uiC6PA%Yg,2;Yf@pe9I?uHFYuC@3]$=nq\>hjj<A$s6Q-F9_P@ZrZ@8pQO0_&EhD(+)qlCK2#nM'1eFt,UC)qgIPf<8mL[L,r&%<J@AaLscIdHo+8`8Mc%1"mI;0E!0EN>3LWX;S`gWDCV?WjA,4J452-GnJ4'X+<,Q$<=)se<ieW;EYTlJo%3N[4/Ft#28]dgFUFg"%rE;U4B\QuPHli$%3ud$mb\&`=!WSk83;V"UX%n`EgKJl?iuNV3rjjL5$Kab!9=V)d[XJ2ApX]*5]XPTKkIlj<J,8ijl`$4<guH`@%Id/ptY?=aK!7!pFk%Ko=$a!<tku,KB>F*$(Lc;)+#nM'`GZ3jKq9eJ+(B?/cIqWWLYEQi,>D-.7]]l+`,++0lTMJbKTf*QUU:Q_#%8?tk4/,\F*8d*VOeUUlHDHkAmQ<i$P.uOtk0,@<AJ'e:bF9P9'CnC(f:_3XR2=mQ-cT-k=X-2CS)r+>L>SA=d^"l^UN!3+8V0^:-%)4p=E2]`VrAh4?ZXRWj4;mL(ZcP%ct[\')=o>BYDo;=ci56&77G`#Cp1*+,b'!FY;"(i\##4T"I%>XWo9ff(H>kNoI?!fF&RB@1)%=mX^5[KnY6<,YfAD7n]p*(hs\CSq!9`H0a6&8pPUdd`JPIl!!T/&A8#0rRcPDN7/n8pjB2=+K&.[Z=o^DJ-iK+B0FrCCph+XF@gt%'ZF0.!ZkS+)9i*'Z<%q+!j9Y+On73]1oFTA+dB.`oYCPG&:PIG;)'.TGEGiV_nYu<3^&g(QmQoF:e])Omsb!P6.rcBWg#qBd7[D_%@#.hD85I,eDC=Ib.k6ZCj@ooh@ZlG#DXRY;2I-Cr]Ee^D6pjDQD4;`15tp0pAS[*-6M*!(E8M]r*FMYHs'HoF=>&02#fb>u!/5jo%H]k-'0N;'U($;;0!N-)[UN;L^E\&t%enA&81;+Vn6cb!38AN]YO5%e',f.Z9d#&F'lH2erdo9[Jfk*6J9uaaEPY1F=f"4!]4-g<\%Uh`LU9),7P4ChaSL1Fne&nE(7`i%CllU^@Z<VL[hO`49%*3k=Iga6W!oK6DXN";<2RMDNUjHC7nN3YR,qm`1+cdE45!\=1s,#-F5%%7=4_Um2@cq_AUXbm`&d0sbkJ:de\uCS@dKDSo)AT*Si6&iXIX&=`/o?41G98G2c08NFV8+hf)ZWo>PoIF5>fI"SD0U8*V+[Koa?%F;FH1Ra1/Vdq626:rS2e+1H<b3Eft8hHJ^B4+7^-N\5B$EAq(^W%V#I"5"KVQtQ)8G#Yg`>Nr1qE$&%`DK!`SX&BWU-Z?IWVo,e&%?/6^-3/db_Gfj1^5o">>%7oj02?_<NZX@!liD#'Hma`Sj"IN+5/4>tJ*7)MdDC<>c<.qF-jLihp6>D+';AM4[l4S[u<7$As>]EtL%<$0J(Bn*J?+MN,:c)?h0UTD$@>2<`3''98A9jPNT'$^4E<7qorJAX83=VUC"PU+<L>&u0Wg*=_q*`_(um]V+&F^I7kppc`GCMp)j%kl>G4$C"^o0JlAGMBlK`Ub`UmKE72T0:n3;6iY)<IMcrb`Q5k6VZo^8pu=fg4[lAfS)?.]^Z3+bem@/Y?Gj:Ya?BK3,(MgCqJ'bN%aYQ5':r<X0VtOQCa6cP[.ZO>#4,gc`d!\i;<^9r<SLta>m'#d39JLAbs*G_Z;`*-Zg,."=N27&$CJ%%rhLiBk[O'AiTrf,N!tM1.%U6m&^ep`]0H2:?BR4ptSVmKPkI@CH\eGu]jh(ohk:*9^A+Fa#r&F"Jia6d,VNjA$V_VLEP'K5X5RYs-D9kbS<5U?b/[>0D'X/6m<%q7\)e0nmD:2"r$Of.Ku@rLod(%6XT8">HnQZ+71YD9fK;<.1JM@(32-9<?^mN8<s.*i\Fg4i"42f(5PqgSq^Bp1l(tLQKtArX?$`%lM,S,h,2KIZ4I!d[\2G)DN":=lOieXU$dkuIohF>9I,ST,4o33Ke\5mEM\Ke0=caP?+NN<j&/,P3]_g@T.5#Q'TO"BGb6V:8)T2%%`409#WDp%L.)q$.+1G2-$_K9Y"p$#<9]$O$DCg/X3\h?qMJ4jh[&ZA$$';l[7S2:)-&DY'j<5/Bl`>c,I^0Gea924ii[N$np_Z]P%"\,&Pf,!K<AmdKe2oEb",Jk9K%`F:V#dZD.J^@H#2Ps*<#CYB&Kr521dVA\X6HKG0#Y/oY0gJ@]E6mAbA@n\]Jk02h%a7fmj3Y"(%:@A*(ZT,dq4hIK&E7-*IJ4<\(NQ8dd66Rj!?8P6s^L!q-ctD._Ka9-0/*cS<C-W2MH!uX9QrssqDVW;"CcMHIJqU?o$@HGA1K;79%@GZ,_!Xs\!l!!;nkkm9?X=DuV6Q]157*_\E*!=kXLiqg*2u+qQ*#Y8!`NVRrs3g6M3U=L-WB.kk`Dh*U4)`loBJn@l.W/0\DK7eD%:";MTUHWSYil[B0VrEgPbjn%\28K!2X(:(_:JK8!_S;@+K_%qf7ab;u8D:t0Uu@,Op@*]KG./(9a$2!.?p85c:QVrjDMZAJ4qBeY%jBJDI5tDWQ?'K4l7g['S"\N64_.Yl8!(83)h^9Jk@sJpaEB=u.,8Aq[f0G9!d=9KiWY&PU1\k=W\*.O8lCbIWegsClXfE:L$aL!d%3:io^lH@S`[qhPX<hC@cpf6A@T&PJCEXsu%buHA*,1IEfT.C(!_lb27,O>Z!P1^5>r7s#4Z>T3bG!H4i`B*#blBtuXgRAG95nCL_%UT6/k]=n+k,0AD:(gH'_Hf1Llp*:F!2Cq&Ho]W!C"LQ+Z/".\&a*$OQ^"O2goJ$^H0jPJ9c50l!=UBX&aJDeCVsf#gIf5=4`iii*%XshE50"kFKp#$[$4UR<d.2QdZ.`lp=TJ9-$Qt:LDa-f7p5-+O>GM4$G/]E[5+tjWeRb=4'+?iCM,q1O.K(G1/1)f"2Qp?G+Q-%M+%h+57"=\$R:R,Io$H&Jts?$6b$_j%`J(<LB-k13"#GA!r]RdtM+As02o<_8G^@sI=cf'6QbkrH)0[^=;u#iVpH!m2T9Z)F]4,^k<>%)-[uu15)nTJb/:&gL(Kg0E:crqChmFDu]^L*<5^cs7:a<[t"ATbC;^Fr^3E9:Yu-AbCB@Qs6X1nja[4&0E:"Grn%0j*<6$3J,IWB%qep`O5CWE8cNjKZo=obf;k/pN!,A/N+Cp;8045_*p;+OWY3Dr$1PI05X]Jodam\\dkfQ!IU<;ID,r,-$MSNE&7OZEPg-XBDc)T@c%Mb5,.Gmt[SDc0X"1>2pWSenm+Q7IUQ%2>F^],fVkAds"f\rG&K/N0@[6:fjrXK-[GZM)Gl4i6%q#N1#?\ASAM#<!>0qYA9Pe;]7#%Hu`r?6I"h7GS6k*,0kg/$h[BRX^M>sOH'&6HkJ:'Grf\3rrm=-)Rh)$a1Z3e25(4ZCt?"=)kbo#H`*\):BmINeUY_9?Mqq'k,J[r%A\3fY'@P4^h=^Y^kZiA(_&%NiT4XA-1h9I*5U32Te%V5U&,>,LI.hPuQN:UZ,D(qs7W+s_3j5JK+f?l7R0`u[hq[V'huC-u"A>h`%2Jq'o@h!f*r6%:Ic]Fbt/#o'[N^g?$Y#M;dYX-J2dr#,;'?pq;1mn-"Z\s^0o&Yc_LS$fcLOFZhdq,dITD-+b(+:K`Z(5>YX3f*#%cIAQ/3Woh)JM<9a!`q*U`sf;Y=<:Lo'qL@ZeALA0E^DktPA+[Jl@Ug1JcPN!mI\/0<P3iio#X:FqohI-e;^dn8gOVsn(?@K@%D;F%U-NU`lmq70OF;&bd!u1rf5FgoUB[Q(X3?Sdcf5Q!r8ZtF.IuHHrkLKA#c-37R&-6erPif'dH1*b[^T&`a<rq<r@S#(c_Ig$=X=ZZ%g01;(d?&0IU7^`!k_gJj!C$Q@Bsnj.gg\_4'*r3>DU*KM!5S?^Sp8LZh@,']%I,[OP2msRos:.cp0RU5ZhF.$,(WpTMQP:>?GRB;%Eh9!tin+CVPTbNSF[bQJ./.*QY\f0E$?s2K5a9NCTb`p]Zd-2_i$c<&[I4WNkc>W-?\S=JFclpr^oA>C?U!7!^Ze%i%gkd2P@^^7%B']1mI0fU*3L7rs5tjp8]85:E&.E6W85sCc0$ibA?[16RH1p=U55""17AV\72J6]Qn1Yt'BYt*'#XP0^C9sA1Uuj'>:<b^=l0Fiu%4]b8a:R'#A9`Hb!O$E&g^??@1=o!lC_r9u]1EZ/2(5rW4?&,<brP:P`Z^5p=AQjo;hAq3?1B$b,S3^kRD4o:@Y/P+tMMbP[J4?dV%jY1<6r4)A"'IjB]hUpf%IsO$0SYNAL#+nX%l[P0>PY&!sWDXRlK)="pQJqXr"*nr?]rJtGB@bgM^,n&JCUsq.FVR,'*hTP$='6W+%8%7e5GFtJO>"Te5I>UE"jc@OF\r*MO)@Cf1['r>O4\Zd4\BeH6kk@lJ8[i];gG8u6a&N7d#UuoL=t+=W1EnloWDcC$g/+9..f"M(%c$lu&8>0L1P>tj`pMlX.FN#BTR*VV@@?2dDc#H;95n^'eKj#^XdQpOH'C$)T4=g6Y!'b[+KGIN3g#-T,4pSnMPrca<OY7"23+)9D%5I#?&PQq=-6p3C_Hra=,,igB!2Ho[&3ChZ\=8]X&1;qZcaB(3olnWJZPRru1Z*F"87!8MF.Ai,hjLeJ_7>M@(J_Kmg7OIuOnq7ol%.$H^$K;GccoVjOhnR-tuX[phUB\F'b[9V9\-,ds<-[@fhn?QDD^0><)Uf;DLhRY]UW2.ZU6Ms[H-A['acNZAUKjuBSQ+_SA5(A"6%*VZl`C460)-D4ZQQc5Er<*,X2`*N0RXf.<FrWJG%jUI&_<O+CW9(>5-f[83,GiII%S)[I`A+a=Vk/BGsATNtWq(^pSA?b!Q#GQI?%Mb&M[2F<U.YZ?B+7e3o2g.(h;2`8'L^-pcK=1&goI?F2+ME,?UX1=_+8W48&Gre5nKOiN._!RSn$Q<$@:K4i@;9)&$.l<AG=N*Te%["hotK%t%'?ja;\dr`m!@4(=##-5]C*t6o2n3D*C`3078bbR]$SQ%N=3C@YHWaM=Y(\HZr^&NEU`uQIHCs"&lfm_j:C/`suKL$HS%IgdU#SE5EUNNX8FhEe?0L\QN_o%rb9\#+%0Y9l=<ZYK(K;lr?$;8aGjh;t;1+Ut%8SqHi%l,T`d?m^OfBCXFrAhlJ,U6EZo/@SAZ%@[ckbaT+G;H/MU&6BmgrmPJWF.1\d%R:>#q\\sUm3&4N8^aFkcb*$e39LAK-J#t.Y%dUe'@l;*H=AM&_7FkJN$=p*e$,;Uk"Ogo2%Z3D+=2j[O.-rMbZja"!)@?*U_/alnP(Oq(Rno7F,b5kG='O.9=mOu8Z./iqC>&m&.SMVe).uRAPe@HBfS#O)OCR?ip=r^aP+?&rI%&a2b]Y'm^DjgEin0On=QWWX(t0/PMnMlp[D*UcRsBE86c=n$e(p``sOHUY'A9s=#50B[^VUDX]D;E5QT,&chY`1/Cq#,XOVI#+J<%"&%("e\ZT9nt;sRAiL@>b=<YZQG4oPZWsqo(q=2a.?7@O('cu2S[#=\S'V_F5+oBS=r+q*:\#8cDFG)1!][a87hY9FA1#K'7;U[3%dG(LSKrDP:))1#6-/Bc=o's<eoq*Vs$$;ijY!@Xp+pOB%=G_AGM.lBR,o0E>#$6EiqrnW=I@4#b3)aL8jNtbtYEu^k/ugTX888\l%$6j1Xoj?cWS7\V@->";OOk=3.AMomOLbj`K?"'%Skm0)4o(X?`&Q6EKmX0DeMN2@!TLC3-$J80%9h,JG%PRKq6q3Q;]f,d)Zg)e\%2X:XAXdW9)X\oEiCGo6W>H_ZcVk0kO&qt9Y(B3;)=EZWe@.J!rdIgb=6X+AUBY1)$H8).iFmDV,ckt]WE#O$%crO.)K>a?ae'U4G%J*e.pZsEWE_Vq1?B!#,T9_st#+o51':5_#.+DEN2(_r;bme<a3I@T_88&B[DgQ3[VmVtdmk@Imq^Sufd[^$/R;_AJ$gZ%=#.52+I%XqbmDP"Y%-^,fJ-mh]gc^4S1e*-a/nU/e$bBJ&!-mQ8%I7KoMN&h66fTUrDn<qbDr9<gsMUI'!WR3_NWA$IVhpN^O#IU0T;Qbm'F%lTOBIPuuN\-dV:XK\4?>XB+B;l20p*j):gJ@o:Pbo-T?D:2h*@H".T=3rE`-5'W"ReGL]g?J_I,,3*8fK%Xa$D=hQg<'>-SJs(rj%e"sbg4OG)/@?sSTXd<3l1Md@fOH)gbl)*P<pkQcPFUlaD#5)@LaQHZ9]i@%+ZKR=NfI)1LZAh1hK^iJPs$]`/1ekMB@CWOY9:'FH%$@tZ-N8>G[3"i!%;p'q&d;bn"Q1gcn9%[Qerq0(d.I"<?;`o]9aAPM0pO%-ki)4,V?^Z4K>8B14(k+/an022a%P6ZAAFoD=m`'-]%MJP-o?]3$m$GQOIDs-IepDSGXb"bKi]beX?QHjfb2G9a:F#-I7DbK+^?-DBtNN%LkdS0\^b1C"fd>i`^8G80QQt.u]7r9D5&BU.Z%/RYVnIC\\)5EF4?-k#(VCW"/A;b/<>63-/8^+GN(c1ofmiqgD<?m1f\709ITBSZ!s/.;\IE#)e?^EHSh"AlZ2r?rLlm2s53WeVrY%P9(ICg*n/7\Tg%U\0Gl$7$@<41(TB&7Ni9,-QN!9ib^t%@$rgVFEM62I9+CZ7Z)mlcA'(^6FFap%HnuA^t<eqMh3L_`?=P%/`*k?%njefhSjN<3@QtW\?RX6"e1-;?q9L7)RuVElQHo9`Re\+u^=YZrkm5^oekC+lJ8p(fGFhkjfjH*G6[UuReSRr]&j)qSjQ0>g]jE`h%@P#OQJ^O6oSR$*_MkdjhRH_G?X$k'2br<n=h6rHBpl#!U<RJ3&I8mu:p&8MYqZ?[oUXOl@A>GSp/GF"%F0RE>\0`)r0Z18q2Jj!@%>Scl"2R5+R<roGJTFHLBg#;<fNIs\p`uGF26T+.B?*40%.f]AAVg,Y^21=(+->*%NgS#:fqXVH-QF7KN9/G.GWrPPeGL\#kQ3^:R%Jb*]#Kd#"oH\G"uh!?mup%$Y8.tDo`c@:h<;t?WV_PeeFEMpVlb[G)H]hi^G[N>=OYn;,IMB0RIRgMQ*_<KW2'_t+0_a5Y_SNU)'%g5,,\buk-J=hK'@*c]6*qYRIOS]!j(/AB/81eCRhlAl(j+IG#f\UH\/)3cZ]$8C61`[t9#-9YN1&+?rfO&(m=FHQh1RS)(?1tnMu%nS4*?/@-Pi23OP@E@[dlkdX5!=UD[pSb"A"cB@'H:.!o)8:B_Q)"D]V=Ve79$rN2[-Tc6-qXQ,mOs>YXbmkBk'Zk[uen=Wtgf?>q%ZX1Vlb\s[YZe)N\TG[r5hHQmM+>t3BXTWU#DO1MZR;[`;\HWeWm@E?*4!f.3<guJ/\#F?8h1>&NS)WUJA>JW=>b!,:jICb/XE)fa%oT3?<=LF:Epl!T(2);=eKn*jkU-n*_)%.WOn;&MYhX=MlbnEIMCi.DG:_,]qbm:QE$-L8]/PDXi+C<VHl.s#(;*E=EI)E[0Q=9J&%8ij*J/'H;7PBlXg!V[iGJRKd@AgeFPlDe#7!Zhj7AJ'm=QD?CT\7fRNZr.p4m+.r/i:dsP5Fl-\ag)V8DO2O_R?=q0b6d60C)akm%:i)Y%7CsjMa,k?\,MIlnBRDT7AfHWB1;l,GD((1Z\%@Wb'^Xk;^Y!=Aj;oIP)<AJ9O`i+$0gAq]'U3r=^LU-bibkI,OaT'h&FuUP%s$Zt5WoAR4T6TVTXV.7I7H+bY;sP+%0V7_uNi"kBSB1r.ATP7^9F_G(Y-M5VN2cg(bFO$M%$Bs!4$\ZP>2#[q[^m5ja-Gk;0/C(Y%YCoR_af=]nXO?*(%d$-M\)3+f(qK[@#0hf/MXR.a6'=?@Ui<I&Og]0H[,MXTf"RrndNfs]+?YbK`Uc$12P>A?bA(0h,NfkW9/u91%lq4'!khAuaCK;,3&R>s?PDjaJkZV%6M0/g/k'OHfX)qtuO8<u[\FjS2061T1;(U4Z15oEbcYOjCD2>(?:0M#cV/$V#Ss`=2\^gpc%5U[:e1It:!EqC^?-a60toK+0"Jp'$;4eUeN>WPhO4=o5<11/kk,7m_8V]1?79%SX&<NO<h[$j"X8$Q\O!@"HIpgLKn+d/\_b+Yb@%8Zlm46Z!9M^Qf6)%cP6U43kS^?0<q1e)#3qCT7TN!VQ=iYdg*1V%N=Wf$]?>]&DqbYq<(a5g8EA.T;R)'c$RP"_*s(A`ZJF8SSA@%Y&gX<0EQ^H<@eHC[mpu-m8X8&dR2Z==&nusf4^KP8IC`odr$Y_g9%*#^5hsjBlA3<8OeJE=$k%@"(,=^=Q</M]W#Za7Ae@_f<hCd%JduM;k(::@'Tc-T1DF/`P>`]K8A;)Y$aYOf/#Dna)AP0--@)L8as.oRP/)_\6k5Wr$u>lE!Rf`V5%`,t[)0]RLYnc#[`3;Co.j]S%<`ElL5kUtLj=fU/+H=FV=<s1:>q0mfgSV3^'UEs9Q?$_@h!V6JedSO[W%Q^mA!/AS9)*)oZ?97TL)GM<.:N1]KU^\7Lhhj7Sl0#A%1g7Z\9-SP9LQu4oMl)o"mF?'Q8^o<uqBYE3C7"!Un(A)/rfiaM:-FnZr_E#rQ5LVr["=E"0A_M-Lb9OY=`>]Y$'0n*W7mY^ZoDpf%D?3M?lcIUjG&Q"fA%_u4d:+&mCN%hjf9akSp2c8\`sH>\-7WBsN7M$b!L1bI#:Lo0$*Ph\-%mUL2P\7`DP:am#bIe?H/0>aZoA\f%IZ+9H1krFU5N+h0,IY5Xqb\$IYHpAW1$oNbg[1_Q(+ori+_t>7H4Ik)e0a$bgk<cc$mUUQQd3e0OIrLHW[60g&EV)1`R[\u"K1jU%-3?(jZB*h"f_(An/d?[1WK]CL:.:cU#d:O;V;WD;[8Td^\I5?9PM(Xgr0VMh9QP`qJ%BZ3MgY]jC6ei#!bB+nR^7L7-b/H!&hLA*%K*a=;l^45?JgIa@,#X0?Z:tm%W6Pe$D2gHTaOFI^O\js&<e`Sua[saZfU*(`p*R`Y-`bQoF'Oc+YJbSr[nI#Xd#1bYWQVF"[K'LM%EJN,B4BC2>l<S,^h;leE.s8C9$P6W"LXT0Z3MoKQs676m_+'Z3#hm"HqCC4g-:QsZG2)QV'$=2_1^/d;,[n\_Bp0#UJcoPnldJ2L%N4:i!]m^9;PRQj-FJ]b7diXg)3f*)>&gkA7jNBk@[Y`tkUPVnYj%7i>/$(Ic]1NeA1GlsadRC+r@$b:X)h6*nB*6(k6Tr:I<p^%#%GKfeR@YJ1feba]/):r%/_5Y%=Hsc_:nSHA:cj)APAdKrseY"/p<R+^,6Oa!cU.a)^AXsZB'6qO2C6d8lit0MLeY;`,$kq;P(k6G2%ei]Op('r+$:;)k&9])#l,5<?d#f,Mebr%LRlu8IshTY64hO%G!#8IKQBH_!'Yg:^[Q/P<?V^#]0r<9:M_B:!QSS6[jdW--E9Z:<k%kcU*^k.n$Tq$RpmFTc2r(Q7q7U%lrtL15"-2nY$BL1WI`W<ObjOt!V4npWXV.,C[+(.-+RU5Dlj9#[bMlp+.LbePWdTV%A9=(RY\%M7gG$;?X##p.8pE/M^_I<P_4VQ*pI';5dZJ[9Z*q22L!UAl\)nRLQm%fS(uQWeB&D](eQ6C,M<nTo0I;]L5Gl"@N"M8)r;Mkh/-c%<DmPfSWk^7=cnHBB(AFdJ;k8gnCX3u7OtF/W^jD64Ba2s@h:-;)`1th5[-ChHY8ho6^09tq@UQpe$jbQ]!KO^'];mP`qhHli"ASF%U`uHo'lX?hkrh?dcI,[jK:J:hlb"p0SG<@F0&WDRoR`.OoR-am%,FooQigKZF0UO\$0>f\)IXV@;M(N.XEJ%$cf"04oA/e*U(<b]%]YV&KX&u#[Q7=g5Ll>dej(7tb#>c8*cfS402AL5%Jt5I!CW'ac/Ecr5.:AT"1^mN!\]^f4#lqkWqH9;q8V[AG:$MA&G/[F(8>mK!%UPmMqY!e`apS)[g)rZilVBo<"1(TU&Z13-OIAUN]80Lo+[8b<XZ!(1M.'XaU;[oTtO?,qNL?F&1q/5<ENpgpAIK_DINI<I0**h"P%I9NW\ILI5^#c!+98MANi71lV/cQI$RQSNP^M$-frBmG<4Qh^omW=Fh65:l?Vm2fY87R4<_YR%.OlmQor_^^4?UkZg\E(?HT)rTRN%Q0_!#kW:UM8%4@bb;lSo7<+#:`t\rtCXh\%-&(V,1EKoR>5KUP-V\XZ9rWkA.P%R!B1[9=T:d/'LK5#?PPLZ1*9a2";,K#Fch.ZT%!2J#XY&Y#f4I%JmPVkf*5r!bYD+SFe.a4503fr18SKkMGjA_8+O$Un]]lFTM.fQ]2Su:md^UePh+%.?lOuY`ON\#d*q/O?R1lI"R%2dcGn$OHsWaq8-f/*LaEW(r,N`/0*4Xajm!ht,?l24'9ZDUUB#M%]Bn]/-!ZJ=0[?O6Dq"VWaTU)7)/FOC9T]p<`07"Q>Y>[:2s-%mqNPMPZc;:UNNT:%]qTlJZ9*]E(PKdQ,Fm;P,:d4h7P=">/`VsX6eRt>.!^Dq+ur[kh/kO(/F+?(B&<5]K($@2+f0?E#9B%Wk#FR%[%jXYRIr$HTO<o_hb-aCUr%jQ:.dRTd"iNL-!l^AC,MU<$s'VI@gsf<,r.sVHOaK7R@Pm!RV+SB[O"(k^K>ZP`H`5oBj3W3!rOsn%>o>uE&?27lF/h=s#4ka?#'=7:f)cNq^WMri-RU9YP+3:$REUNg'SD5(J\S-\S(:SlJCZHN`IdZJ4Kje]g%(BuouWM=qaD.ki;ht'%YL`0tU71*QbT0G:)8i#rB7p9C88j+f0akR(h172=BH&7Wem,mJB6QHLHL_\=`KG@S)R6@aS.;MZr08D^&o54TVSTCtVutM`[-"=n%CS&^%$L*695n/R4@O,k9iml"/6[C,947#eESZEI^&`@#[JCWDa#d'j(UsU4#!O?6D%0]P!&"e??4?2]f<OPht5Ts=\\!"h(WT,6U%+,J'uX2^MC9nh?,?+aJ/ZFA1JU$c`&/.[?69N-fdJal-S)/0!d*e4W&fE1g_7(&ui<Y8Y/8W$/uFh0\MTg;YK&f]$F5+Kqo=mTCY%d@bs:S3bH/<XAV>Kon1XRN94#!Z7$kb>Jpe!dM88k%[22XnWVM97joIeSfUAG=`PNOk-VF\/[S794J06509bE?n-@<EgG[VV\ojs%3@t'7K&pt+6lJ.Kf&@t#9N<#sSOfm+kuQ;.LhbK_Dh"aFC-7:=lYN_kBWA_k9]klca`:0Na\O;@&gVZI%fkt[YhHs.nN%g<)KA1!%?)0UTBD>sPDQ#9k3t.prP5HP>'sda?i^q(Sc-3;4^8Q'E-4eNFZ]3W^"fR>T`s'B+8\;"L.:k$,BqS[2hA)Wt1pt'V4QHm4/dNNJ%MikL5ek`A2!<HK+H>h'Jf`OaY9Jo_<gSK"[#Ekp&N#I-8aY6Mq]H/bP'[0r"G%A35Qn^^;6brh8Fiot3=Sc8qGo$a)%&XZ!HSQN?%P)6PgYQjcDjHbW!`(Cn/Z;:jI.G&<F_=KEnFhC+tP?g1j\#@4"^$b`QW)Io3%JtO+BX.RY:4]:%2<sb`+EP&f:39dl3[?YD,+KMS%qC@9$)=dLu[1<paVp,sgBOs]Z=gP%b*H'5JbKVKIQ$bMUiD$3m,_!:mCR-B7#"T:EbNRQ6r*Hk1>T*&(4O,FA1K^&sFdW)(3ak&$%o<tR`ku<*L(`hgn*r-j$r8-4t]NV?9c-S&0h5holZI3P&no4chgN)57Qr`.:aMJ*H+(7/35Dd3b99@8fmhkS!l#o<FJ@I_K.&74Z%Rfg]UWgUQqFNn%f[TUloF-p5T#ectl-p^V6Eql^RLCr-]8a%G+Y"Krsj=M?DQfKF=h.'cNk7MQY2Z?T2>,$lYF1YU%a[$XEQHUPA%0$b&39j-sSA5!sa))LdE',<h,bo&J7T-Sk\I^jD+BNrFU`\n"S7UToa`^t;YIri`@8*DZR5Ijj9pb"@1`0,cf>(a/kaH`a:1#p@f%:\G]VO<k50Q`asqrVELF30P*:"pJTfAR[&fZ\..AK:Zqp^UT]tFoXr0eZJM5ad1_Q,\.1oAX*<.rMf7N8hMh3@g2S?2s3roW<OaA%Re9i=6R`;ZCf!mnegWlo,3<*!9Hr[8'aCN109f98=bso_&Zll0%/o@i1$TO_X^L^Gp.P&=S^l1-+anNPe1E't$#o5?ThAkc`XWt)%/^EdMj&+<ZD,Sd"Q6,_QQ@i9UBdkG0\rYY+OB=[X*_qoKL=@]#YAI.UWI__8e<aU(9MOo@bIhG_Y:)U6mIi3G$q9j\GmMcgN+S92%H<Nd8'r`#N&OepC"Oarb=Mi'57Dq[E2Tb0?6prCD@O^ErlNd^a.dT]ho-6/;jf4F4GHKcU334N\e?C(<HrQO#9iWj!@>:mE.X73?%0$W*U>IKH2p.a3n\FnYmUZd&cV4P;OYbtnD#VJ\=,;20"O&#+.qtPP*GAr=-GGNXnG[Jd/=jLke/4Q(`#RP]Pp#(Abq*Hsl!eqN-%l[2f.O.W+>iM<'Zf0@/*+o3C,j(8Li?X-'uNA?]#M2!Q$jQodM@6UK;1n%u0YdW7`(^7%AN?F`Z&gm[P]@IKmJ+S`9ULTCR`S1:V%A1.k6b^d4-r%\t.:1m/#.'6eSEkTlk7=rW\;m=R3l65XAO\r'5<Vml&ql$Z'>cQ(]6t^h^T)W`p06S3]a=2D@@#@Y*";U!4\T5h8%Y`laSO361]=@a;u0HOc^n`2;'/4-W;o!W*-1u!2u(M7VhW_LnFR.f5R:*^*#>H;?`J$W!rS-OIEqeZpA5R/eHMEs2-P>P2j8Ibp.%+o*$);Ne?]ds?;e14CUIJ,`lZ3%##!%WVcR%_]sr.OBn?<a'[-Me]O/[nO\^m&"M#r!7c7+\-3*4,\`*qT5c(!QkbG0s:@nLXfER%&-2c-\&3O"DO2l3SqZhZFG8ol.Ic!N0cfP([dlDlkd%fq<0#m'atsKdmBgicQ8)e?_N)!B9C_'KQ4$b^5Kqc"4-)U8AV2>WRX["@%&%V$FjSo=rd@4@ZUP.pkU6I=Rd$Dp^lP9Ofi7sW$F3n2H*r"$1Y,W/=LjBd`(:'_ZnJ>DR>?g5UL=7OC$.u=b0d#s=gLfhWDBulY%TUm;H4FTF;rA!X1YH;Y)M>p[bm`'\1cGn$S3`E7/Ug:Hp/Me."A4qt)1^70s'B!*Mk'e/5hLP?/)=L8e.%AHa:bj;X8iNfC5p@3@%Z34R8UiH<JOUE:I<K!glV@._?4f51bME"-B".3E<&?/<?/ZnFHH%go@:j%.*nSpW$YFOVG*XGBh9$c!OYn5Pkg@Da8ZOM[B7W5RO%$j/N]kgtBj>q*mW\&MERHc".?:Rbr+>@^%s2,-G,(6!8="\DpLm9I7.F%)ZV3aT"Xl7PM$Tf8!=pO'A[pZGu;a6dEMm`Y[l,=Mb`%>am]/[*6To1sCB^"X$3^IgCf3?]@;fMIThJN:<2I#h,@iY*4Y,%Akb38d.T&#u>%t67nIB&U@r'E\[0qWpWWW(aEFYiqu/$.:OHU%7q8n,(m[M7I]f_G)K*lr5&TQC<R]_/?P)<6C)>r!YuS4r5TP\Y#F75J/#':1C6M0&`,9Y[a'1J>>"K1@#CU&JGdt7+D>!6[aJ(3b%g*t?>`)5'KZW-OVm1h=mdC3'1L^_;,8"7f;k>gM5&V-N6$;f0_@3;tBn[a"#pG@<0(1>,=<9kit]TW6B<._sD@B(c1,E.ebR/%sn%(Y(6phHZ;P>_<BO9p#gL&?K6'CA(1!\26K:CSEKc:1?`[/+;K_6A'9>aN.LK4qG(C2auCOSnpUio5$$tHPl<n3t\Zcj8;Ou.lUiS%hDES.5rI$3DbUn&D4A41!MS/J?!Yd_WheNO?!2!IB0V4U-OVHO`lfH@V6.P]_pRtWX.hk(:Et98X8?QWOR=dB-X*2W?+8=a'j)sb%E"mBE#Yb:bCX`rc&#2=+B&[C"Eh]7Fa/"@;nkF+ge<U7oHdf,b+^GNqp;6B/6GKOs1&5`N9e)"=g`]]F>]Cid%;JiBV/An3DX4Qf%JTKQu_lJD;"2YEjW8<^LVpp*30#AeofAY,aB^<sX(OpC_Db&R&0d!k\nZm:"RAM^EB5LF"n0_+&`L?5FdG_3"J41;]<A!qV8L(;m%J9_Y?F(ZZ#1#4pI03T>ZRth0Hm&H\HJ2SL!$J(Tk:kPsohR);@T'4K3ZC[OWqR6WHffH#U\_C-2W1:R+=LWeY0^.P?.UG$V":_dI%XX""$8G2o+58dQ9F.JF6F.#PGO?$!peE`o80e_D`Akkp`fBLCb@6OPt2\j]^qo;,,'mNALR5F3qEkjX>Vj[Cej)S(?kG#4To8.Y*%R2%i=ol[OY4:h:uSVl$iairL$,r:[fot@g\%o8MaiC`g4\te:k1QO]66dRS3,B@'5`>h'WG!FZKUaj2e(3`ZIg!hu<Yl/@[E9_OM%gNVNf@i<s'AFG$YE&dAUhMK-/G$ZNh?o"9?oNn1Id$M@A+1H=]8i&(-mgDoAUdEEhK1)Mj0iVnD@[<jd*>%;RigDgQb8@O:,cp-Q%Yk/ikRc;b%;,bQEFo=3kSK1D%@0,Lir0!A44-OL[_!$Uc1o8c;YL*d#BjXT9Qb"(*EB=c9S)]KWfoBUiqou7Lfk0S>p?G->_)\WL%CkUMcZVk97MT5Bl.<1AEGX-aUKI=!S=3s72FT"6lj'C.:e*epKBE^_+oIYTDmMTm7l?TG^Y?)>R(f>9N"lM%;XVkdlk5:gkIGE,f%92B/hqg_4.5EEeV,F_`Df/08nMMhfE_SbPR)9HR<A-HAJf!Z"c?.5Sb8qR``^#Pb]`D85*kgOP&jd1q>JeGjaC7&,F#BMY4H8;!.%^J8B2Y%d[?;OB_5G`eRfI,*#b/):e/SF^&E=kt9?Y+7DIra9)-f*p.KXPN!tcCT462MpOdP9pQ,(sL]>HEou\"1MPRBfq0uHSID$%aoLTpc675?oui?=Ft$<i1s2'eEMD2;`aJQr35B<WEP[#Bo5Q]$Y<4F4o-KdeHdAsSEsc/ebu]&C$B4Kn0mBa2-e]N6hI0gY8A@s?%FiXfi_D&1oZ?2UQcm<:l/oOi/WcCKoIjJ;9kAMR5D]].I<[B/^bIYF8']]=M@u6tSY%[,82nKt%EB>*mRqTS\qJ[]B#KI@t/M;&4%)1L.N67fOHOaSe4OTXn'hiHkZ6^U!^mR)D[72(/jlV\tf5mRV[IX,g"V6a,6W9+n"6f/oMN):QH<4EQMY_TIk3^h%=R!)k&E_oXI%<r"lAj)-2MkP"u\R109p_b$/Ig-9"o$[f*n:p*_Ea?1!BH..C>@ObD'*5($"\&rBqdjZk'/.M'*YTjK3c0M:87kSE7km):WlA"FA%j.PUZMW\#a?l:AI)6ZmX'^u.*H[Iga6\uo)I,*#clR&%o)LIqW.=)@5ATnl5;ooF$Pa_gCQkGm&#Y:f#'\t'&VZ16T/t]mZOGj;L%b\Zk+,G*)=UF-V\X8ELkLe8\B,3iptd3#oYm*<oHj%.!PM]o]rTr.r]N)dXJ%K!Z+N7Z<1MSukO+Pt`R*!-%]WbclNnr_&(3elsq%]@KrYfF$A0*;:Mk+4>W)U"G>0<OIR=h5\g_W5jc%ML0$K"'I)4Cp6=3DC/_Z*[o,H=U#GI;f(#(<AdbiKqcBM3aQjTkfFQ[Mj][.%Ro(9:F7D:INgCKen$$<&I$3k^U6m1,.tD`d(ImKkj2u^:SNf_$Ras5t[nc%Eg3`'e@+C#B;M]\Xe1GR-#RVS%hq3c9Ho$iSKmh'@%^4R&gYLBT,=2@MG-fK3\N&b!_bm4=eB=7'0BYqZKO5#M9h&MW+h+4*!%J0e7g!BmFO#<b)oMea6'e>;pqGatlL'"%ie(dsT!<smU%(?3F]^(4aGU<]SR3/s@:a*/]d/QiiC\!>p.>hR$d>XUH/FWc!9i%Ve`=cB,S5$E/O2,9]nkog/mh7/O#fm)=@iu;'0nlE'-&.3ZH%>(FnRj"m@GdpU9e51DKWK@"Df)V]5fMAiDC=V*F7/kYMs!814m"PXfj]`*&9Cr'`Z"eUJ6Vkb+[&8A&D$[#I&!B`1WEkQ3EZE:Yq%S_i(#T$#NTO5$XYh8p(&S`%2`^j`hEDn0tQmV1/3S5V@^0%E<hd8Q:35T.B$EFH>^:"h(-.t>6bSTiEB?ROOSGchP6T-ZTn0TJdh%NP-#;'o,(T;j7.[59H=Qrc+LJcqY>),gneS2+cljB%4lg>eDhL5J>6j7Thm9PBganaK`k7TBu*R'4n-?&[Wt@3*<K5*NE^R=-AG,%9t&SH6]9%Oih?oJjS`<j6N]/t.4VuWI&+]J]i-5;`K.90bIqZ(@e$?.BH3]KYq\XH/kR3=g--#D\=JT1@0K]1Ee?H'#^Q`DB^r.e%mUFT]1#;36)-4TjEd"8?>Hq8!F2d]O]#6A)<UcYRCiPM2)?9r*q)ZDTN&9QqJFJNqpMN<LJ1Hfk*7nd8*Wqo6$q9V6>f38_#el;7%.#!WcoeCI6,iUqY#(>:O`9V@D3#oG&G*R:QE<=ZqE&7SFj[h^^+p2a^I)C)5ePL$0k=)g#7u$Ddd];&!MU^UX0Xdj.S1T^s!W:PG%98K%q0?Uml+)?lQ7qp1$k;?44Cdf,jVg9AQ((),316Nde9)Ca5j)ubU2p!ZBNYJJ8#&p8B.UWQuDSmPo=8WfoW^]8`iS8YX)o"fe%a#(9r/j.Vk[RLD@gM"T,eK"6("A^'g!LsYF,Q#f^[F!ebHNU)lg$pL'+bWFMK#D=C[773Ee3ZKTiZYHIeTr)+EB>&A"ML<mE#bt'%@F31!J1j6SHcJf+2`1V-.g^`#mSLb."4t^'dXragUIo]f022,A(;RPFC(tJ4@=bmiYmY#UE[-*<Bn:=E=^N!^k'"s+K=TL1Q*_a#%<bh<2Zhk2#bP^I>bfB*E]P*I8^jqJN)iY)Ac65!\oIMaA.Sp=LUtP0oki)WFSl'p"Ucq0acs.d48tgT$iDNhp*D830F,E@PaCO"1%]<f<Pi36"ka9S0@rr<IFai2q);8Me*8;V#^0b+J6Pfq*Kbu+ih5B+P@'a*DaWHLf=ks%!@]pif;b\XHWm-3K&DcZXg.6DDpnjVI2%*FSg609I$Pe1kM,*[[93]1sdeZ"eM"L-?R"a':rX)K;*2e)9_Q\c>b?T_&@AL,BF$fY`U!$JP_a@P*TR^:1qWrU&Wt<)0eEh4?c'%<RcTt/gs9U_prOt9>b#B9\g+6"U$10jJZZjacJnsD#g"UhaqmD*]Hpha^qsk:pFpG\dCC;9&h0_n!;;iM346jpIu<)"G=o#/8\K6%O-BLr\JBXs5cBs0EtheIL`fN`.PcsQ7@?;NraGBQg3U56G2@B-#N$$PWYFbfM'oXFi6YUm.\A+[O1$O6:d"D1DLAf`8t2nCf)\u.%B+:--/\&LW:`o!)jJICX`t*#m:lO<2o[):s[2GS!k]b9u-<gYJ:rGtg!kV:?3LtA,!=F<'.UQ-E!RYM,!%I_+9sH'PDB+0jUT4'e%lk'I`(_r^fo1`SPV0)/WgjBl6MIe,DU,:L0-_n@VNdE,_Vac6&V0M#2GMUMFAo^Nc`)HfncW1c=,00gejR^pN6-[%n2e(PJ,(+gB%n(N6>/>SgYSpZtpI$q`d<<L7>Ql#:0]Dc405QBPX5J7/khuBQ`-7Kg*_!]Fo=#&e,8=O2gkkM\/_;/f)T,1)$:$Z:SW]=E8VOWRF%RlXqZT6GMahlSm5F,a]!_q+!KJk!V5.^HHHY/RFD)VNGpDDbf=8"^8VU@tJ8BpC6"7VU+(K%O@L9t_Uh/$rpBCUA6l,(OsM</5(#%@C35S[q'e%\:Gs?!?@LO@3Sg85t0/R#o!dm?88O91A'\D6lm]0mhi-bGi5P<Yj*o?VG6XbGkbY=Uflgkg-XqSlQ&""*ZKiJpdT(R%_3kZ2,n:MuJRYEFV'(uN3:+U573hk3c>=u<.G#qO:8>XQQ!0)CcCD6s6I]h65ml)q7)22YN?otk#o"C3&Zk<oMuAq(!pb;nOY=7i%YK]_qIBerLL02],h6_8+8M%7B%NTEHWp5Jf+_r/"/Fl*%"3E9k!IiK04fnoX]ou=&Q<]?&H0UTuj9j,SLfe\o@=)0VV_R;Cn!]tq%D;^dq_mn,oB]W4i2I0O<p#Nb&K/j,M#HEcd5ZDs6P[oW-<,cWPede*4B&@%<[0T/rb;PtoV(5RC@.s=7aQX$Lf&(#3K>57<Y9?rX%?Y/\rrA0HceYLoJ9U]d>,2'%Ud1B1fT^(;h?h=ZK+FnQ&ZEDTh5iO*'Q[V/Hm]S\<IbNLE#YH-s+q@7FQH[adU_h_>DP?MMp+$iR%;`p9Vr4/oYYY??0)/M$/1-)ZnL]]:M#*`!q3'sE5;Dq%\\T?n0p&Q4K2Z,)%W#$2n3FURH"iEd7g(Qd$i\Um6Rqil99GbTSG>m<,%nhJ$K*>MR+^Zs`P/VH%IIch?*Z8NM(:,Puf="kYW;s2tD6PJ#"l'XCa[?60==nSU95e>0iZBo)cBJ#\;W+3?k<#'RfGO)CU,K9bI%XknYl0G=X#aM"[1;PduW"=<jJn>6\N!q1o"\n5om'[na4K<oin6'B(-W*e6Yh+B=X7p@/2,p<fkom,`^jp<=afVM't5Ihp,i(^oY%1=j.:D7a\&Tf)<sW/ZH+g#?oQUehCu\\RtB_3E/gOCqs,RabS>%c#JYIU9uPL=0Kdf7BT>QrfuJjCD]@e(4,roE)M;#b/C^AT9s9%\=FHU]fFX:Yc3)"d1$S0]_Y0/($V2]ca'#J(NuGMn2sRt`^jP@;emDVg7DSJ\F<TV)%'@L:Tcb,Bre'=@`)SoAr2)$aJQtb4Eb`o%7'SKR>'\f$fO!+T]YRZjj`C`;XBW$XW3El762[b;>%2#7&eiTD[MEqQ1TOUr&6.,&rJ22?ei'&e.bW;lYR<kOMD/H&IR!91gD+:e%cpM'l%PH<ZIRK(5RGJYc>1J#e,o8YjBkD.;:5,9J'(pM^Vc4D1!F]db12I\4'>*d&Ko4="#!lb4C*0!RGQjb4cA+DPZ<2ETc=8&F%@Q=P+?R[>X#c_*H>?TJE#ib1%?$o(gdnnalE9g2H(E@t>VZqBfMu#Gc#\CG\YrmIGO$**.e60*ES5n;R?W>M@&Am^YKN,G*`\PO@%,5W],"Mg9J+JWW7:>nK=@\cQbgMAg#'&<f[OOu$V`([rc,h6Puo&q=QP\_Q?hu'rD<jrEpq4P5Zfk=UlBULMH<)=q;g=pIRo#Af^%]rt0lf_)`^1.LEN[7A!g6p5F)\T)J]DDh]";j;(<Q0(;-C-7ECX)PORVo<^#W'UV(IQCDVV27cObj9>Le.u[k@b_')Ya/mg0e',(%.r38"QbGp#&ELE4oL%\dU`7rE__$oQ1:5:E\2M)8_s,]%!L1NgUf!(O`\gAQj*KFb=DM(%-L3,8@`A/.c.pnU[pNDjA&E^T'CCAY%6\?,ZR7U(VQ_<jiNb[rmW[ZfK;iPSg&d@/Q`A>o1-^SG!WL_6nGRbtAZCU,aXJeN/@E,1I?K1R\7hsrA)]J?nAHM>ZfMJOo*Q=3e%(]kAUA%%<U%q^D\.Y&ShYO:OL7OS'=KsW&[1IUY3O<sa4WN6>C)W7P@rPAsh.2-kInQ.[Q=bY:3E9k/?^dd*H3c6N0)<AJO-oIFg%Oe1Ld?5^\%EWrilKG?q^!E/L\Y-2CG$]r9uA4&&7;3(16\Qp&<M_</MAZk,*K;Pej1Oum>RUg=[r`FKTApW.aVsE-OgFDR#lqdZh%>n(1bWst[4a-+)]RBZdi:KJm@3?]oK-qfHs,h#HDo^]&/%h%q0?7e26JC<UGlP*7[iF]$_2[4j]1&;F"=f\hOZ1(L2[9=Pj[f7e#%*UGp\AP@1n6c3Qf&3>L&9lXdOABOmhPl"G_^R!`9?<HD#,rrf>Mis[k^R9tD1T9[h+`HN?Wr7lEYr,QXX!e`\L-UW\jGT&KQd^sH%l03j3T9o!]op0-r<+/Ju((P*M`LFe\]EjS+Q^rH-MpfP^"^<lhpla_ZePVQPPKRUoe;Q4>@0F[mRD.tH\.M!-43YkjC2UK&3Q#%U%<4WL_]fMm.+_p+KHAT#.;&3MD!+)rdUu\i-*_pe#Nr$)RMdVF:=5hTge+e%%@asX2Q0U8o@;!W'Yl&mhN^,=]s$#oaFV*s4[%=H_%C'8/tM)aDB\?&mBr!i%QITdG.qamMrfk.KKnb[&kokc`@Sd-_:P`qJK&XpcuZ<S1,"#Af_)ICt\5.*r9)V2tdI8Y\2s.,?L(5H=2%#oU\/m/r>+0BtjSXmmC3?/imM08U>qlP+qqa)oh8[$'If8Ln]6^"_Z5m1G5)/0/s#W^.3GB6_0b"hM+MS\m$qH^WSs#b;:YrXo7%%SXAT.!&R@g(O8*h"XCJlP<u\-lp+I48<K;lZaE(__d>S(-:\Pnb-1qsnZk]"b1kD[6\kWA8pdS>\2nX6KnHHQ6P1noZH4+^ThgCD%mQ@Rj5*h$=iUg>X%?kUO83H2O*3.q,`4<V\VA7NGGVnigV/XRYg!/^5kWb`I4d1>?7OCuD\>XQ,mUt:7[Xb-"Djt+mJrg/gUE"?"%+jM"*'2fJCWo.:A4$K+9BW>Q<[uEhW)2[2^D:LaI;D\%g.%Som`R(rL[*s1sbM.4(7ek6Cc+B?j:e^i?]%h>[VNoQiV`h2bhZuU*%mNh_42qa!Z5N:c;.<":?W8[CZS,98,Wbd8=d:/a,bR/Vd_n+"qaZ/1KX*LUmWDfHJ]V_OeiM=[R&&%5P<U@??rb5iHrj.Di>d<*%%*-K=!Q6D1E8UQukkkNW*O5%5?VE#P1@3fN18XgIG<g)3oCU^7?k^>^kd^!pWHae(PPDbU^Y\/=1jGgGK59i'^as"d!WhL^0BQD>E%\Y^C%-d<)^du**^S,u1-p[5bj<cqCa>";gq9CQ/s"OT[IgteWagSsr`b@jOQT$dUJX(kVtm(QoK<ka%hlR>K+3RKQ](_/r=GNE`N%H>Ep5b.#>D<CVbPRf2QSH>eI)=0*VZ=SqOAK81$q1osW69=oNkm1fW11/+mu8;H,V<%5,U),Zl@CWgMZ@G&WfA6eG68E0rBjjeBF%dWnMS:f`-N]M"A]m%LldrbC+\32?bB:uim8,jJ4#"d"?'Fkd*gTp3^FEMrMG0pFi<[GCZth&=+S2p6=9/TPkR;_t?i1TsCoi3LJ.%Y&Ckp!'!Coo/uI$FuHM"7'QsZVX6+R*NdL!hc3`V_Z<t8k<1=1gFEDl[\L%:\=aNMr@Q^OX+^`t;C\$SFPA?5L/QU8B`"P[qg?`H%boY@e_\o<-`-h]Y9qH%^q$ts7A4RMble5R%-[XAMP^qLtGU5M3qRE((bn5?L'#``3)njAfCgu$BXhO_W&T<H;UoZh+RGu0-bZSXq%_]pJ@)gtL'5KGNqql"9H2pJed(:6,FWY=sS9/sG`AA9B=<sV:aP5H:E[f/-Q$e:eWI)l&"QG$t.6ST4:6;We,\^7iQf/!I@9(jE'%:dP/5eO0Io>jhXYhPbPTQNR"\Ugc`#Ff--%HhK/Ha6b7a5#'k%>d+[kQtBH.l/>Zr2fTG:`m_<o5d4N=(m;lr^!ea[6e3>\F>[-H%(GcTVEghOtEchXOCPtVIQ7/U%7!1tUB(CjFLVg>/3/78eb2sZIFAqCt@>+7#]+Fi+H.9n%>^2/[KfinEJVWMbXYXNEp1H*\[:RT+%.1e#qbK>4%h5?1@i_ia\-sJ,<cF2MFi,@LqJ?oBVk;F%\)KXR*8QFC+A.)0U$WkoH+c6-\p<Gs>)idg\>5ao(\,To?e(o9dp2N/3%Sttes/QoEVK[ipdf=QriRX\_UD$e@@0`Qrrch*2(ULOYg"/I?S339?h4m>YtZd"0*8GSLnka6h#dl<'^TC",HO;(3<aUo0Oagb<Y%VYIE\$@!BU*:oBd(S=0Egs1O2g.!9bKsNPQ_U]890$[n1)AYj9._UQ[&N?NX5*^)XES?H@-k)Nqf[N;8%i8Jb10hB<s!*QNJ5W$M%6H6QnD5/CGU"'s9#GB[#S)\\a3!/'L>cj3H@bso6cIbfRIf491a6cQF"VIU^%r];\ncUP\<1(69`_k6[F<2&`gE.igLg60i=]NuU%:U$.0co9>$/VfD4an":kBfM#9#fNE-AEq@RL9Y5a<3asr8!K?ic1n()'#bT:=DtN-O3fdjU.2`G+N%MGDW.03$3NP@I%L9XT[Um]%R:\A-EFh8C"\H+:(;gh\0[e3q]N4QdX`h2@VWIh;iQ'bU^rNu1pAK1YD`]K)OEMp1!+Wd"3%%1u(:'GNd(rDCJrs-p*GZ+@%(T2u%PS@?E7F_1R'f5rNT*.p^M',i-,I2lg-m'iYP&Bgf""4JLeT(=r\]Uj6Kt3W@g/4?^JfTLsE:Qc*,CI^RU,G^kGFM.9l_m`b#K%Al%b=`[1e;8"[ec%[-QpJ_RWUc-3F&HGLWV*4m>5]ST-Ck=[[SqDG4n;17L'i]ck\[\`EPkQH<n"C=Gk.B*I6s+&S,`KaZNH>PhEU]7%oJ="Dfa(/3pr=%'%8D<eiP,DH2i$.MJ,=ED>E*)#.Fk#<!%"CKTa37!,G#1oloO/[,DgCu!i9A=*5rc"D'jjY+>>'MNj0;,Jl\n<%!.[8G9V8h*LW:bK(l%@1ZHMh$U9;&@EC".C2Uu&e)k[o`)/e]L=>E]^8I[!mV_gq%D9m,V,V`)&9b93RR(u*s&==I(KSoeWU#[/e%$4+L[KM8p&ma`eCE*2rsOb<hI!@O#2%/[;P>Hr=F[V5(-kssdW`5au%73T'*mWSeULgVLS]R\V75?cF,b@&h9,1268R[6?p?$+@-%nmb&cA]fJjT3.3$DnBgE3`,:?Hi%@8I'u`+s"]2.\Ji3[oQQqYhRN-ST<,`<?22NrIK$R!>sm$E[bQPNK_Wi^QLEmcpt]i`AG*gf%B2X/0j[actpP7oZB/6\*./Q+G@6*W*l*R-fITS&F]f#d+AiK1=52eBIBh,r`&VBH*K6IM2]h;IL+k`krrL_-I`FZB5ZBR'0`hM[V%VAms$5Xh4c*5o^d*lk?nClCmp'O`6arqR^5[15=1kbi_m6`(=$e0&mNF#j.c=+B6h6s1,f[rG,9:_6I;!SAflnRlK4q9^S"^D<IA%XHq(S[i1E2aX\&1f'"3"`9l7Okt9)PYd8N2aB`jV/oZ&B'*@#akMGjh2k:didrGqDj.)58pr>%\]>&<=Z3]8HY>I:;;lc])Q0dOe%lb:J*3>t)pJ=[5k5"kIYo4=^c^1p.bj0'-AI?-YU6ap#,K>N\+X!=`XT\+P^Si7qg_d`<qOb0Ch$JF>$jkT9YgH4DDi?qN+(+aGj%HsN$.r+CM$qI$*-+jWJarm)B5Oq[Hjn@?X6F1:Ree!$UO'g+:?1Jq0I]YK$soSiT^fk8Coe]5l%Ib@X6NmgNn?=V4Jcg0c'IJ_D)%O)i\[9,nKD_C-cogp62e>B=+VJ(O(,4UR&cKP!E['(=\25+K>$(A%@Js7Q9PVtdC5K1J0,,3O`6Xgigfn_@>=T.T7'K,?me&pDJm%m<BXp+G-]m$HU]L[(jA"D\hE3Vt28D"EhD:3DN&-Y)-P<;jVV%OXUIdh^0#i"NT(E5?pi$k12kdICV[aQ"WfUDZ-G4QUmNs<SitM%HQKuk5M1J,,88a_4]Q7*j-:oT8FsG@?f,6FmN,J.f\g](I\/0=!2?tqJ<^jhSPnB;Fruh5Y*JqFf&116rrkUX+4r]OVSXZD(DtNF%iR1Jd-IJ[GL^8IYjhE3u0U[]j(60djl?B;e2j70:<9dWlCho\\k+.WbX1duPO#@kP&:c+"gD;\79dU&7Ya&uA$1"`4_2]8McnDR$%dJ=A4e;Y.A-=\>8pP*6X]i/).cLV5W>N#=eWI^l-rge]Zle/iL1ri"CKHU'MZF^/BT5X"SX.)md"H[\b)`Wri)h7YT8)9%2n*i&J%.HV.X,bFu%j---;]9)9I7TB6eWq-%bQc&i9j.juMrGGot`%JR[2ek@R%VkQOE.#Ib+\4W"AOF5SN0aMU^2uq7!Pa[!720AJ%O1JA%m./u'E+^?NGKO?f/TGAT^^?G+/W>%f0a5sKZ.gCLcC:]:!2%FT7i&.lc;k\rlC)tsX*U7!NB4=g<NHG+J7?>s%r'^UYCfdX=B!H0%jm]i$!$\\H?*VGblB_Nu3K$pL)e(88%5u9XO4Mags"8^F1nle?X.K@,a-^9*=3pg->RTfV!<jbV<:B;lc6]rDZ<uNncoT9"M/UBC%+V!OMFs8[W9gU>Y\p+I,=5t8LfF:d2DqCZM+Tc,SdmVr9'9qF`W_CW2lLSh5V@St@1K#SKgj>rmG18/$cQ3\3WVQr[EKMI0\bH)D%2r`k@*k_4)Gn6D(3V<3A*EJLg0Et6XE9sf4DGVjeR_beMH1>\QO(PVo5bUf*Z6<9>?Q&)GjK5-"@3Ib8WbjVodH"kEVEs1[0gq8)%-deOp<2W81PFRFp"`f)4;'_fs76UQTStl*%alL@<O5%4T_R>%$nrM)SZT>k_TF$jlMS1<`c7K:S+-nK$R+472#K.pWBiBP7B&juA%hT5=QQut$q$#A'56ksri-u;TW\:@N"Y8R6LW:hV%$9HY9#*)<W*YYnn$S&5L*\o@lS@r#dBf"EhFo1>f+1G0g"l(#3?!tq-D#Kb.%MH4UE<Yc6q"+kNMEmgK%dbXt]h`H=bTXdKPT!iQi:qIjR8Drbi(r,^i9?@l$i_26Z7fh_^a@"9<3=Q`D"N&CfLJO!j6?7iB\:]>B%@MTL^;(M;ed8k:1KV::)/Y<5qgeNR##UPkO]C5VH<_n>(nh`L*4l.5WfnSsR;KA=')^igSRc>%uh?5ULWW6.bfY,QI8@Ph*;GsW6%BV+cJijic,(dsO/-<*72V?r0WIX)hr!4@-1)b\Z4o=Y!L=CY/a`CU6]G`n#HCg2JLI2M]u3uaNsP$.Sh(OQI13+AU5_1MtGSS:pK%F![@-:q?cI#"sX=p(h!Koh3$;-8=6sd;8Af&:i,18qfo"_Ah3aLZ5VMqd+B8%I&TeFPL"cfH=qkKpLuuR!.ZZioXKta=Lsg8PD8h%X@1l-&,E`+M!ou=NZ,!.R=O.Ie>66Z7Pdu'N4Ei![oRM1!S,#cA3@Z#8*uZ^_4l%_&g:g?n=%G"#G\Y)D.Npf:I:o0euMrd_<s.K%6uY_<2;YOZh.uI'7#b0%e#fYg304i"V`thddYC+1[o78e7T3Y6U;/H2hu7.),>Ad;$]hSLX\".fLZT'85\s%>Zp]_&bl&AgbH,It%9>0B?#;M59i/17%DR7?<S1K2BB-,.HKmL_3[^;t*b=<J"DOM*)D_ACr0W-E#TG5#LaAUCLO[KFeMf-/d<077$rP7bfF>_co[_T)Z%^@_aEcU"k"i`YpJB@7k24'.@<4A>EfqZ/;c\<0!a'''^A(DshPK+_cd2BXt*qMJ``nClF3KsdEIF]OR&q#QFbBIYJD7.-t&/7\mM%F0u&N@E1K0)_f4Ikd0VaWAcj)$WS_C(4`CWNgnhK`cth/:sbrX-4jdGW`m`D5&TQ#M\hdQYL;.CKT7ps1H-"M_$.'2XHR9T$VJ<!%?(f<EGTYk^1h$Nhj/?k^l4[YH]U?U`2PMd9?BB`(kH?&`bR4b>UT7KF7</f1?`L,9h74oCi+,#6(p_&!cZRj;(T70rEY7uF+3/ca%9n[T<W0q+@KYDj[.'`'&1r1T?3EurkWK;2cPSRgr_m&[fqH.1UZnVCNA-=(cd?2Son'aa9%`?&7(p>d3L0dbn$A)s2iWc4hLp$mD%K&@eoRkRh!^pQ[J8ee$$lRaOq#7FYFX(i[[IG@T:ASF,s!=72$Q_(4_Vm')N%+9_$@0g]L11V:JU4Q5p!)L1oAg'6+RpoqoD74.i%ahr]X8QZ:""9L"!JrnJ*5C0QR+0R*#"gp5852;j.g'0)r\$4?!CR:7nb^D>!R+MZqOF?bbeKnT66U#B8ikdbci]"-5-9+T@KO7f'%4E*RHL%[H`1RTthbJC0!p4bIn0E%X,U`qKs#mj%!SI3gS$&'n@T4qj*0K"V>3T#*k%AKtFplsPpK-bGJ>CQ$b2u./4_=\eqg.\WM%lMq%R6,<CPki6h9Y$A8iTI21f8e.jlJj;=:<#\1;2mH1!B0eiUN(LTPq&05^a@h%\JcU`qW`Xe0Qo[@?a9fbL5QE:fMJX51XOuc'%I%/**LrWLrAYV=eLX#nbKQ=3YGiku!D2iaG>M\n'<G"l7<a!1iptIHGK0F1Ni]Z,3]A)p2S-Q1G)'^=2k)!E@,pUO.D@0Z)j%j@I%<Vrt5<W3>@GNDp^r0H+HbC*a!Y5e9,.-FREAIku\aYIr27\-5pq>RPOnQXRE.`idg?@.#"DeZdI&,Nf,$3riTD";rsd!co'":p2=%0g\&<o3i-]#q*Of<d[O)NBY(7V=@<BdFBh)&*+aJafN!(\+9H4?Jp3,Ji1_>>YW>Sh4iLFiH@]EJ72]+J$V/u*S\'kYo(j`?sV>R%IMhcu3uOJ43*IT?7Zq@b.>oBm6[7et-Cjg&8(bJsbMYgCOX'[qeWC`1n5_oiLf0O014EY@Pj#kb_!OYgm"W4,S[KG*k%a@`U>T3,%h.."Ops$A:nuU)UGI!e"'a=;bQQU%4Rki6Q`8m-?<`%![p+Zkc;.?A#UTf>Qe@0Au)G^W,ijnnSC>_ji`E0MtH"od/RuBAgap&`A%1_U;3YZRNMaT)b8a8tpr#uAWtgRH0Udol=!q&X!`-G'tqO3GhjQ\TK:LNTW_<].Wq]-!7C,<r2gX61"AgjX^-:>p85r>)Dpl3'Q`%9gRb6Mtk_?-n2]6S0]I26]01YpSlSq2bcao*7@T`I);)<dW^LR;dk!($T5J+2TZ8IR.N8!,a7eU8<!0(B$8\*/_\,Kp33i<KA4=A%pFVCa4^#AF!fP3q2Zl6]Vr9e*Za[iL1J.QJ?.t#+!_JQrVa"k9Hm'c.ZL3:e1c#Vg0#%U0KjR9=3+(e5Ui2O"YcTZcKf4:jaP%p8%Z?Z&@R^]).6=25LA,rGm\E.C&^+9&.r5jrO!S9LQhulblMP0-ZgV]tNgUZed$A)h?%8rA(.F(]a&tWNcO]Vf2Sa/=rh58.UaEoor%^?l"6#[R#a+X'i5bs$_pS>."Op]%OC_)cLQ0e?,o"q,&RT.Hca?tY-d6*KHH?K9Ks_J!5VQJu"E/b*g?mK+J=]'WqMa6cPKiNtD1%TuoCs1k^kD:uRnb[Rq=X!NJUGN%kU<Cnd[=_')?m'Wh?Bgrc!Ikh$_LU!&M45o[7rOoteo*BAZZK#S'\6AMPp^`813O?p(7:Eo\.%*R(KG7ln/Xb9:Hu1G[!rZ[<.(C8U[A,3kj"Fc$n;gYL-rbg3*g+BCDB<q*BFZt1rPY]YDB51c$kB$g`pLj78W5hSSk;8VrK?0PT+%$?E3tQ$1]C#a(%b1`Qh%,Vrh4'.MeeHloh)iFd/7XA?OH:^,fP(Z)M7+i_3^$VKU?Z-%3-E7H;Q2=kp<>Xa1DF6<QPZ_Ik\9XKa%%>k*DFPXXda^aW=gU"h4R*\/=hi2$uQ#b(FBT!e#JmFb&^e7T33?_G[.!*td*mdksigM(o_`W:6oHB].o_QfbGqdDnc(X?saXtWp/%q/;XGo*YNkoj+e\(,5$cRag`OVMGY*)Ppm@rbIaGjnD#P/UhnE;%);"_O_lB1Qs=O)(]E)9(+X+RIqWt\B3-kXN3`)+8b/;fZ3Ai%>`h]X"$;iWO[lXhG'Tq+T,i#Y<)8aF]g;t8Aclak>F1LbQ>;:a;7GQIU/V[Fj=N$^']h/!WUd5pq@Gubnrh3K9Sat#-38jmi22-j%iI7+mY)$Q4$4CHBF6F2,6^$kd*q4/2%6qP>.7I"PLtluS0bVKO\]6,ld'\=[![94O7Q(<c7SdEWmOLi@A=M,F_FR2ekqEh4WJ[Ih%D5G>(D/2Jt>Sd[3.0QpBPILR,l[F$krp@V,_;!]t/#g,CD()+'m$jcbSa;<ZaB;eD!FVhi#W1Hk6?OEFZV'b9o.Xarm6n\NJ7*4Z%(ChETD-rt\7/pO&/aca".T5&*7;NluCTMDi<i_qo"nEITZq/OnhDTNL)NH%>/<l:>+9J(L5qkR"B].iiXMrmc70,i=Iiu-CiQ5?<%S[)$-6HI4oL=TP._ia+god7k/3Uceum,N7EhCEeP_hX.0\[%9JQoX0pMgFE:PIr8#oe*b\9(p)FFnm4b,>hX@+W=Z>f+N,8N/+,]%R3FnJAiP422WES"@<l$'ZYCWb]/c0E=\4HeZAFrB5^>tWi(1i/-aQLb5s4!$E]<@FFttZe<`Umj"%(u/Ro'MJ*g).K1d-ss-SGjK%0QUlRJP5eXe912&q27#gM(U,9#71L+F5S%9@8jZb#`)GN[[L3MYLOTnR8q'SP(ku.?2?<[^$ZM3S?<u&Y15MCoC+4*(-<B[,Jff2%5p*R7@5Kj@<j1Hf-3Kp/;*b:,-\beiRQQ8n,T[,i"$CO$OXGf[lqUuNY)NMtM%3B/AJA/b6H"cok6g!s0-jHf*<IK4&l@LDC[49$%qR@(_2b*?,*HmI'gK-Y&5UO(:Za."66`fP3Y#MqcT1==bcG`T:2F-/]*e7AN@8_Mgen9UOSQmN0(t1Rf8k`H;=4=K3c<ma(_+%mm%<?;Pk-m:9MpsC[9#s+k%fn>J?!TM?:cU#EEL5a6_4gs>D,.IWeBH%(K>YX.<86X$L/.*_qD<Ie>C26084V.D!SVe4$PfT[43m8#U%*\Hf<at24J^t2=)E`Blr.;mm+d=j+^+\QN-WrrISRginCa?f@K&3W$=921kW!&?u[:7>KYXCB*.%4FkDW=:)(Q^AX?@W54W87`=a%-3tIco4A>]nai'f+]10;"&pE<B$eTc<&e=r$Iui>dBRk.R:Xg6:9p@E.Tk5m4O&^fS)^KY9ET-^`Ota_g>pMT*2/Bnh*tjD[e7Ft%]`4E\#DWL>R=KE4=*:DjLeWbgr8-g.a*3.'[_>+8I`WF1_H#:>RkZ"/'B)Ju^Yf^eHAA3`Ae\dBcNgqF&Q'*bEa'[i7(!>-'YRb&%4QAC<7k$:Ga`=q>O:C=0`Qs[s(A;*&E'MAt\B)o^YY!G\$RD*sJC?14E98%LAEub3SMOEZ)5>J=@jW$;[@l.V"S:HZO5&@_l/L-t%_aPtd7('?,CD`NnSD]@c(TQ^#%5.]H](F_g@2$p$LC?j)#JUTPU3K4/7d0@&(A&'oJnW><7q4N\q=A^.C^e#?$AL.<Em9P]8&<*_%ZG<KD1Ru?aka$c7Ho&XCpggNK@a</6&&USK-f[X]1M0%)R&!2C@6Z"pKqZ_T<`/(jOGX^Fn>5X8`#i!T%&E3po$Jp-B*O(3!5rhs%@32jRqk9r?P>r%MqV<aL31+[9CW\!:&-`<'-I8)D\'hd\V0&#:1"oYHPeJaKQD@I.2m48GZZp\h5&TQ#"qRdiDBdT>A.b(-`LJT;%b5f]Qr!O6j.D&G__VH'?Ia&PMf*05rKh:=SdGR;9SohK4&1)lT!Y($`A"5VAg*nIB+CJYf$LjXONF^-W4-@u-@7#Kh9M9;uQ22(4%%_5"GDlq8[<gjg`_`hrcj0B">R<KN!J6g4_g+5,a?_hD!!6:=R!5+-cK>q/o>U,PEn5W\)+72+PEq7&?N!$(cZC;33`m@*T*iF7k%CkkSqR$1uH0sCuRolaBHl)I&RC_!MKeC)3'h6mX%$q_@11U>=;@m4dCijpkA+Q=&63f4R0e8Cg+VE#A)i)u2a;TO`pSUILh*E085%0Di(Rm>8MK9_-QSNI%XnZUa8Y0#A4^8ju`k6Lef"3mjLl")S[]dVQr#f,ucS>W[]#$%Y38o7bR`UQ7;g>MY87\=JO.:S,[>N<JsR%hJ17e11IL2^n!'sknFKS)5K;"_P_348fj*N"86H=81UNU/XiE7puq8Y.[^D`?'1-)03eKE^RetI6?eU!lil&_g+c.<kK(;cQ_GR+%#ao`>4%1p>7#kSVOloR`[rYu63@FrQ`!hfiC`LqkFtDG@6DWPt,^*d"1U45lC7"-^J&a.")Vmp>Q_%GmOp#`35W.+XLn^a^aVn&g%1#9-c2QoIkKUSpQ;^iT`b.-i8:<$fL44\5Q!@6u)L)EK+PBQcnW/o]Dn/UP_Kih#P?3-a+\sGaGKs,M[n":i9*I&Lf$Yt#ua&PqK%;#IKP1aFXD(9nXC,ADt)cnQOg<"WbG&NCdm.\j"!2'S&gS;.I<p3LM48]mu`nT;&@:JV<s]iZ&5^YFhG\=JTe+'0H>?-q`7JWD<,%?0*u=9u@NFNR+#-Mt\_'MA<UY6#Iu<cf-e<9o29a1%1%P,$@T<Mmp&$T;5FN-D"UFPYBKTA02Q&7_a-eB/AklB=']q8'%PEIS%5d%EdY1nbrq$^\=JO.XA84#\M#;%hct6U*H9Z*#(m><P/"ND3k;-M%XOEI9?85_I-[m*):H[V:C`dPe*QlPIU,>IG:9,V9!hKYa,J-n%(M-<l9hn:-`f.9&\K\7l3k]`Do>\Bpd4uh'-lSt\;'1!\@0g;Icj.Rs;ffa+\1T!o;roLG.F^ajJh1Fg)DCL=[aNBm8bs$%)=XCf%EJH^`M0RJ,]V-NTEE:ef`ks$=TWBP8Wl=>K6DPrRNf'&^i%E3/KP8_dJ8He-J;?a.MJe#g>M2rbQ`@ZD)YJ)3(K[S&&rJCGi=_#]%@(?)#SB\!cdZXc^KNUj!*!=E;o8\/O\O^LgdXl8==N*kD-S:YteiI'qiHto%2ip[?5P](^AU$\D%RtspM6jfdRRA0r/1<tkJn9Q+%Kl#:76Up+Y2&'[(Sjn.`c@o%=poi@9PaTe?[t1to%PR0?qZqRcaVh;`b'Y4!<U!6=W9k+G;`Wqf&MH1'WB9[iZ0gQ9VmNlMWET92%lC3GY*"iW\fp@<9_To4(!&]#lWPj]n'QV_E&D3jT2f\N^gD$4DkD4Jh_<kf64][cL&kRh@?'NgL^?j<r*OiB=?!9W\.G#@mf-W(X%n=,GE&j-qD:7BW;'Fu6qcjM[JLuKF"(==U_\*Am,le9)Z5@3Q2\P.g+Sj5^8#ZGP9jY"VY]ColMH9)A)S/G-/(dt/R25ciS%\$=7%\4\>R9[RiLPnH6>pUHcJO!UMEMjp7`m>:Zrd&>]L$*[;ab1j`f(c$4bZXQ>aFL2c*HW+^W`n-k3Pn[P%o?)SW8*%%UG'dPc1]uB"%<Nb3Wg!<*drsU1(4FP46-L]5@3LV!0gk8h<S>nWdAqQ#P/4qEh0lH)JKM#/28D^fF#EW%gIItdVI9i1d;N0S):Lm7TI:P2>MhMA$%VAYn3NQjq#4O,_;0:=F!n^QahMu0lU,TEkBXs[Bl_"<^p7o0hl<u`"(cG"T&l\5U[+ot>mFeki!!QQm6rdX>Ibae'('SIk.8HH[D%$YY\h[=e8p.TZHc8:/37-2OT3eeJ@9KjHIM'kN8hi2-l8)]k.F$etjI5dF:e(`kC'"+fJuRo,],f_hPe7O(WW2A3[+9p7+J%[^K)%aHJ,nmWc+kmc]iQba]!(+]lO?3qYS1Q$h&a=,e(%H.&,N909bWbW&uOJkJ=ha%&Ue&HX]n'eb+snN@_gA9_UClQ[-^`6f-F^ZH]W%?KLq*<TGk_Lot8>l)8'[ie)N*eI)V@RoWL%NH3eqZ"(A$nhU3C'D$3X^O8#O":qSS?"PKjp)f5G5pO&4=ko?j`8VZYKleMGq@=@f%c&R/(oUP&GpO[p5kVYLH=FQ8Er_T\Pa^RA[VLkf*H/QKpT+Tj^o>d?5=X01dd4GtZRY<;%_^<]FrErL]dY?`4H1$O"iMKtcS"TB0%6)>'?7;<W<S^#*<PEL#9.6#qB<lZf6YVrD;*4D@Seoq#M.RV`/,9fDLML5`?0$<5EBW,5Z'k'B]%u,0j^Uoo0j=pk1#1:"WikZ4U%`,3o&Y9deW(S<"qIb^>5HN1i>QUc)!V#e;[*C>m5R@)4b8aKL$,\P>#r<7)P`e\pg*`.X8B9QOOJ]GlLU]#FcVSlUBrj@"%TDS*g%g45eh7M0\9c\Q?I9;`F1`00j9S2Zt4K`W2h`Y-kedu!t6%K".=_a"FdQ<qZifJjGXVTHf.5hQ\h-/BJZCk0!"PYkNuMmr%D>=ot9%e>0e@+4t_\cPJa@o!IU0osd5m.K:RC';4ZFl17:XBUbIX(Z+"]CEqm8[nk47>,@c>?N]YF@n#ES)B,GQE2Gd4"m+f%5dREul,?OO%*IfuLg#H%Wkh#,9$;%7`h3C-ON5F?q,bhLQYC9nY79#@c=?F:Nfh&8^A[)QS2fbInUiN-*%W3uekffKX)N.":U%]>ZF-lkLp=Zdo%rV"oUE7a-r#'XRus!&:@+=BOS)SG8`g#cMnQo=j,qKOE`o>7AJ*/pj_%O)eBc[YY2%`Oq`\2boN+AG-(#$!73[UF/TEAuH%`.2;A%Q78#Z'Y#^l*5J"6D^eK5&.YjEi7GrQbuN!1`ke*8,RE%Wjhm?H[n,]/\gT(]ed>%M,V;o)iVTU]nN5S<@@sFGF2=NT:"q#*GX3k1%o_RaEr^4*oOI@:PkIPQH/&02^:0gp'MAU_34V.AC-UYWDZ[_-qZHZdtX[o\lVs>/odS-#Eppp+Uq.kBC,U6.BBq9k%:%W(N,2oo.%VHBWXgMhXL+89]4PC6hCqom+6^JOJ,^22Q`f4/Y6'mMI=?#3/6^l.9T/Lg>Gg8Mrc_!^JrK`:oi(Kt`'l&Ec?'jhKmY4ej.dCU2W%\A%+0ZS9%#4pqZ,;EONAV8i$-'Dna6Y8^aSHI4oJE4rV0Ofob3e6#FsW#7KOiA5-ta=RARlb9WB0_CI?\9#B6f.KH,?;%t+O6ucA%03c15efuf):=S5F>D4h\5_<#d>Ra^;\+YGIjc:MKcgQ2=#G[M5Q5J\_%.e,9NOTJRD(Hb"NL(ep`d=q&DmsAkmF,SDk&(-Kql0LU%P6H=d$?MlIf=hQ9oLP%sQ/Yn1MC_d665;p)GP+kL28Q;r:'REjs3#\o.f0X.U+/(ma`q-$6k%iO[QHcsZQK1`l`RL6(T7gO8B]Z[%/mWtP.&-'<`nW`7`jfOAeeNNAkcu6NroskSj<n%$9j[d]8^QAne!WbW`N6po7GHoaY@)#>@h+(8i^T>gO2tA7#]DLJG7O1.+;FD:%OSm$3](^O=*MgHJfCR&/M['`"hECW8Z\[\iiTO:k$MC__Xq3=$eBV*VpXkl9(FDL7X@k"/>P-m8^1sJ$1"uUYSmH_(,u7=>q1oB-%+1QbtRN]\@iC%7Q8iHd?+T,VLK3NP^m0La=[BM!'X[[@[C]N%h"0s\4Lf/+)OYV5I3Ao`A0[pR;FE8r?"V>Ij5RF]ZLlnrGM=gM1%CdcI0#S_F@`b79G$QPjHc/PPon\_;dgUVRfER!#*<;_q'59JLH5S8UH!V<).\.X#08togl)-AZ7"j+5#&dOf<S!@GrmI4KYjJoeu%!;?Pr(?T3QNB5eY<*9Y;;+KbK!JW5"=U8(UVZ]Fli6]WtA6C0=^6]B`A./\Z-!P*,Eem@KRVn:R]3uejPOX]QB<_Fc^nq9;Fr1LA%k;Y#G#sr6L\<L2dE[1ZmXji/319nZ2A2kBkSqQ29bQi,E[.a$*dVAC*k;I'i.ot;7%Zc"On9Yf@A8/8)L#,,*2R7K9J::+;$)bYB%\2:*k1W5TUEY)dd)3Y8og!-1N]:!nX;S,ZW99=m8^/kmfb`RLW>4o#cY+]J6T.<X2F=kVr"oQ0alU9O'276P^!2+(i,km1'GE<6<%Xd\[GU^>38!9[/G"VQ3Ip_XaB0)@gY:I&.1b9%!umV"0-lQD8Q2Y(nF%/IE(LtB0k%ufXjkRAV[4X)aKCsg[?8X5=QZ]-)@=H'"j%9X#^V='&U+`;j,/r(Bul!A2=!SZ;2]:o/sps1!8m/TG9:?C79;k3=s=74c&<L2S-kD+2L'GXC%T%PG-ZimeTS%'g>d^j![[DC=J@%bPU(dhV8c.O=,@:6!Vq[1"s:N:aUnIe[3D\Kg]u#,5n1p78>A?%NZFJ]I5nYOc_!H2VR;L5Yp=:3W"JBFr!$THJGHS<GtDF:R82h%rKZMM1L<5PB1OQ*Z_"6$LAH8.it%nKDWg#%a#[t`$]NM;Lp`#_;ubb;^1Gi\,g#H^l6":sLY;J"0pJ=7Jc]YZ\O]%YW?JTOA;Lrt%pPSXJ\9ZBn>?'(L\9F/Rce'V^c/$Y3Z"t:GJs*&:,0KPSV?t@J_Vc0:S?DaA$#64)M3?/`0L^Scmd2Ds9:.nnCbSg961$Aj[QE,o%^++'`O'+B!as`^c`):b6M)3#"F9igKi42`i*$\L'FQ)Jnm[)W!.B;cf,roK>D0N5!_L:Tod9.7tGhJSiNF@#)Q%uPlRIPD4_fq6M%08p]<6J7k]Wa+V)#I:hd.S;)pZ[:181J<u6VX58oY_oH[2DBGM)s7Hk*\g&,5sZ_0@q<=06:/Q(b$@:Z"k[?V+O8iRp_poYFB<Nm%[EY"l_(c*S>,'6mr(-7s#P2p"m/<HXP9BjU[fc1[F*[2SW:)0Y@9<GRP<j'N-5\VG[UjFe-rmRP_@*PW5Ed`L7L;'DR:)G(U4GAt%lV0,hN5;-jk$TDE`!+65_?6e@@DAo]G#m'-:,7Gf)m@*lFWd%m,bYF'%m+KFE@[CGFjel='VCacm>CR6,[!ha\@:Y06sGk+:4.AO%jJNCtps!WRd2BPt0cY@RRC)O(g@t6'UXC.#ABAA@Yq36qP)[rABgn=k'&BL4%QeK"nsca;\3^=hd>oB`)Ls%:6`;,Q]i@:"=GRIR%hFQMYmjEOS,k7i?lV9pV_4$cS,8O-LAO$lg5i-FN6$%pS(&Q\JkcKLq$27r4gh4]F=.ni+ig98mSJ<Om>=nlj+c8G97Al0FHue7e%C_>Bj*I$RK<Y9WZSHX4uGH[g$!@mlSSN4aL-V&JXiVRn-7qm>e="k&R7Nb+@.*,@E)KB=(n1`=[C$:)O5XRp"-Aj==l,>(1!T8uI%g4tam(--=o5lSq],,MDkRB"8-?d6=ia"]M*HXkDp64T=f,t,RPk=3@'$I4`qnQqoj(2L7Dp=20TiO#U`_;lt-:&6o.ik)^U.p+Go%Qbqr1O_<U&RUr^N*n>oHWKSTOTW(V[S15F<1uk[ln%o`QeiQuN8<&1J<iVI!-=r!R>YL.Xp9),"KI7F=P$'YCIGL+=PJA-c/l>9a%[)HZ:qpB)CQ+*G&AQD%Kl4[`H]FnNtI@VYR?(<$BY;m^bF-l&FWFYJLE@F"&S*b"$NGlj^>Jb2&N.<bmFY)Js/fCsbp'<I.k*kB(%in]:+Xrbcd-"L60C>]5r:YNb)LUlH<`Vm$Q&*0[sL5su%q*7a,AI1=q1pkH7Er@]PlR7O,":bOGGZUCJ[Z-_3,+pks8':[Sh&HlT%?UeH8VB@DT,gYAV6i/i]W/2lB!+VHQI$(6K#<IaJpRm`*@-Gt/Xgk"AQ4C.O<0">ZaV0qCA]'pI(VB6m#,;f=_u0('`>_.e,,M#2%2N-Qs(RC_XT@IEnk'\8HnP'!5W3\g:b6#$h"4npIG8,W27Z:/%Kd3N(^`tk.0q#A+(Q,"pMf'`##].`#ehL;>+*8Tu5<r,jZm2Y_%ZPJLF9dMUR<uXeNmYm-`R_[+WSn0Q,i`lb3F.'7gh?mC<-HR`7Q%,1kFd0dfTu8pem(.gaG%'IA=S5-Gm:J!RYZGpIh-iO)JshTl%`c@13St1&]+Q$e[kTnd*,_WikgQ9"d.]Tlo+p9!BG<JTe(`EGl@H(0#PN?nLfeH#eda\U\XZ3G!(@Lj0]T*oRPU"UEZId!iYG3M[%aajJ\bo@5*(*G]L,&"s7GUQ`?YSIR?XWj-)8d>EhCU0$lpT>f$?ZD?5X79^F-3Bq1SPnUtnS1bh,u3S8FC$lnHMk:Z:VGfYRj<4Q%lBE#U-%FU.Zaqt!:9>EF8l64m^#)R@^5d7/`6:!6s(I]tT3^oI2/k1=adX')+,D`f2Rd.29B"#PC8>_*W!1l\T<Bh0\_$?'+qHn@%IRu\RYoKHNFQb&g3Sm[^XY=;?a@;*Vl&2,Z`(,$@.WOWA<$`aPQ*_g(@TS:u'N%PrVL9J=nQffTkk#p]*pa"(X7tXTJusS7G>#D=%[YC]`c?p&,r*AOTMGUV^"b,#;5]Pj5h?Y,E\-W]&Z>9=,Q914dHF<=a*=Wc('$+*^9M!QaL!jIsK7qn#@56j4]gV1C@^WSVmq56&%Gg;h-COMTCFd0kS;,)"5VLVVj3I9,i1b+Oh0g]bAk^Xg@Rb?XPT`u85S:M:\aT8j+RB/pkYT1lq%KatbIbRm;5a:ZJ*,d9Ikf;\'%L%+i0c-&jIWTsu]6!jo%f'.9*>fL2O=AK(Hj2"(F&ech/iEt_pSHSIgS/=(:CmkuM_Q)s0TW`]iX9*hn_H;E3+gf'n3>eF0G.DH#%X(;dHIAg=ndH@"_aKt8q+BljaP\+NPV)i/)T(BnbAt$2V1NMG+Us>i7XDV`$>hU>V%ZJ]W5RquB9fg^3'??Zb=RTUHR.PM8`TLMJ%-qn4u'=6LKF9kN+-29A$W@NAtUM,Z9JR66`Z-I&"Hu3j@i_l-Z1mn+Wao\?("(;@`X.`me8Tt_U-'ZSN1J@Ll=muQu_JK><6+BEH%(Q1lY/Gb@F3cPY/4cYiY>`i<+1i\D0-LpE/YG3ecQ"I#tIO7U+6j7m<eIthRnt0ln05Yb1,c?>g[PO3K,k9]1P_GEbC5$<!U,tHU%8;RidE@:=t*T@M3To(&,VWd_J->hr/a?&]fr2rL7nVVfZ>Kis]L9pB@/iC7?q0/5!FV;[fTpmI6.3m@.K?J>Xn6#+55gj5,M%YP$%BQ(_N;kaT#pj.DW7,ft@b;T;7/1f!=kuOe44k<j3buoe]KjYEtc.TtQ7TJg=5o=GD[gKZl8?gH5$3/""H]0RDZ.SNhY"WQaplDgn%:Oec&FV)G<<`L815[7hHC9ac1#!KMPYJ/-.`jdo)XUsM:B%++QOt<&j0VP?V?t1tL5;ZP7_13nK@n;57hp?E]bB5j=23bQh^uFKk%$Z*ZB^;j(M;#ND>`8Uk=8LiC:B<'<P(j0Ye%-<1=Al+h>XO1?89`$jXiuaW!_sBI1=YTe3`e.&?XmS^uA:fJ"_loR<4*rU?oqnc%%l?og#D5kB`^gK#V:EY+T<:Ie]3NCn3fVZoMGLYSDc]"e55G_kN1VZ@d6.F)f@#!k-dSu[J*Q$k"N!1l>297t'R.>A6`4%4Qb%Wn>%f%2Uu]SM]+JnY4.YQRJ'=-W<L9S)gfhP%[E!-2t_NF900<oM]"4@MqVV4o%jG1OH2?HF^L0Pll"4=[+[E&GEG`0Jg=J?Rgl:g2=?%%`^t21JAhrIYJA3=r7,04b!?YcIYo+s1i-K!*%q>`oL?RnE'#8M510S]_ebVG_*:@M<l+A7CP4`Ia-YY&%lW&?8T5bh'PP5MOTl7%)F$eCe4"_Y7rmmF7KnAjSG\c%L(bj^K-d#++[(T4Y?mfQA4\9AKeZ8c*]=$N<trs<;[tUtNcOn9/moH'G&'K(l/qX=](fjYATm_K%WHg)><s$]@&OEFcqGO3gEiD`0enH@HJcftQmAf%fb!?KMQ2l6:KWO$-#j8Q!0X"CCaSV>!`$@d(c82__U^OJS:L!f&feSkb9J-.`%8qZ&EcIYW!T3,P'E>G%&D$egiHGqgT<'*0so2Oo41%9+r#s1Us0oVqC=](:@Kb:n];J#IV/;&"<qIIguX`+[=*cV=?kiY6s:(Bs(%2k0OD$B$qKO3\<1VNn'%*mu2fC?!q-!Fs6nFn"5]r-"P#Fd0hR8Nu'.G9]3=^ZcN,<)5tS6SP2^q(lRJUEk5AYs6o<O.'K]V]nFU%QhA>S$JL$kBfg3/qV2u>-6LkuM:`K[hCjI-$;R6f00B.ijA1D&?jO]%KC)JdW5cH`#F'3"j?_b?7P,IX8KR$78REi:Hlksp$IpD[%Trl@W8iAC?HQ)Ed*@dC"J3(;k+ccWQY`R>,CSupfa(`-Jn)"hSE>j1*i_nWjG([ibm#/NlB6$IfP"C*R[^I'&2&R;%h*iK0KECnV%=ou?XGa,&6*8>:$.[p\_lS.Yj.#UkP4TtIl\`P>bZ)5<cm(5GAq*MV71djig##;2Li:;iBnm&<rg#\!>^u@i&(b5qq!u'Fb>Tip0%27Ah;)Uq=hf39Q/)WE5((Y0eK<!fBP^h"=1pjKGq[j/jT4IoYe("K7M`02e+bka$\lR7^1a7%@m7YGGW-iC"ql59:o+kCtJ5HXV#%h9&HOm""Sc^ac;e/k.??YZZKO^3I-jMq8EX$8AP$;j/I>hQNJ[s5uiGk!Ujq3\@l)KeWgA2Y02-ktS;b5:>K)0Ue4B_*5srPL8$+%"E>6)?QA3V*Mr:_-2csT>?im@Z<ai^6E2uqJ[&HJ0%F"59a+</DejGo@3THpLGg'G>=_g,o<U1+,ih^V;%uV=rHN)S:Sk\ihfV=m%q;ql:7Xe$n2OfGml*K&aJI=Ebj5E^DHS>eb8n740c/h?Ea_B2T;&%o`cj/r[aHk'#7e<?][Js_9jIqGf[.%P9OA)B;WdD&;(kupl%I"pL]K^N9UY%D/kZgVHQ'n*C62qZTI@l(Yp#JF[3j=\AXg[LmM-.r@#K/P@HX#Vqa\*`M@OeYpgXS(ieX]J!d;>;j,lR7QbAZd/i%=gP-%oMlGf(2HCRKHkYk67(MDh;r(N`]VtMGAiaV,(RMB0A'l9,Qu,(3O`Zc50]&6gpE$S(K3:i/b]`slsgAbcgD%kX4plH6(`:T%%paPVkQ3WFp;%GZ+/(c"W#oZ"*Mi2(nt!0P?SKCX?1dMe\NZ1Qe;\qC@SgGIfj"RBSY9'9o::)(&L9\fk[ZTs9WJ4^I7ICIU_0Z6%3pV'7]1ia3O:u&Q>9?e2S>/2mF-U1@3$KB"K<,&R<^4_*.=/97)c#kbI%:E1I/k[XO\kN\Ug-LeY_GDh1@`7!!f:H\(RG1*F-;fs%Q,m#^,dD2VPJO*<lRe(>UT<9%%o6;Ioin7[OLYU2r3ka4bKt=`+Z"L>gWB/9)33:Qd;p0)=W,b#>>>$43K3tfPkiLmYG3AW#P4Q_%am>Tu>MK,p6=S\\#'EA#Kb]F!gEeY@_]I:U.=dP<@3Ze,K.#UGPWD*7/,I/^CK@d,]<_kU)FEMDp*6!/[/c^\g[@\FL"KJ5.odTN%Ppb-FQb!JNYOiBQ3*h46^!?F79&fH$rsD)smU5(tm@hA<X4e@IY&s4VoRYPpO\KJX_T;dH)DQi@27)!mc2of+2<2!_>8FJ-BPf*i%CiJKQ<t5:/QN`18hLN@1Xf6"[&9e[R(<O's&4'GJ#=^V3mlc;k>tp:g.#s9CT_LS4lR7Wd/11Z</j!_"ciVR`3K%a+/SD(K5t.2(%!n3u5O;2*<HfiV"`$g`-P:=Qc)8kH5jf$qubGjJC:qP&h2mC.S\7-AO"cWrt%-qNSHF"SdkP\>0/28##]iO3ZR<CKJc(Xual9A#>%3f;qO7"<kNp5PHMdESKDd+,",E!_$p*:BJ6![csI/VUo?/K#7&Mt+GFO.**Rp5tGT"Z@%cL/iY8"NXcH6jIleIDGpF2.CZ2'.HRD%PcDkf]/t%ZljMsOP4"@*Waj)9dq(iq[0iGD52]Y/+`!pXT&*K:Sceb@0en,B55":cYj3RRn)EV?;)4i*crr^/RM9fV9%)DLJa3CP%[9Pc.88E8aqd>a\Z5r<0h!KH&/J>qGc'LNH9X3/5NS*mZ<!bFYV[RC)O,ATS!q;K6=oc?O$30"?09o%,&7b@iO^o#$M*>;5RRK7H%)VaHtaf*`uf%3b7T1W:P?%E9I0,HY<16Aec)uIjV'KPGGVWp^F.$dM!AgHeIeCu"ZDRpR>R0d`<47sLX.c!X`12R;.=S"E920l5J%&g]0bBHJ$^g`J-c"9X%U#VJili@U?G2OEQ<YlN]RXjZOBYG3ecNUMgd!7`((CN[[W=NkNGc25Ru#N(2N6%TOT_AJ_[2./jiM5:BN%AZ5`aI[knY86gc4Vt>f.+K4P3^h>6=6.JrFk]TaJ))WD5qB#=B@<PWWd^7!fmANt;1'fS?l1?Hfp-Rar-f@0^q`5)EHdGP^qWqYY%O5"dqi>_21/s<=:!r]o$E`4r#GpTf_N$[Vc%'CCbr="dB.;,(d?JnE)@`"P_f#-J`G&_jgI'dr2)jW,Rl,'S9?9(_K;T:O!I.d!%%Q^nXR_kHTW_3p9*T5+Y+d/-CA7o=Xthic^2gik&ZCe2@OH"p5C.iCAYi70UG-1\@7YY=DI3MP716#U[+0!pdcN0)T@cu2.Oab6tA%Z2ig7]"7'Qn*&aX"[GuD'\n^*-o9X0L7"fa&3Z.JBcm<S>$l.\QG7eJ3s;frZ61!j!%MteCt3>FGd<E@#G%$m@:>&fkY`55i2hU0%KLsZH9l*#k<P8jcF/3,FNF][Pl4,b"%P@l6M`J7G#'5iVT`<9,q5N?X?6)b^L?[6-EZ0WsoD[!.g?`%U)Xq%pCjUTB^'^F&GfN,0%*KH%LnB(EKcN.8uF2U!O<]R;l6B^]MN*_dRh)<'D_1>pST0]XE?<VG/lbOmE%XM>-&BhN'@f5ci(nn5.6QLr"HM=a*A#XmDnaBNa%k]Qg2HPUS8L)K6#`p^[H!'FWN!dpQD3X_\m^Mf:Pc,/:cY7!68F_`>_lb$N(KlBT!J#TUY$&GCHW]CmOX+>3`IU[dBb^%#7b0c4O%`7Y!r0738*Vh,,rjD(=gEd=%]]h]HC/Bp_8hS#0I.U'BOPF6Gu^6a1u;('kthNCBmZ#2nQWCiu\lgaFHdH<#<g:n0i,\,^6A'Vj9%_$9Lh_WeO?n@!.S7@BRNoC&:KX"uO7&T%MUfSoDUK7D@,huCV@V0[[&V)*?U)dbari6$TC\54P-U<Q-j!VZN"EWB8?g/XV_-F;UE%IY&%RqmCG.#A=N8M'@J:c2)W(cRgKU?f[Pb[XEqj8jW5t:bXQkf<MhCGo]`K+B>SWX#&GE&prB6(Ur$1E<@C,LO\+&hlCa,W:[u\%@7YL8kKj#IjliMh_c[j?fT8mt5(g?`p;u=e4cFo;s/*P'o7Gm*OlHUA%.&qVYPM+k^A\.?+>;?sY?sG[a/e3=h,,UGhneu^@]MR/%]QA=!=nFT?)?96-46.oln)a"QNRR9.-gEWYS"3<.IRbq+BMp7tKl20s0m54T7fJrOHrN.^5@=L^dUIbSHeKE%/]ZJoo5rc:^S@6B%(4J9Xbc?;^%DN`2Cjl#lEAC=fkk#[_rR2NV"oO?rFbI>E3nrFSX#uBC:7&c>?dN/7JtsrZC1u_nE:?.DIU.SYD1LRqh!2$8Vq^%L%!gnkaE&>i=aETPEl%U3f9mO1BE:-;'!S+TPS(l+30XhSBa/!4b4g?d7d/)`40K-T_fH&#-10W75^^1g1cD7$OQmq7mb\[e_9&fe:%QLEatJ%:,Zq5R^"r]Bj2MdQILk$kO=0QM6i`;d*5rjT9TS_]"4,G5X`C,E73!d<Es3>kY9$rni8T=s]'d[ZpGpT+2e_n1:(rC8u3%%m+C&KfLfH0Q,P)PNS5L-FYf55n,WsR,b4*@ut!sJt>]432Z&/\[q&.1SSYf)KfG29]dkZmdOMJrej):X,^FWg2_^+f,VgeK0\h[%VF?>_Y-bD#AW>k&af9RkVu%N8<.f7qC_C_ODH9,enDAAI&'!c[gb5kt`HbQA+<Wf;",SXg="NXAZPfjl0V-#q303+oh!Uq6,EoT\%Ki.jKcY<cjLdf@\+Z-V/IbH4eOhY!5TML_?#:ehO^ipJ/o4[hN]o?@um/,A803I]Sr;BG<$#r)-P16-')4?'EeR1^"[t2]!3V<.t%aq8`hAX<g1c3/b]#Zqp3>ptNpbh$HGNZkla-X1#""4&^Q`N)-g+TUN0D9%hT`/-XUZT]]fJHh5=PQo&:$p=eYDYj!!8<?3,9o:[?%gXJ#qjhmUlUEmKkbkc6P-b3)5g[Ysh$utpf:$JAf]1_rX;jCAH2;4Ta)%?QITW*,m>o^H@VNpM]U.[k]n2+4B3mH>O2FXXT7OlD(%V-2n,?uq_)'7BK'&IUqk05[I-hZIGLlLB`ZRInB21SKATBjXA==@h@ni82*eoks_[P<a<U-'he+fOpnc3e6?:fb[6OA:H-u*?O(X%5mSLefXXZpeas[Bg,A]KC4oiAr:M*[hP3bTAg]Ka-/rQ)PZ89,C&7D*^J$G-"a_Sjf,!O[f`B*=d[,HRp2uP;(PeB7XI\-ar`<g"%L,O6tM!oh)Ka?AVQsl'SKtS168/VjekfZeE2/Pqo@dPo$$#eI4Xd1!Dhb,<:JtZfUd@r<I?;h3[k>68rq4u!\`L[K"8"YuFWuZmM%A9>lUg+%_!e@04N"h2rpg=K1=^8UOp`RCoLR/eRZ/Gm^q/Z;'%<fmL>)8)V\]RC*D75iR*Y4Y0o!I6C(&R#s,+&'%(1mURq#b(k&%dJWN_"o%e7ja>GF,&Pf#2<:S./[Guk6t3SZJ+qK"S:XXUNb1#A@=E9!O3Q)0:34.0P0c'g(XWpf5,>i"[+km.\UQpZ(2pn@W57=d%BX,hcKjAFJA"ii[m?,(NM@glp'(t\LU2[M(P=`Jg<MLrl01+0X"bHn'<300=kWjrm@rpCDh4eL29LS*DZs6iF6\rh3`VRMjG,m)W%GM=4'!@Yq'66W8-Ya"KAc-J;k?o>:A-59hbUG%hFNhW2*O7^eYQ4e#^'%H*?]>Lp-!3<P1\,^!r]E,aK2(0O!aUZ/BeFUT%eT`;_%_HVUIYs1F%H:6.opB%dm9R2S&]ert!PKb:,k5Bj,Cci:PE^g]OR`>R&3?qZ4A)h57QgYXB(-fMR5\oWqF2!ZtGV%&b]C5aESbL%2%Q8ad-8>GZD/?Jj&+.-N\!Cu"*066/9H?8Q;E**aOLsP=[5`nf"Qeibqm2UD2B1K+D,-lZWS]9e;&6]hB%jaENcbLQlb`%0`+I:G,%p-'8V3OI$$fOi7h@FEb)'Yd&kE3S(Vgk3>SM-r"jR6+'o6SpWea`mR9]_K9g-5X@H^UQDIYt"")N&#UrYq]g(OY\S)/8pNA.9k_I%L2l4[)3XaqO_#X6`a)_r"7K"i"3df_;E?'7\Q:N>MCfZ&K]<3A846f3I2tab=*7q=3rH:MJB('o%%\R6&tR&,/D5l5hn+Vmo2:.q%]X$i85_ui/;iu1?:J+to"BEF6"_RibBuTG_iSJr"n22X&Fb!:_[m4[Da9eO0m$5(Dr#&nB=sZnI1(!IN%D$@pW!_uImHZ0Z01#_U%XkkqZ]lSZ\43HCa%rqh)4KW!V>$GVaVek]7H!;;O2OFf_OHTo4dL&=s<on>-QVWRF\s;-C;oJ2$<N[RIN&W<F-ce'%ce44g-F]\3%(kAEJ#Fef#_R51J'Q<_M>Bu/R$E%TF7q"NBn4mX5@q__?Oi:O8'_]J+!fp8WJ/tU,)I%_@DMjGGWW?D\HT7s#]BHQi_98uE@2%e5%=Uq<o+S>%iI*R+4H3eAngq81Vc>=+0KDbH\(1KJWG5$"A)BH-gOWD6V*-:rCbG;>*,bCN3RF@kMQ&Qem2_KP+OS5F;K0iGp1c(ND%^i693i*eOm^dE4kA%)SoMsjRW:[Y6f2j$^'@)I-8'Fm#K($9%`$^#OAT5Ami'B]^sV:rKlGHn0'^oQ(;XK$Y%mHc\QK(LnWlR2pT%*s=NK==$]*EU&@S$Q@)3hRiO)mbW>6<q5EsA=+7e5bZ?mV%&a#9f7[BP-TZO8N.(d9=gh'iXj]u^SilmXPu9GV$@E(ar9BfV$DI3%ga;sgCh*uPNA6nC&(\RFO+J2@."7`[Fd.Tt_l0`5j>1hEN[qDp+4US2P.KO,gNG15>P2NXQR#U+pn?NGO>,C%].%ng)6jH-Jd`]6%1q,2;CbKET8iFF.:I?^]kR)*TQD5:VMgtlu&N+>HE2N_gqXI0q.84Y\LJnk7Nn5.U7l`\O=4&lM'Uk!aJkdq7R^<F],i[NH`Kotp%gDMKhG,eE5#)illYuCMi:j%mQr*`qic"To,d>!=h/n(-/G;681,5$0[lSb654t!T<Otg40'q'3a27.b7eE?mrD'H5%Wo1K$(aoHr%^J+Mc$KDd5k2b8cfS5C<>Y)1mD1Ku#?@n=`5fQ5^2.oVnC@*/i!)*Td-Nm39<3e@tlXmq#5agsfU*aaM]_1##csC,J'Z(%D$>ooF%SWL*tWS=*k=JKZLY(&2a5Jp[k?d8pXP627l[B1Tu5_gdq-TO0QJ.sBW,MpmC4i9*/5-hEm%lZEs0,ZnTG?Ad'>)4iNeo#!af^QK+%+d>I@_*A1C6Pd.BkhZlBK#QAS^4j>J9Z\LX0UePD((`'BN<EO&3\qt-%\0L"QA-VrR>@8`,YO)-'P*hJI2unh8No"25im`O<^CGs%j'Ta^hkQiYfa^nnJ_@eI3m*ebBTQOTS?/s@T>m2M[ul`E1IXdmDY!)io/Is1n:%'H-]KM1OpDB3a"6%1#g66%SI%^!Hun!k'+TFK%W=hHh,Yhs9#jCQ-1<^g90^%aMM9#F[9$3p<aEG2Q_AJq!J_D<dO;0+P/]T2t`+B,%nb3s/S7&;QN2!V>>>\A<&nr,$D"oXn3I1(B%NFO>G&6T_ciXg,"pTut$_+d)krlZ=uAM5VeL8\/]oAP-r/Xp(EI3"%#-n<C&Bk&cY&QqY$KsV.66DA4YJte-2=NKDHM_+:>.]rI7%7?N/W2X!'"2Rrua(j%"M>VAe*bck:24-;mnf[67l3<Y80<VfEI2i%bON_eE*I/uO`*_u[j-$iCm7kWWg2?HJKIaZhF'MfcIXdnpT%FTf&k@;0T^oGNjG^pm./!usnb]8RhBQ?+Y[/^'J%2Ud:gEu1N^`=X&jIWMDP>XWK;1o1+%,oN8@(`M0t8;oIca;VqPmaI8#d4LH7%WF<%EYn4MtN.W+DEgJ1-LtLdD3F>9J4I^"r=bTD/boEu<_MR_Ypg+<,@1D9)_YC5CSn1s\_Ur)?`siSi2KiJ'XqV+*dbrp]UeoWc%Y5kjh&:!)C1T&9[5'W(T't/clYR8BUF0KBk6GW&m?fFd1bIg;a>^*DeO<9m#lfj&qIb*+J(>_KrE[6il4!0oqH*TZA<]=4oFZdCf%d1hgQL+-H0.5<=Z,Ft9joncE=9QJ?EdP1-=lj>S_-#K^V5+)?M3),p.N1_L:mBr3,r*&f(b&9-C5Tj*C$]9@dWF'7c*G+bTQ<?M,%dp_d:e8gu/oiB@irMI$glRQ+F$l!\)m$a%[W;RkN&N)^m&[b'PC\A=GrMidKJn(ISB/+r=3k%huKmXT?\8%Z4)?rh<#%[B[^,u#\%Y[UQW6p-slojfQbps2,#f,nUQ*G+bOKc4I89UR"'743u)`*e\V\>"MJ(EYS5RS>O!:)TmV7Irb=jO9u@/[E@(>Gj-3AfKsBHe?'A%NGA>!UpJ`OqEFOd*4&c_;(m"#r)hcg.H7`W3jlVb;hCU!"Y)7Eb$oqR8RFtbI%GJh'QkP'b_V!sU0:q_@RN_uPb*OuEHA$G?;O<Y%#K\7.`mgk"a@L2OPU>c(kef74LoC$oOX]CiHWOXZ9Y@qn28he1GqIBB0O,"(4%$@\?]8o($d7k?,rQGY_Yg!ArVJT^-UBl'=clR=%'2hO)MOGtSns_TN(0C$T\'2FXTt'j*a*(cbJRbh*_FU(i.2&_9Acdl#B[\02f`UodIbjpE7e*^H7qjljq(;0(:^H-pgGWf5Y`]T$%*Q6K3J5'c@R;5JnPh3+F^5fMo,]*gnTPn"meEl!NcY^6kR-M(;#N;0#?VCN52^,_MZ7ba^[/REE&MF-4EjaXu]992!6)#0Ahf=,6%>k;"UQ,WA3b$WUB;UQ'6Hh(X9M$=Em0mG!?"ou(g2e$4[[\)ooH&eY$RmS:[I3#0S8V\<b/MhtppfQQu41ic^.[;#(6Zq22(G&RN%Z`/W\,bsLW0%`?J2QHno^o.\eFIK/cd%DM95^OThf;WR&YoM#Bf87bZ()`)Vj?b1R`_h[>^d>&)",g1ofP/38keSWOo3oYj;%AW`%nd'/^B3EDobQp?$3tW'!0#Po/(56Hq4:EH*F^+U9BFY7--G-B7L9b>7!Tb![XOQ<mef_B&m\$I>nS6$,gmEI^Mq6,IR'%Ibi<Ak0%OTi-N01QP=6D]P7buf]4>]Cj_HlWC\=XP5Tga$c*`4_iElrU1)4_`fJC[rB=3Xn*$"3=\If(Y&X*M4Qdl-iaId*f^C<eQWl@-WE*%lb0mfq>Q"6A!(7+5m&*3K"gtQNqH/"]<P:lgU<@.9L2BJm^%f]SZBRtUjKIJdU6HVbnaV5I2tcHJCE-2B+Dr2h*7VaK6rZR?TR"1%E''EGf9a;fnc4qGEMe:rA,ZL%7TX$.%it6P@o,bU8J9ccXKjV_`faInnXe9fLIL>oYSe]+Wke0/<fmQuakb6r8?ihjBA`dp38<7!%:h`#NaVN(k@G]U5)P<f6#7lFj2*eb?,Yq:A%O>YgHS95Vd3+cPe?p,Ul,"3RG8]G(,+,q+@u/,gT#6<3>fFHajBX$e,>t9&^VTdN%<3/.L&A9hu+T*93]gjFjV$G@u^tG.WdNR<d.#KQj3rj(nnq2W)aG4J:7q($Q#D[h&LMf=d8&5oZQ4rE0`0cZqQI<8hMs7[bhT;%l%UVF89jij+/V?biB`S[P\iCU?Z>%B8^.8"VCkd.6QM.<E'F!1Deb!jFpQM"$NApr\<*VGhP@]4RH77HrCDa>8sa=`*k-CmWQ;\upu%VN[0385tZt$1U.Wd5unb-RmcXA7QkEdiFEu0is2ocD\s*<_2skp4mk"\[uudK-a7\N;3S=$e\YtK1STBPbOf^R4u4R?IVLrG(JMc%2t1@pEm?0HF#K'0'Trl$L5<#BUV-)K0Np^IQ^^I&d7.J$$LHLpM"?)Df235h5oTh*/PnN2q=[_uUmki0?S@/09L3\X83(1]krr[S%Aiu0>`blk$3r.A5l1O_.\UAZ:biIT`]6S#XSt$Ol`LY+T$5A/74rjnDgH`V/3nXb)%7\O0NZAG]7T>R4o=W<D3f2jI$-jQ)a9E3.%j#;Vd/YF))BA/\DP6`B=0nbIP<S7e?<)9g1R=i@!`B?BnP_+7aW&L4`Tjb`t((p\I@r;,/F[dTH7O*0CEX<`JX_F8c?+;uS=(%5$%*kU,7k8H?-f[Rb2A^]1-'VA?b"Y6\J)@ge:HI$`)1JD@ALFn6APS#m:I]N)m/Hj3=e*5gZp9>jpiYsqX.gf):r<JZaDC6uAV`?tu%rjej6@,q`k2q"Y]YY/sFo^M/!53:E$]4*hcM3W2:&Qm9D1uGuejm=bflQhA^)#HPsk<Jn6TDiX+TE"iPs7OF)rpAn+If/^H5Q($.%J,7X?s5US\roKK=J,@-UrpnNFIt%:Zc[SELr6PE+r]b=NqX*I\r83#&mH:snr9o.6Ii,_G&s*(^_a"11s71sF%n]L0[/~>%AI9_PrivateDataEnd